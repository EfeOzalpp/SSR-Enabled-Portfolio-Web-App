{"version":3,"file":"static/js/26.07fa47d1.chunk.js","mappings":"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","sources":["ssr/projects/dataviz.enhancer.tsx","utils/content-utility/real-mobile.ts","utils/tooltip/tooltip.ts","utils/tooltip/tooltipInit.ts"],"sourcesContent":["// src/components/dataviz/DataVizEnhancer.tsx\r\nimport { useEffect } from 'react';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\n\r\nexport default function DataVizEnhancer() {\r\n  useTooltipInit();\r\n\r\n  useEffect(() => {\r\n    const vid = document.getElementById('dataviz-media-video') as HTMLVideoElement | null;\r\n    if (!vid) return;\r\n\r\n    const cleanupFns: Array<() => void> = [];\r\n\r\n    // 1) Upgrade poster to high-res if provided by SSR\r\n    const fullPoster = vid.dataset?.srcFull;\r\n    if (fullPoster && vid.poster !== fullPoster) {\r\n      vid.poster = fullPoster;\r\n    }\r\n\r\n    // 2) Load eagerly if needed\r\n    if (vid.readyState === 0) {\r\n      vid.preload = 'auto'; // can also use 'metadata' if lighter load desired\r\n      try { vid.load(); } catch {}\r\n    }\r\n\r\n    // 3) Hide poster after first painted frame\r\n    const hidePoster = () => {\r\n      vid.removeAttribute('poster');\r\n    };\r\n\r\n    const onPlay = () => {\r\n      const anyV = vid as any;\r\n      if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n        anyV.requestVideoFrameCallback(() => hidePoster());\r\n      } else {\r\n        const onTime = () => {\r\n          if (vid.currentTime > 0 && vid.readyState >= 2) {\r\n            vid.removeEventListener('timeupdate', onTime);\r\n            hidePoster();\r\n          }\r\n        };\r\n        vid.addEventListener('timeupdate', onTime, { once: true });\r\n        cleanupFns.push(() => vid.removeEventListener('timeupdate', onTime));\r\n\r\n        // Safety backstop\r\n        const timer = setTimeout(() => {\r\n          vid.removeEventListener('timeupdate', onTime);\r\n          hidePoster();\r\n        }, 1200);\r\n        cleanupFns.push(() => clearTimeout(timer));\r\n      }\r\n    };\r\n\r\n    vid.addEventListener('play', onPlay, { once: true });\r\n    cleanupFns.push(() => vid.removeEventListener('play', onPlay));\r\n\r\n    // 4) Try autoplay (muted/inline usually works)\r\n    vid.play().catch(() => {\r\n      // If blocked, poster will remain until user interacts\r\n    });\r\n\r\n    // 5) Optional: pause when tab hidden\r\n    const onVis = () => { if (document.hidden) vid.pause(); };\r\n    document.addEventListener('visibilitychange', onVis);\r\n    cleanupFns.push(() => document.removeEventListener('visibilitychange', onVis));\r\n\r\n    return () => cleanupFns.forEach(fn => fn());\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","// utils/tooltip/global-tooltip.ts\r\nimport '../../styles/tooltip.css';\r\nimport { projectColors } from '../content-utility/color-map';\r\n\r\ntype TooltipInfo = { tags: string[]; backgroundColor: string };\r\nconst tooltipDataCache: Record<string, TooltipInfo> = {};\r\n\r\nconst LOCAL_FALLBACK_TAGS: Record<string, string[]> = {\r\n  'block-g': ['#q5.js Canvas', '#Gamification', '#Lottie Animation'],\r\n};\r\n\r\nconst TITLE_BY_KEY: Record<string, string> = {\r\n  'rotary-lamp': 'Rotary Lamp',\r\n  'ice-scoop': 'Ice Cream Scoop',\r\n  'data-viz': 'Data Visualization',\r\n  'block-g': 'Evade the Rock',\r\n  'dynamic': 'Dynamic App',\r\n};\r\n\r\nfunction bgForKey(key: string) {\r\n  const colorInfo = projectColors[TITLE_BY_KEY[key]];\r\n  const alpha = colorInfo?.tooltipAlpha ?? 0.6;\r\n  return colorInfo ? `rgba(${colorInfo.rgb}, ${alpha})` : 'rgba(85,95,90,0.6)';\r\n}\r\n\r\nfunction createTooltipDOM() {\r\n  const el = document.createElement('div');\r\n  el.id = 'custom-global-tooltip';\r\n  el.style.position = 'fixed';\r\n  el.style.pointerEvents = 'none';\r\n  el.style.zIndex = '9999';\r\n  el.style.opacity = '0';\r\n  el.style.visibility = 'hidden';\r\n  el.style.backdropFilter = 'blur(8px)';\r\n  el.style.color = '#fff';\r\n  el.style.transition = 'opacity 0.3s ease, visibility 0.3s ease';\r\n  el.className = 'custom-tooltip-blur';\r\n  const root = document.getElementById('efe-portfolio') || document.body;\r\n  root.appendChild(el);\r\n  return el as HTMLDivElement;\r\n}\r\n\r\nlet tooltipEl: HTMLDivElement | null = null;\r\nlet currentKey = '';\r\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const fetchTooltipDataForKey = async (key: string): Promise<TooltipInfo> => {\r\n  if (tooltipDataCache[key]) return tooltipDataCache[key];\r\n\r\n  const bg = bgForKey(key);\r\n\r\n  // local fallback\r\n  if (LOCAL_FALLBACK_TAGS[key]) {\r\n    const info = { tags: LOCAL_FALLBACK_TAGS[key], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n\r\n  // CMS fetch by slug\r\n  try {\r\n    const client = (await import('../sanity')).default;\r\n    const res = await client.fetch<{ tags?: string[] } | null>(\r\n      `*[_type==\"mediaBlock\" && slug.current == $key][0]{ tags }`,\r\n      { key }\r\n    );\r\n    const info: TooltipInfo = { tags: res?.tags ?? [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  } catch {\r\n    const info: TooltipInfo = { tags: [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n};\r\n\r\nconst showTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '1';\r\n  tooltipEl.style.visibility = 'visible';\r\n  hideTimeout = setTimeout(() => hideTooltip(), 1_500);\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '0';\r\n  tooltipEl.style.visibility = 'hidden';\r\n  currentKey = '';\r\n};\r\n\r\nfunction positionTooltip(x: number, y: number) {\r\n  if (!tooltipEl) return;\r\n  const rect = tooltipEl.getBoundingClientRect();\r\n  const padding = 0;\r\n  const vw = window.innerWidth;\r\n  const vh = window.innerHeight;\r\n\r\n  const nearTop = y < rect.height + padding + 20;\r\n  const nearBottom = y + rect.height + padding > vh - 20;\r\n  const nearRight = x + rect.width + padding > vw - 20;\r\n  const nearLeft = x < rect.width + padding + 20;\r\n\r\n  let left: number, top: number;\r\n  if (nearBottom) { top = y - rect.height - padding - 8; left = x - rect.width * 0; }\r\n  else if (nearTop) { top = y + padding - 14; left = x - rect.width * 0; }\r\n  else if (nearRight) { top = y - rect.height / 2; left = x - rect.width - padding - 24; }\r\n  else if (nearLeft) { top = y - rect.height / 2; left = x + padding - 4; }\r\n  else { top = y - rect.height / 1.6; left = x + padding - 2; }\r\n\r\n  left = Math.max(padding, Math.min(left, vw - rect.width - padding));\r\n  top  = Math.max(padding, Math.min(top,  vh - rect.height - padding));\r\n\r\n  tooltipEl.style.left = `${left}px`;\r\n  tooltipEl.style.top  = `${top}px`;\r\n}\r\n\r\nexport function initGlobalTooltip(isRealMobile: boolean) {\r\n  if (tooltipEl) return () => {};\r\n  tooltipEl = createTooltipDOM();\r\n\r\n  let lastMouseX = -1;\r\n  let lastMouseY = -1;\r\n  let ticking = false;\r\n  let scrollCheckTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  const updateForElement = async (el: Element | null) => {\r\n    if (!(el instanceof HTMLElement)) { hideTooltip(); return; }\r\n    const tooltipClass = [...el.classList].find(c => c.startsWith('tooltip-'));\r\n    if (!tooltipClass) { hideTooltip(); return; }\r\n\r\n    const key = tooltipClass.replace('tooltip-', '');\r\n    if (key !== currentKey) {\r\n      currentKey = key;\r\n      const info = await fetchTooltipDataForKey(key);\r\n\r\n      if (!info.tags.length) { hideTooltip(); return; }\r\n      tooltipEl!.innerHTML = info.tags.map(t => `<p class=\"tooltip-tag\">${t}</p>`).join('');\r\n      tooltipEl!.style.backgroundColor = info.backgroundColor;\r\n      showTooltip();\r\n    } else if (tooltipEl!.style.opacity === '0' || tooltipEl!.style.visibility === 'hidden') {\r\n      showTooltip();\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    lastMouseX = e.clientX;\r\n    lastMouseY = e.clientY;\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n    updateForElement(e.target as Element);\r\n  };\r\n\r\n  const checkHoveredElementOnScroll = () => {\r\n    const el = document.elementFromPoint(lastMouseX, lastMouseY);\r\n    updateForElement(el);\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => { checkHoveredElementOnScroll(); ticking = false; });\r\n      ticking = true;\r\n    }\r\n    if (scrollCheckTimeout) clearTimeout(scrollCheckTimeout);\r\n    scrollCheckTimeout = setTimeout(() => {}, 120);\r\n  };\r\n\r\n  const onMouseOut = (e: MouseEvent) => {\r\n    if (!e.relatedTarget) hideTooltip();\r\n  };\r\n\r\n  // only attach scroll observer for non-mobile real viewports\r\n  if (!isRealMobile) window.addEventListener('scroll', onScroll, true);\r\n  document.addEventListener('mousemove', onMouseMove, { passive: true });\r\n  document.addEventListener('mouseout', onMouseOut, { passive: true });\r\n\r\n  return () => {\r\n    if (!tooltipEl) return;\r\n    if (!isRealMobile) window.removeEventListener('scroll', onScroll, true);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseout', onMouseOut);\r\n    tooltipEl.remove();\r\n    tooltipEl = null;\r\n    if (hideTimeout) clearTimeout(hideTimeout);\r\n  };\r\n}","// utils/tooltip/tooltipInit.ts\r\nimport { useEffect } from 'react';\r\nimport { initGlobalTooltip } from './tooltip';\r\nimport { useRealMobileViewport } from '../content-utility/real-mobile';\r\n\r\nexport const useTooltipInit = () => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    const dispose = initGlobalTooltip(isRealMobile);\r\n    return () => dispose?.();\r\n  }, [isRealMobile]);\r\n};\r\n"],"names":["DataVizEnhancer","useTooltipInit","useEffect","_vid$dataset","vid","document","getElementById","cleanupFns","fullPoster","dataset","srcFull","poster","readyState","preload","load","_unused","hidePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","removeEventListener","addEventListener","once","push","timer","setTimeout","clearTimeout","play","catch","onVis","hidden","pause","forEach","fn","useRealMobileViewport","isRealMobile","setIsRealMobile","useState","checkMobile","_window$matchMedia$ma","_window$matchMedia","_window","touch","navigator","maxTouchPoints","coarse","window","matchMedia","call","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","tooltipDataCache","LOCAL_FALLBACK_TAGS","TITLE_BY_KEY","tooltipEl","currentKey","hideTimeout","fetchTooltipDataForKey","async","key","bg","_colorInfo$tooltipAlp","colorInfo","projectColors","alpha","tooltipAlpha","concat","rgb","bgForKey","info","tags","backgroundColor","_res$tags","client","default","res","fetch","showTooltip","style","opacity","visibility","hideTooltip","positionTooltip","x","y","rect","getBoundingClientRect","vw","vh","innerHeight","nearTop","height","nearBottom","nearRight","nearLeft","left","top","Math","max","min","initGlobalTooltip","el","createElement","id","position","pointerEvents","zIndex","backdropFilter","color","transition","className","body","appendChild","createTooltipDOM","lastMouseX","lastMouseY","ticking","scrollCheckTimeout","updateForElement","HTMLElement","tooltipClass","classList","find","c","startsWith","replace","length","innerHTML","map","t","join","onMouseMove","e","clientX","clientY","requestAnimationFrame","target","onScroll","checkHoveredElementOnScroll","elementFromPoint","onMouseOut","relatedTarget","passive","remove","dispose"],"sourceRoot":""}