{"version":3,"file":"static/js/components.0d17b8f1.chunk.js","mappings":"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","sources":["components/rock-escapade/block-g-onboarding.tsx","components/rock-escapade/block-g-host.tsx","utils/tooltip/tooltip.ts","utils/tooltip/tooltipInit.ts"],"sourcesContent":["// src/components/rock-escapade/block-g-onboarding.tsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport onboardingAnimation from '../../svg/coin.json';\r\nimport { useProjectVisibility } from '../../utils/context-providers/project-context';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\n\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\ntype Props = {\r\n  onStart?: () => void;\r\n  resetTrigger?: number;\r\n  label?: string;          // CTA label\r\n  ctaEnabled?: boolean;    // gate readiness (pointer events)\r\n  loadingLines?: string[];\r\n};\r\n\r\nconst BlockGOnboarding: React.FC<Props> = ({\r\n  onStart,\r\n  resetTrigger,\r\n  label = 'Click Here to Play!',\r\n  ctaEnabled = true,\r\n  loadingLines = [\r\n  \"Loading engine…\",\r\n  \"Creating game canvas…\",\r\n  \"Configuring frame loop…\",\r\n  \"Setting up input controls…\",\r\n  \"Applying display settings…\",\r\n  \"Initializing game state…\",\r\n  \"Spawning player…\",\r\n  \"Almost ready…\"\r\n  ],\r\n}) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const lottieInstance = useRef<ReturnType<typeof lottie.loadAnimation> | null>(null);\r\n\r\n  useTooltipInit();\r\n  const {\r\n    focusedProjectKey,\r\n    scrollContainerRef,\r\n    previousScrollY,\r\n    setPreviousScrollY,\r\n  } = useProjectVisibility();\r\n\r\n  const handleClick = () => {\r\n    if (!ctaEnabled) return; // gate until ready\r\n    if (focusedProjectKey) {\r\n      setPreviousScrollY(window.scrollY);\r\n      setTimeout(() => {\r\n        if (scrollContainerRef.current) {\r\n          scrollContainerRef.current.scrollTo({ top: 0, behavior: 'auto' });\r\n        } else {\r\n          window.scrollTo({ top: 0, behavior: 'auto' });\r\n        }\r\n      }, 0);\r\n    }\r\n    onStart?.();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  // Restore scroll pos on exit from focus mode\r\n  useEffect(() => {\r\n    // (kept from your version — omitted focusedProjectKey setter, just restore)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const initializeLottie = () => {\r\n    if (!lottieRef.current) return;\r\n    lottieInstance.current?.destroy();\r\n    lottieInstance.current = lottie.loadAnimation({\r\n      container: lottieRef.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: onboardingAnimation,\r\n    });\r\n    lottieInstance.current.addEventListener('complete', () => {\r\n      if (!lottieInstance.current) return;\r\n      lottieInstance.current.playSegments([41, lottieInstance.current.totalFrames], true);\r\n      lottieInstance.current.loop = true;\r\n    });\r\n  };\r\n\r\n  const destroyLottie = () => {\r\n    lottieInstance.current?.destroy();\r\n    lottieInstance.current = null;\r\n  };\r\n\r\n  // IO mount/unmount of the Lottie\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            initializeLottie();\r\n            if (lottieInstance.current) {\r\n              lottieInstance.current.stop();\r\n              lottieInstance.current.playSegments([0, lottieInstance.current.totalFrames], true);\r\n            }\r\n          } else {\r\n            destroyLottie();\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (containerRef.current) observer.observe(containerRef.current);\r\n    return () => {\r\n      observer.disconnect();\r\n      destroyLottie();\r\n    };\r\n  }, [resetTrigger]);\r\n\r\n  useEffect(() => {\r\n    if (isFadingOut) {\r\n      const t = setTimeout(() => setVisible(false), 300);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isFadingOut]);\r\n\r\n  useEffect(() => {\r\n    if (resetTrigger) {\r\n      setVisible(true);\r\n      setIsFadingOut(false);\r\n    }\r\n  }, [resetTrigger]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"block-g-onboarding tooltip-block-g\"\r\n      ref={containerRef}\r\n      aria-busy={!ctaEnabled}\r\n      style={{\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        ref={lottieRef}\r\n        className=\"coin\"\r\n        onClick={handleClick}\r\n        style={{\r\n          pointerEvents: ctaEnabled ? 'auto' : 'none',\r\n          cursor: ctaEnabled ? 'pointer' : 'default',\r\n        }}\r\n      />\r\n\r\n      {/* Keep your CTA label exactly as before */}\r\n      <h1\r\n        className=\"onboarding-text\"\r\n        onClick={handleClick}\r\n        aria-disabled={!ctaEnabled}\r\n        style={{\r\n          pointerEvents: ctaEnabled ? 'auto' : 'none',\r\n          cursor: ctaEnabled ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {label}\r\n      </h1>\r\n\r\n      {!ctaEnabled && (\r\n        <LoadingHub\r\n          className=\"loading-hub--game loading-hub--left\"\r\n          keyword=\"game\"\r\n          minHeight={72}\r\n          lines={loadingLines}\r\n          ariaLabel=\"Loading game\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockGOnboarding;\r\n","// src/components/rock-escapade/block-g-host.tsx\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport lottie from '../../utils/load-lottie';\r\n\r\nimport BlockGOnboarding from './block-g-onboarding';\r\nimport CoinCounter from './block-g-coin-counter';\r\nimport ExitButton from './block-g-exit';\r\nimport GameOverController from '../../ssr/logic/game-over-controller';\r\n\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport desktopOnboarding from '../../svg/desktop-onboarding.json';\r\nimport mobileOnboarding from '../../svg/mobile-onboarding.json';\r\n\r\nimport LazyViewMount from '../../utils/content-utility/lazy-view-mount';\r\nimport { gameLoaders } from '../../utils/content-utility/component-loader';\r\nimport { useHighScoreSubscription } from './useHighScoreSubscription';\r\nimport GameInputGuards from '../../ssr/logic/game-input-guards';\r\n\r\nimport GameViewportOverlay from './game-viewport-overlay';\r\n\r\nimport '../../styles/block-type-g.css';\r\n\r\nconst GAME_MODE_CLASS = 'game-mode-active';\r\nfunction activateGameMode() {\r\n  if (typeof document !== 'undefined') document.body.classList.add(GAME_MODE_CLASS);\r\n}\r\nfunction deactivateGameMode() {\r\n  if (typeof document !== 'undefined') document.body.classList.remove(GAME_MODE_CLASS);\r\n}\r\n\r\nexport default function BlockGHost({ blockId }: { blockId: string }) {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  // lifecycle\r\n  const [started, setStarted] = useState(false);\r\n\r\n  // gate CTA until canvas reports ready (preloaded before start)\r\n  const [stageReady, setStageReady] = useState(false);\r\n\r\n  // HUD + meta\r\n  const [coins, setCoins] = useState(0);\r\n  const [countdownPhase, setCountdownPhase] = useState<null | 'lottie' | 'begin'>(null);\r\n  const [showBeginText, setShowBeginText] = useState(false);\r\n  const [showOverlayBg, setShowOverlayBg] = useState(false);\r\n  const [shouldRenderOverlayBg, setShouldRenderOverlayBg] = useState(false);\r\n\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  // game-over (controls overlay)\r\n  const [finalScore, setFinalScore] = useState<number | null>(null);\r\n\r\n  // High score (remote)\r\n  const remoteHighScore = useHighScoreSubscription();\r\n  const stableHigh = typeof remoteHighScore === 'number' ? remoteHighScore : 0;\r\n\r\n  // API from GameCanvas\r\n  const restartApi = useRef<{ restart: () => void } | null>(null);\r\n\r\n  // Idle prewarm\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    const ric = window.requestIdleCallback as any;\r\n    let rid: number | null = null;\r\n    if (ric) rid = ric(() => void gameLoaders.game(), { timeout: 2000 });\r\n    return () => rid && (window as any).cancelIdleCallback?.(rid);\r\n  }, []);\r\n\r\n  const onStart = useCallback(async () => {\r\n    // Preload the chunk regardless\r\n    void gameLoaders.game();\r\n\r\n    // Reset state & show countdown\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    setCountdownPhase('lottie');\r\n\r\n    // Mount the overlay (portal) immediately — no native fullscreen\r\n    activateGameMode();\r\n    setStarted(true);\r\n\r\n    // Focus for keys/gamepad\r\n    requestAnimationFrame(() => {\r\n      const el = document.getElementById(blockId);\r\n      (el as HTMLElement | null)?.focus?.();\r\n    });\r\n  }, [blockId]);\r\n\r\n  // Lottie countdown (lazy)\r\n  useEffect(() => {\r\n    if (countdownPhase !== 'lottie' || !lottieRef.current) return;\r\n\r\n    let anim: any;\r\n    let mounted = true;\r\n\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: lottieRef.current!,\r\n        renderer: 'svg',\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: isRealMobile ? mobileOnboarding : desktopOnboarding,\r\n      });\r\n      if (!mounted || !anim) return;\r\n\r\n      const onComplete = () => setCountdownPhase('begin');\r\n      anim.addEventListener('complete', onComplete);\r\n\r\n      return () => anim?.removeEventListener?.('complete', onComplete);\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      anim?.destroy?.();\r\n    };\r\n  }, [countdownPhase, isRealMobile]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'begin') {\r\n      setShowBeginText(true);\r\n      const t = setTimeout(() => {\r\n        setShowBeginText(false);\r\n        setCountdownPhase(null);\r\n      }, 1000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'lottie') {\r\n      setShowOverlayBg(true);\r\n      setShouldRenderOverlayBg(true);\r\n    } else if (countdownPhase === null) {\r\n      setShowOverlayBg(false);\r\n      const t = setTimeout(() => setShouldRenderOverlayBg(false), 400);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  // Canvas bridges\r\n  const handleReady = (api: { restart: () => void }) => {\r\n    restartApi.current = api;\r\n    setStageReady(true); // flips CTA from \"Loading…\" to \"Click Here to Play!\"\r\n  };\r\n\r\n  const handleCoinsChange = (n: number) => setCoins(n);\r\n  const handleGameOver = (finalCoins: number) => setFinalScore(finalCoins);\r\n  const handleRestart = () => {\r\n    setCountdownPhase(null);\r\n    restartApi.current?.restart();\r\n    setCoins(0);\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setStarted(false);\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    deactivateGameMode();\r\n  };\r\n  useEffect(() => () => deactivateGameMode(), []);\r\n\r\n  const displayHigh =\r\n    (finalScore == null ? coins : finalScore) > stableHigh\r\n      ? (finalScore == null ? coins : finalScore)\r\n      : stableHigh;\r\n  const beatingHighNow = finalScore == null && coins > stableHigh;\r\n\r\n  return (\r\n    <section\r\n      id={blockId}\r\n      tabIndex={-1}\r\n      className=\"block-type-g\"   // no 'ingame' / no 'fake-fs' — overlay handles viewport\r\n      style={{ position: 'relative' }}\r\n    >\r\n      {/* Guards (can live here or inside overlay). Keeping here is fine. */}\r\n      <GameInputGuards\r\n        active={started}\r\n        lockBodyScroll\r\n        alsoBlockWheel\r\n        alsoBlockTouch\r\n        allowWhenTyping\r\n      />\r\n\r\n      {/* Onboarding (shows until user starts). Stage readiness is driven by the preloader below. */}\r\n      {!started && (\r\n        <BlockGOnboarding\r\n          onStart={onStart}\r\n          resetTrigger={started ? 1 : 0}\r\n          label={stageReady ? 'Click Here to Play!' : 'Loading Game…'}\r\n          ctaEnabled={stageReady}\r\n        />\r\n      )}\r\n\r\n      {/* PRELOADER instance (flips stageReady) */}\r\n      {!started && (\r\n        <LazyViewMount\r\n          load={() => import('./game-canvas')}\r\n          fallback={null}\r\n          mountMode=\"io\"\r\n          observeTargetId={blockId}\r\n          rootMargin=\"0px\"\r\n          enterThreshold={0.2}\r\n          exitThreshold={0.05}\r\n          unmountDelayMs={150}\r\n          preloadOnIdle\r\n          preloadIdleTimeout={2000}\r\n          preloadOnFirstIO\r\n          placeholderMinHeight={360}\r\n          componentProps={{\r\n            onReady: handleReady,\r\n            onCoinsChange: () => {},\r\n            onGameOver: () => {},\r\n            highScore: stableHigh,\r\n            pauseWhenHidden: true,\r\n            demoMode: true,\r\n            overlayActive: false,\r\n            allowSpawns: true,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* GAME OVERLAY (PORTAL) */}\r\n      {started && (\r\n        <GameViewportOverlay>\r\n          <ExitButton onExit={handleExit} />\r\n          <CoinCounter coins={coins} highScore={displayHigh} newHighScore={beatingHighNow} />\r\n\r\n          {shouldRenderOverlayBg && (\r\n            <div className={`countdown-bg-overlay ${!showOverlayBg ? 'hide' : ''}`} style={{ pointerEvents: 'none' }} />\r\n          )}\r\n\r\n          {(countdownPhase === 'lottie' || countdownPhase === 'begin') && (\r\n            <div ref={lottieRef} id=\"lottie-onboarding\" className=\"countdown-lottie\" style={{ pointerEvents: 'none' }} />\r\n          )}\r\n\r\n          <GameOverController\r\n            score={finalScore}\r\n            highScore={stableHigh}\r\n            onRestart={handleRestart}\r\n            onHide={() => setFinalScore(null)}\r\n          />\r\n\r\n          {/* Actual gameplay instance (in the portal, pinned to viewport) */}\r\n          <LazyViewMount\r\n            load={() => import('./game-canvas')}\r\n            fallback={null}\r\n            mountMode=\"io\"\r\n            observeTargetId=\"game-viewport-root\"   // always visible\r\n            rootMargin=\"0px\"\r\n            enterThreshold={0.01}\r\n            exitThreshold={0.0}\r\n            unmountDelayMs={150}\r\n            preloadOnIdle\r\n            preloadIdleTimeout={2000}\r\n            preloadOnFirstIO\r\n            placeholderMinHeight={360}\r\n            componentProps={{\r\n              onReady: handleReady,\r\n              onCoinsChange: handleCoinsChange,\r\n              onGameOver: handleGameOver,\r\n              highScore: stableHigh,\r\n              pauseWhenHidden: true,\r\n              demoMode: false,\r\n              overlayActive: countdownPhase === 'lottie' || countdownPhase === 'begin',\r\n              allowSpawns: countdownPhase === 'begin' || countdownPhase === null,\r\n            }}\r\n          />\r\n        </GameViewportOverlay>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","// utils/tooltip/global-tooltip.ts\r\nimport '../../styles/tooltip.css';\r\nimport { projectColors } from '../content-utility/color-map';\r\n\r\ntype TooltipInfo = { tags: string[]; backgroundColor: string };\r\nconst tooltipDataCache: Record<string, TooltipInfo> = {};\r\n\r\nconst LOCAL_FALLBACK_TAGS: Record<string, string[]> = {\r\n  'block-g': ['#q5.js Canvas', '#Gamification', '#Lottie Animation'],\r\n};\r\n\r\nconst TITLE_BY_KEY: Record<string, string> = {\r\n  'rotary-lamp': 'Rotary Lamp',\r\n  'ice-scoop': 'Ice Cream Scoop',\r\n  'data-viz': 'Data Visualization',\r\n  'block-g': 'Evade the Rock',\r\n  'dynamic': 'Dynamic App',\r\n};\r\n\r\nfunction bgForKey(key: string) {\r\n  const colorInfo = projectColors[TITLE_BY_KEY[key]];\r\n  const alpha = colorInfo?.tooltipAlpha ?? 0.6;\r\n  return colorInfo ? `rgba(${colorInfo.rgb}, ${alpha})` : 'rgba(85,95,90,0.6)';\r\n}\r\n\r\nfunction createTooltipDOM() {\r\n  const el = document.createElement('div');\r\n  el.id = 'custom-global-tooltip';\r\n  el.style.position = 'fixed';\r\n  el.style.pointerEvents = 'none';\r\n  el.style.zIndex = '9999';\r\n  el.style.opacity = '0';\r\n  el.style.visibility = 'hidden';\r\n  el.style.backdropFilter = 'blur(8px)';\r\n  el.style.color = '#fff';\r\n  el.style.transition = 'opacity 0.3s ease, visibility 0.3s ease';\r\n  el.className = 'custom-tooltip-blur';\r\n  const root = document.getElementById('efe-portfolio') || document.body;\r\n  root.appendChild(el);\r\n  return el as HTMLDivElement;\r\n}\r\n\r\nlet tooltipEl: HTMLDivElement | null = null;\r\nlet currentKey = '';\r\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const fetchTooltipDataForKey = async (key: string): Promise<TooltipInfo> => {\r\n  if (tooltipDataCache[key]) return tooltipDataCache[key];\r\n\r\n  const bg = bgForKey(key);\r\n\r\n  // local fallback\r\n  if (LOCAL_FALLBACK_TAGS[key]) {\r\n    const info = { tags: LOCAL_FALLBACK_TAGS[key], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n\r\n  // CMS fetch by slug\r\n  try {\r\n    const client = (await import('../sanity')).default;\r\n    const res = await client.fetch<{ tags?: string[] } | null>(\r\n      `*[_type==\"mediaBlock\" && slug.current == $key][0]{ tags }`,\r\n      { key }\r\n    );\r\n    const info: TooltipInfo = { tags: res?.tags ?? [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  } catch {\r\n    const info: TooltipInfo = { tags: [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n};\r\n\r\nconst showTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '1';\r\n  tooltipEl.style.visibility = 'visible';\r\n  hideTimeout = setTimeout(() => hideTooltip(), 1_500);\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '0';\r\n  tooltipEl.style.visibility = 'hidden';\r\n  currentKey = '';\r\n};\r\n\r\nfunction positionTooltip(x: number, y: number) {\r\n  if (!tooltipEl) return;\r\n  const rect = tooltipEl.getBoundingClientRect();\r\n  const padding = 0;\r\n  const vw = window.innerWidth;\r\n  const vh = window.innerHeight;\r\n\r\n  const nearTop = y < rect.height + padding + 20;\r\n  const nearBottom = y + rect.height + padding > vh - 20;\r\n  const nearRight = x + rect.width + padding > vw - 20;\r\n  const nearLeft = x < rect.width + padding + 20;\r\n\r\n  let left: number, top: number;\r\n  if (nearBottom) { top = y - rect.height - padding - 8; left = x - rect.width * 0; }\r\n  else if (nearTop) { top = y + padding - 14; left = x - rect.width * 0; }\r\n  else if (nearRight) { top = y - rect.height / 2; left = x - rect.width - padding - 24; }\r\n  else if (nearLeft) { top = y - rect.height / 2; left = x + padding - 4; }\r\n  else { top = y - rect.height / 1.6; left = x + padding - 2; }\r\n\r\n  left = Math.max(padding, Math.min(left, vw - rect.width - padding));\r\n  top  = Math.max(padding, Math.min(top,  vh - rect.height - padding));\r\n\r\n  tooltipEl.style.left = `${left}px`;\r\n  tooltipEl.style.top  = `${top}px`;\r\n}\r\n\r\nexport function initGlobalTooltip(isRealMobile: boolean) {\r\n  if (tooltipEl) return () => {};\r\n  tooltipEl = createTooltipDOM();\r\n\r\n  let lastMouseX = -1;\r\n  let lastMouseY = -1;\r\n  let ticking = false;\r\n  let scrollCheckTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  const updateForElement = async (el: Element | null) => {\r\n    if (!(el instanceof HTMLElement)) { hideTooltip(); return; }\r\n    const tooltipClass = [...el.classList].find(c => c.startsWith('tooltip-'));\r\n    if (!tooltipClass) { hideTooltip(); return; }\r\n\r\n    const key = tooltipClass.replace('tooltip-', '');\r\n    if (key !== currentKey) {\r\n      currentKey = key;\r\n      const info = await fetchTooltipDataForKey(key);\r\n\r\n      if (!info.tags.length) { hideTooltip(); return; }\r\n      tooltipEl!.innerHTML = info.tags.map(t => `<p class=\"tooltip-tag\">${t}</p>`).join('');\r\n      tooltipEl!.style.backgroundColor = info.backgroundColor;\r\n      showTooltip();\r\n    } else if (tooltipEl!.style.opacity === '0' || tooltipEl!.style.visibility === 'hidden') {\r\n      showTooltip();\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    lastMouseX = e.clientX;\r\n    lastMouseY = e.clientY;\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n    updateForElement(e.target as Element);\r\n  };\r\n\r\n  const checkHoveredElementOnScroll = () => {\r\n    const el = document.elementFromPoint(lastMouseX, lastMouseY);\r\n    updateForElement(el);\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => { checkHoveredElementOnScroll(); ticking = false; });\r\n      ticking = true;\r\n    }\r\n    if (scrollCheckTimeout) clearTimeout(scrollCheckTimeout);\r\n    scrollCheckTimeout = setTimeout(() => {}, 120);\r\n  };\r\n\r\n  const onMouseOut = (e: MouseEvent) => {\r\n    if (!e.relatedTarget) hideTooltip();\r\n  };\r\n\r\n  // only attach scroll observer for non-mobile real viewports\r\n  if (!isRealMobile) window.addEventListener('scroll', onScroll, true);\r\n  document.addEventListener('mousemove', onMouseMove, { passive: true });\r\n  document.addEventListener('mouseout', onMouseOut, { passive: true });\r\n\r\n  return () => {\r\n    if (!tooltipEl) return;\r\n    if (!isRealMobile) window.removeEventListener('scroll', onScroll, true);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseout', onMouseOut);\r\n    tooltipEl.remove();\r\n    tooltipEl = null;\r\n    if (hideTimeout) clearTimeout(hideTimeout);\r\n  };\r\n}","// utils/tooltip/tooltipInit.ts\r\nimport { useEffect } from 'react';\r\nimport { initGlobalTooltip } from './tooltip';\r\nimport { useRealMobileViewport } from '../content-utility/real-mobile';\r\n\r\nexport const useTooltipInit = () => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    const dispose = initGlobalTooltip(isRealMobile);\r\n    return () => dispose?.();\r\n  }, [isRealMobile]);\r\n};\r\n"],"names":["_ref","onStart","resetTrigger","label","ctaEnabled","loadingLines","visible","setVisible","useState","isFadingOut","setIsFadingOut","lottieRef","useRef","containerRef","lottieInstance","useTooltipInit","focusedProjectKey","scrollContainerRef","previousScrollY","setPreviousScrollY","useProjectVisibility","handleClick","window","scrollY","setTimeout","current","scrollTo","top","behavior","useEffect","destroyLottie","_lottieInstance$curre2","destroy","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","initializeLottie","_lottieInstance$curre","lottie","container","renderer","loop","autoplay","animationData","onboardingAnimation","addEventListener","playSegments","totalFrames","stop","threshold","observe","disconnect","t","clearTimeout","_jsxs","className","ref","style","opacity","transition","display","alignItems","children","_jsx","onClick","pointerEvents","cursor","LoadingHub","keyword","minHeight","lines","ariaLabel","GAME_MODE_CLASS","deactivateGameMode","document","body","classList","remove","BlockGHost","blockId","isRealMobile","useRealMobileViewport","started","setStarted","stageReady","setStageReady","coins","setCoins","countdownPhase","setCountdownPhase","showBeginText","setShowBeginText","showOverlayBg","setShowOverlayBg","shouldRenderOverlayBg","setShouldRenderOverlayBg","finalScore","setFinalScore","remoteHighScore","useHighScoreSubscription","stableHigh","restartApi","ric","requestIdleCallback","rid","gameLoaders","game","timeout","_cancelIdleCallback","_ref2","cancelIdleCallback","call","useCallback","async","add","requestAnimationFrame","_focus","_ref3","el","getElementById","focus","anim","mounted","loadAnimation","mobileOnboarding","desktopOnboarding","onComplete","_anim2","_anim2$destroy","handleReady","api","displayHigh","beatingHighNow","id","tabIndex","position","GameInputGuards","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","BlockGOnboarding","LazyViewMount","load","fallback","mountMode","observeTargetId","rootMargin","enterThreshold","exitThreshold","unmountDelayMs","preloadOnIdle","preloadIdleTimeout","preloadOnFirstIO","placeholderMinHeight","componentProps","onReady","onCoinsChange","onGameOver","highScore","pauseWhenHidden","demoMode","overlayActive","allowSpawns","GameViewportOverlay","ExitButton","onExit","handleExit","CoinCounter","newHighScore","concat","GameOverController","score","onRestart","handleRestart","_restartApi$current","restart","onHide","n","finalCoins","tooltipDataCache","LOCAL_FALLBACK_TAGS","TITLE_BY_KEY","tooltipEl","currentKey","hideTimeout","fetchTooltipDataForKey","key","bg","_colorInfo$tooltipAlp","colorInfo","projectColors","alpha","tooltipAlpha","rgb","bgForKey","info","tags","backgroundColor","_res$tags","client","default","res","fetch","_unused","showTooltip","visibility","hideTooltip","positionTooltip","x","y","rect","getBoundingClientRect","vw","innerWidth","vh","innerHeight","nearTop","height","nearBottom","nearRight","width","nearLeft","left","Math","max","min","initGlobalTooltip","createElement","zIndex","backdropFilter","color","appendChild","createTooltipDOM","lastMouseX","lastMouseY","ticking","scrollCheckTimeout","updateForElement","HTMLElement","tooltipClass","find","c","startsWith","replace","length","innerHTML","map","join","onMouseMove","e","clientX","clientY","target","onScroll","checkHoveredElementOnScroll","elementFromPoint","onMouseOut","relatedTarget","passive","removeEventListener","dispose"],"sourceRoot":""}