{"version":3,"file":"static/js/844.8e0dc9d2.chunk.js","mappings":"oNAOe,SAASA,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAA6B,OAC9CC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAAOG,OAAOC,WAAa,IAAM,GAAK,KAClEC,EAAYC,IAAiBN,EAAAA,EAAAA,UAASG,OAAOI,YAAcJ,OAAOC,YA6FzE,OA3FAI,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,WAAU,KAAO,IAADC,EAAAC,EAAAC,EACd,MAAMC,EAA6B,GAEC,QAApCH,EAAAI,SAASC,eAAe,oBAAY,IAAAL,GAApCA,EAAsCM,UAAUC,OAAO,qBAEvD,MAAMC,EAASJ,SAASK,cAAc,gCAChCC,EAASN,SAASK,cAAc,gCAEhCE,EAAc,OAANH,QAAM,IAANA,GAAe,QAATP,EAANO,EAAQI,eAAO,IAAAX,OAAT,EAANA,EAAiBY,QACzBC,EAAc,OAANJ,QAAM,IAANA,GAAe,QAATR,EAANQ,EAAQE,eAAO,IAAAV,OAAT,EAANA,EAAiBW,QAQ/B,GALIL,GAAUG,GAASH,EAAOO,MAAQJ,IACpCH,EAAOO,IAAMJ,GAIXD,EAAQ,CACNI,GAASJ,EAAOM,SAAWF,IAC7BJ,EAAOM,OAASF,GAGlB,MAAMG,EAAeA,KACnBP,EAAOQ,gBAAgB,WAGnBC,EAASA,KACb,MAAMC,EAAOV,EACb,GAA8C,oBAAnCU,EAAKC,0BACdD,EAAKC,0BAA0B,IAAMJ,SAChC,CACL,MAAMK,EAASA,KACTZ,EAAOa,YAAc,GAAKb,EAAOc,YAAc,IACjDd,EAAOe,oBAAoB,aAAcH,GACzCL,MAGJP,EAAOgB,iBAAiB,aAAcJ,EAAQ,CAAEK,MAAM,IACtDxB,EAAQyB,KAAK,IAAMlB,EAAOe,oBAAoB,aAAcH,IAE5D,MAAMO,EAAQC,WAAW,KACvBpB,EAAOe,oBAAoB,aAAcH,GACzCL,KACC,MACHd,EAAQyB,KAAK,IAAMG,aAAaF,GAClC,GAMF,GAHAnB,EAAOgB,iBAAiB,OAAQP,EAAQ,CAAEQ,MAAM,IAChDxB,EAAQyB,KAAK,IAAMlB,EAAOe,oBAAoB,OAAQN,IAE5B,IAAtBT,EAAOc,WAAkB,CAC3Bd,EAAOsB,QAAU,OACjB,IAAMtB,EAAOuB,MAAQ,CAAE,MAAAC,GAAO,CAChC,MACExB,EAAOsB,QAAU,OAGnBtB,EAAOyB,OAAOC,MAAM,OACtB,CAEA/C,EAAQe,SAASC,eAAe,0BAEhCgC,EAAAA,EAAAA,IAAgB9C,EAAOI,EAAY,CACjC2C,GAAI,0BACJC,GAAI,4BAGN,MAAMC,EAAWA,KACf,MAAMC,EAAIhD,OAAOI,YAAcJ,OAAOC,WACtCE,EAAc6C,IACdJ,EAAAA,EAAAA,IAAgB9C,EAAOkD,EAAG,CACxBH,GAAI,0BACJC,GAAI,6BAMR,OAHA9C,OAAOiC,iBAAiB,SAAUc,EAAU,CAAEE,SAAS,IACvDvC,EAAQyB,KAAK,IAAMnC,OAAOgC,oBAAoB,SAAUe,IAEjD,IAAMrC,EAAQwC,QAAQC,GAAMA,MAClC,KAEH7C,EAAAA,EAAAA,WAAU,MACRsC,EAAAA,EAAAA,IAAgB9C,EAAOI,EAAY,CACjC2C,GAAI,0BACJC,GAAI,6BAEL,CAAChD,EAAOI,IAENP,GACEyD,EAAAA,EAAAA,eACLC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfxD,MAAOA,EACPC,SAAUA,EACVwD,IAAK,CAAEV,GAAI,0BAA2BC,GAAI,6BAE5CnD,GAPgB,IASpB,C","sources":["ssr/projects/scoop.enhancer.tsx"],"sourcesContent":["// src/ssr/projects/scoop.enhancer.tsx\r\nimport { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport SplitDragHandler from '../../utils/split+drag/split-controller';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\nimport { applySplitStyle } from '../logic/apply-split-style';\r\n\r\nexport default function ScoopEnhancer() {\r\n  const [host, setHost] = useState<HTMLElement | null>(null);\r\n  const [split, setSplit] = useState(() => (window.innerWidth < 768 ? 55 : 50));\r\n  const [isPortrait, setIsPortrait] = useState(window.innerHeight > window.innerWidth);\r\n\r\n  useTooltipInit();\r\n\r\n  useEffect(() => {\r\n    const cleanup: Array<() => void> = [];\r\n\r\n    document.getElementById('scoop-ssr')?.classList.remove('ssr-initial-split');\r\n\r\n    const img1El = document.querySelector('#scoop-ssr #icecream-media-1') as HTMLImageElement | null;\r\n    const vid2El = document.querySelector('#scoop-ssr #icecream-media-2') as HTMLVideoElement | null;\r\n\r\n    const full1 = img1El?.dataset?.srcFull;\r\n    const full2 = vid2El?.dataset?.srcFull;\r\n\r\n    // Upgrade LEFT media (image)\r\n    if (img1El && full1 && img1El.src !== full1) {\r\n      img1El.src = full1;\r\n    }\r\n\r\n    // Upgrade RIGHT media (video)\r\n    if (vid2El) {\r\n      if (full2 && vid2El.poster !== full2) {\r\n        vid2El.poster = full2;\r\n      }\r\n\r\n      const removePoster = () => {\r\n        vid2El.removeAttribute('poster');\r\n      };\r\n\r\n      const onPlay = () => {\r\n        const anyV = vid2El as any;\r\n        if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n          anyV.requestVideoFrameCallback(() => removePoster());\r\n        } else {\r\n          const onTime = () => {\r\n            if (vid2El.currentTime > 0 && vid2El.readyState >= 2) {\r\n              vid2El.removeEventListener('timeupdate', onTime);\r\n              removePoster();\r\n            }\r\n          };\r\n          vid2El.addEventListener('timeupdate', onTime, { once: true });\r\n          cleanup.push(() => vid2El.removeEventListener('timeupdate', onTime));\r\n\r\n          const timer = setTimeout(() => {\r\n            vid2El.removeEventListener('timeupdate', onTime);\r\n            removePoster();\r\n          }, 1200);\r\n          cleanup.push(() => clearTimeout(timer));\r\n        }\r\n      };\r\n\r\n      vid2El.addEventListener('play', onPlay, { once: true });\r\n      cleanup.push(() => vid2El.removeEventListener('play', onPlay));\r\n\r\n      if (vid2El.readyState === 0) {\r\n        vid2El.preload = 'auto';\r\n        try { vid2El.load(); } catch {}\r\n      } else {\r\n        vid2El.preload = 'auto';\r\n      }\r\n\r\n      vid2El.play().catch(() => { /* ignored; poster remains until user interacts */ });\r\n    }\r\n\r\n    setHost(document.getElementById('scoop-enhancer-mount'));\r\n\r\n    applySplitStyle(split, isPortrait, {\r\n      m1: 'scoop-media-1-container',\r\n      m2: 'scoop-media-2-container',\r\n    });\r\n\r\n    const onResize = () => {\r\n      const p = window.innerHeight > window.innerWidth;\r\n      setIsPortrait(p);\r\n      applySplitStyle(split, p, {\r\n        m1: 'scoop-media-1-container',\r\n        m2: 'scoop-media-2-container',\r\n      });\r\n    };\r\n    window.addEventListener('resize', onResize, { passive: true });\r\n    cleanup.push(() => window.removeEventListener('resize', onResize));\r\n\r\n    return () => cleanup.forEach(fn => fn());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applySplitStyle(split, isPortrait, {\r\n      m1: 'scoop-media-1-container',\r\n      m2: 'scoop-media-2-container',\r\n    });\r\n  }, [split, isPortrait]);\r\n\r\n  if (!host) return null;\r\n  return createPortal(\r\n    <SplitDragHandler\r\n      split={split}\r\n      setSplit={setSplit}\r\n      ids={{ m1: 'scoop-media-1-container', m2: 'scoop-media-2-container' }}\r\n    />,\r\n    host\r\n  );\r\n}\r\n"],"names":["ScoopEnhancer","host","setHost","useState","split","setSplit","window","innerWidth","isPortrait","setIsPortrait","innerHeight","useTooltipInit","useEffect","_document$getElementB","_img1El$dataset","_vid2El$dataset","cleanup","document","getElementById","classList","remove","img1El","querySelector","vid2El","full1","dataset","srcFull","full2","src","poster","removePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","readyState","removeEventListener","addEventListener","once","push","timer","setTimeout","clearTimeout","preload","load","_unused","play","catch","applySplitStyle","m1","m2","onResize","p","passive","forEach","fn","createPortal","_jsx","SplitDragHandler","ids"],"sourceRoot":""}