{"version":3,"file":"static/js/658.58dc503e.chunk.js","mappings":"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","sources":["ssr/projects/dynamic.enhancer.tsx","utils/loading/loading-hub.tsx","dynamic-app/preload-dynamic-app.ts","utils/content-utility/dynamic-overlay.ts","utils/content-utility/real-mobile.ts","dynamic-app/lib/fetchUser.js","dynamic-app/lib/fetchSVGIcons.js"],"sourcesContent":["// src/ssr/projects/dynamic.enhancer.tsx\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useDynamicOverlay } from '../../utils/content-utility/dynamic-overlay';\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\n// add: shared cache/dedupe + URL builder for LQ warm\r\nimport { ensureDynamicPreload } from '../../dynamic-app/preload-dynamic-app';\r\nimport { urlFor } from '../../utils/media-providers/image-builder';\r\n\r\ntype ShadowInboundProps = { onFocusChange?: (f: boolean) => void; onReady?: () => void };\r\ntype ShadowInboundType = React.ComponentType<ShadowInboundProps>;\r\n\r\nfunction scheduleIdle(cb: () => void, timeout = 2000): () => void {\r\n  const w = window as any;\r\n  if (typeof w.requestIdleCallback === 'function') {\r\n    const id = w.requestIdleCallback(cb, { timeout });\r\n    return () => w.cancelIdleCallback?.(id);\r\n  }\r\n  const t = window.setTimeout(cb, timeout);\r\n  return () => window.clearTimeout(t);\r\n}\r\n\r\n// ---- module-level dedupe so warm only runs once per page load\r\nlet warmedOnce = false;\r\nfunction warmDynamicLowQuality(maxUrls = 32) {\r\n  if (warmedOnce) return;\r\n  warmedOnce = true;\r\n\r\n  (async () => {\r\n    try {\r\n      const { images } = await ensureDynamicPreload(); // deduped at source\r\n      if (!Array.isArray(images) || images.length === 0) return;\r\n\r\n      // Collect LQ URLs for both image1 and image2, then cap\r\n      const urls: string[] = [];\r\n      for (const it of images) {\r\n        const s1 = it?.image1 ? urlFor(it.image1).width(320).quality(35).auto('format').url() : null;\r\n        const s2 = it?.image2 ? urlFor(it.image2).width(320).quality(35).auto('format').url() : null;\r\n        if (s1) urls.push(s1);\r\n        if (s2) urls.push(s2);\r\n        if (urls.length >= maxUrls) break;\r\n      }\r\n\r\n      const head = document.head;\r\n      const seen = new Set<string>();\r\n\r\n      for (const src of urls) {\r\n        if (!src || seen.has(src)) continue;\r\n        seen.add(src);\r\n\r\n        // <link rel=\"preload\" as=\"image\"> (avoid duplicates)\r\n        if (!document.querySelector(`link[rel=\"preload\"][as=\"image\"][href=\"${src}\"]`)) {\r\n          const link = document.createElement('link');\r\n          link.rel = 'preload';\r\n          link.as = 'image';\r\n          link.href = src;\r\n          link.crossOrigin = 'anonymous';\r\n          // TS-safe way to hint priority\r\n          link.setAttribute('fetchpriority', 'low');\r\n          head.appendChild(link);\r\n        }\r\n\r\n        // Kick actual network regardless of preload support\r\n        const img = new Image();\r\n        img.decoding = 'async';\r\n        img.crossOrigin = 'anonymous';\r\n        img.src = src;\r\n      }\r\n    } catch {\r\n      /* ignore warm errors */\r\n    }\r\n  })();\r\n}\r\n\r\nconst DynamicEnhancer: React.FC = () => {\r\n  // ----- find SSR nodes\r\n  const frameRef = useRef<HTMLElement | null>(null);\r\n  const [overlayEl, setOverlayEl] = useState<HTMLElement | null>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const img = document.getElementById('dynamic-device-frame') as HTMLElement | null;\r\n    frameRef.current = img;\r\n    const overlay = img?.closest('.device-wrapper')?.querySelector('.screen-overlay') as HTMLElement | null;\r\n    setOverlayEl(overlay ?? null);\r\n  }, []);\r\n\r\n  // ----- overlay sizing\r\n  const overlaySize = useDynamicOverlay(frameRef);\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    if (!overlayEl) return;\r\n    const isPhone = window.matchMedia('(max-width: 767.98px)').matches;\r\n\r\n    if (isPhone) {\r\n      overlayEl.style.width = `${overlaySize.width}px`;\r\n      overlayEl.style.height = isRealMobile\r\n        ? `${overlaySize.heightSet1}svh`\r\n        : `${overlaySize.heightSet2}px`;\r\n    } else {\r\n      overlayEl.style.removeProperty('width');\r\n      overlayEl.style.removeProperty('height');\r\n    }\r\n  }, [overlayEl, overlaySize.width, overlaySize.heightSet1, overlaySize.heightSet2, isRealMobile]);\r\n\r\n  // ----- prewarm low-quality images (SSR path needs this; client-only path will no-op thanks to warmedOnce)\r\n  useEffect(() => {\r\n    // Gate by visibility with idle fallback, same as mounting\r\n    const container = document.getElementById('block-dynamic');\r\n    let cancelIdle: (() => void) | null = null;\r\n    let io: IntersectionObserver | null = null;\r\n\r\n    const run = () => warmDynamicLowQuality(32);\r\n\r\n    if (!container || typeof IntersectionObserver === 'undefined') {\r\n      // No IO → just warm on idle\r\n      cancelIdle = scheduleIdle(run, 500);\r\n    } else {\r\n      io = new IntersectionObserver(\r\n        (entries) => {\r\n          if (entries[0]?.isIntersecting) {\r\n            run();\r\n            io?.disconnect();\r\n          }\r\n        },\r\n        { root: null, rootMargin: '600px 0px', threshold: 0 }\r\n      );\r\n      io.observe(container);\r\n      // backstop so we still warm if user never scrolls\r\n      cancelIdle = scheduleIdle(run, 1200);\r\n    }\r\n\r\n    return () => {\r\n      io?.disconnect();\r\n      cancelIdle?.();\r\n    };\r\n  }, []);\r\n\r\n  // ----- gate mounting of shadow app\r\n  const [shouldMountShadow, setShouldMountShadow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('block-dynamic');\r\n    if (!container) { setShouldMountShadow(true); return; }\r\n\r\n    const io = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.intersectionRatio >= 0.3) {\r\n          setShouldMountShadow(true);\r\n          io.disconnect();\r\n        }\r\n      },\r\n      { threshold: [0, 0.3] }\r\n    );\r\n    io.observe(container);\r\n\r\n    const cancel = scheduleIdle(() => setShouldMountShadow(true), 2000);\r\n    return () => { io.disconnect(); cancel(); };\r\n  }, []);\r\n\r\n  // ----- lazy import\r\n  const [ShadowInbound, setShadowInbound] = useState<ShadowInboundType | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!shouldMountShadow) return;\r\n    let alive = true;\r\n    import('../../dynamic-app/dynamic-app-shadow.jsx')\r\n      .then(m => { if (alive) setShadowInbound(() => m.default as ShadowInboundType); })\r\n      .catch(err => console.warn('[DynamicEnhancer] shadow import failed:', err));\r\n    return () => { alive = false; };\r\n  }, [shouldMountShadow]);\r\n\r\n  // ----- loader visibility\r\n  const [showLoader, setShowLoader] = useState(false); // start hidden until we begin mount\r\n  const watchdogRef = useRef<number | null>(null);\r\n\r\n  // when we start mounting, show loader (and arm watchdog)\r\n  useEffect(() => {\r\n    if (!shouldMountShadow) return;\r\n    setShowLoader(true);\r\n    if (watchdogRef.current) window.clearTimeout(watchdogRef.current);\r\n    watchdogRef.current = window.setTimeout(() => {\r\n      // fail-safe: hide after 8s even if onReady never fires\r\n      setShowLoader(false);\r\n      hideSsrSpinner();\r\n    }, 8000);\r\n    return () => {\r\n      if (watchdogRef.current) {\r\n        window.clearTimeout(watchdogRef.current);\r\n        watchdogRef.current = null;\r\n      }\r\n    };\r\n  }, [shouldMountShadow]);\r\n\r\n  // listen to global hydrated event (secondary path)\r\n  useEffect(() => {\r\n    const onHydrated = () => {\r\n      setShowLoader(false);\r\n      hideSsrSpinner();\r\n    };\r\n    window.addEventListener('dynamic-app:hydrated', onHydrated as EventListener);\r\n    return () => window.removeEventListener('dynamic-app:hydrated', onHydrated as EventListener);\r\n  }, []);\r\n\r\n  const hideSsrSpinner = () => {\r\n    const loader = document.getElementById('dynamic-overlay-loader');\r\n    if (loader) loader.style.display = 'none';\r\n  };\r\n\r\n  if (!overlayEl) return null;\r\n\r\n  const handleReady = () => {\r\n    setShowLoader(false);\r\n    hideSsrSpinner();\r\n    window.dispatchEvent(new CustomEvent('dynamic-app:hydrated'));\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      {showLoader && (\r\n        <div className=\"loading-hub-overlay\">\r\n          <LoadingHub\r\n            className=\"loading-hub--dynamic loading-hub--center\"\r\n            keyword=\"dynamic\"\r\n            lines={[\r\n              'Measuring app frame…',\r\n              'Creating shadow root…',\r\n              'Injecting app styles…',\r\n              'Loading SVG icons…',\r\n              'Mounting app shell…',\r\n              'Wiring observers and input…',\r\n            ]}\r\n            minHeight={72}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {ShadowInbound && shouldMountShadow && (\r\n        <ShadowInbound onFocusChange={() => {}} onReady={handleReady} />\r\n      )}\r\n    </>,\r\n    overlayEl\r\n  );\r\n};\r\n\r\nexport default DynamicEnhancer;\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport '../../styles/loading-hub.css';\r\n\r\ntype LoadingHubProps = {\r\n  keyword?: string;\r\n  lines?: string[];\r\n  minHeight?: number | string;\r\n  className?: string;\r\n  ariaLabel?: string;\r\n  progress?: number | null;\r\n  cycleMs?: number;\r\n  animMs?: number;\r\n  /** Delay before showing loader (ms) */\r\n  delayMs?: number;\r\n};\r\n\r\nexport default function LoadingHub({\r\n  keyword,\r\n  lines = ['Loading…'],\r\n  minHeight = 160,\r\n  className = '',\r\n  ariaLabel = 'Loading',\r\n  progress = null,\r\n  cycleMs = 1400,\r\n  animMs = 900,\r\n  delayMs = 400,\r\n}: LoadingHubProps) {\r\n  const [lineIndex, setLineIndex] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // --- delay before showing loader ---\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setShow(true), delayMs);\r\n    return () => clearTimeout(t);\r\n  }, [delayMs]);\r\n\r\n  // rotate through provided lines\r\n  const hasMultiple = lines.length > 1;\r\n  useEffect(() => {\r\n    if (!hasMultiple) return;\r\n    const t = setInterval(() => {\r\n      setLineIndex((i) => (i + 1) % lines.length);\r\n    }, cycleMs);\r\n    return () => clearInterval(t);\r\n  }, [hasMultiple, lines.length, cycleMs]);\r\n\r\n  // Avoid reflow: lock container height\r\n  const style = useMemo<React.CSSProperties>(() => {\r\n    const h = typeof minHeight === 'number' ? `${minHeight}px` : (minHeight ?? 'auto');\r\n    return { minHeight: h };\r\n  }, [minHeight]);\r\n\r\n  // SR-only progressive percent\r\n  const srRef = useRef<HTMLSpanElement>(null);\r\n  useEffect(() => {\r\n    if (progress == null || !srRef.current) return;\r\n    srRef.current.textContent = `${Math.round(progress)}%`;\r\n  }, [progress]);\r\n\r\n  if (!show) {\r\n    // render an invisible placeholder with locked height\r\n    return <div style={style} aria-hidden=\"true\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`loading-hub loading-hub--text ${className || ''}`}\r\n      style={style}\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n      aria-label={ariaLabel}\r\n      data-keyword={keyword || undefined}\r\n      data-anim-ms={animMs}\r\n    >\r\n      <div className=\"loading-hub__copy\" aria-hidden={false}>\r\n        <h2 key={lineIndex} className=\"loading-hub__line\">\r\n          {lines[lineIndex]}\r\n        </h2>\r\n\r\n        {progress != null && (\r\n          <div className=\"loading-hub__progress\" aria-hidden=\"true\">\r\n            {Math.round(progress)}%\r\n          </div>\r\n        )}\r\n\r\n        <span className=\"sr-only\" ref={srRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/dynamic-app/preload-dynamic-app.ts\r\nimport fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type Cache = { icons?: Record<string, string>; images?: any[] };\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: Cache = {};\r\nlet inFlight: Promise<Cache> | null = null;\r\n\r\nexport function getPreloadedDynamicApp(): Cache {\r\n  return cache;\r\n}\r\n\r\nexport function primeFromSSR(data?: Partial<Cache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return list.reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url; // inline SVG takes precedence; else URL\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\n/** Wait for current preloading (if any), then return cache */\r\nexport async function whenDynamicPreloadReady(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nexport async function ensureIconsPreload(): Promise<Record<string, string>> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown;\r\n  try {\r\n    iconsRaw = await fetchSVGIcons();\r\n  } catch {\r\n    iconsRaw = [];\r\n  }\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\nexport async function ensureImagesPreload(): Promise<any[]> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown;\r\n  try {\r\n    imagesRaw = await fetchImages();\r\n  } catch {\r\n    imagesRaw = [];\r\n  }\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return images;\r\n}\r\n\r\n/** Convenience: ensure both icons + images (with in-flight dedupe) */\r\nexport async function ensureDynamicPreload(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise.all([ensureIconsPreload(), ensureImagesPreload()])\r\n    .then(([icons, images]) => {\r\n      cache = { icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => {\r\n      inFlight = null;\r\n    });\r\n\r\n  return inFlight;\r\n}\r\n\r\n// Optional: hydrate from SSR\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_PRELOAD__?: Cache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_PRELOAD__) {\r\n  primeFromSSR((window as any).__DYNAMIC_PRELOAD__);\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useDynamicOverlay(frameRef: React.RefObject<HTMLElement>) {\r\n  const [style, setStyle] = useState<{\r\n    width: number;\r\n    heightSet1: number;\r\n    heightSet2: number;\r\n  }>({\r\n    width: 0,\r\n    heightSet1: 0,\r\n    heightSet2: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const update = () => {\r\n      if (!frameRef.current) return;\r\n\r\n      const rect = frameRef.current.getBoundingClientRect();\r\n      const aspect = rect.width / rect.height;\r\n\r\n      // Aspect ratio breakpoints\r\n      const minAspect = 1.5 / 6.5; // ~0.2307\r\n      const maxAspect = 3.3 / 6.5; // ~0.5077\r\n\r\n      // Width range (shared)\r\n      const minWidth = 150;\r\n      const maxWidth = 320;\r\n\r\n      // Height range set 1 (your current svh-based values)\r\n      const minHeightSet1 = 63;\r\n      const maxHeightSet1 = 93;\r\n\r\n      // Height range set 2 (original px-based)\r\n      const minHeightSet2 = 280;\r\n      const maxHeightSet2 = 610;\r\n\r\n      // --- Aspect ratio-based lerp ---\r\n      let width: number;\r\n      let height1: number;\r\n      let height2: number;\r\n\r\n      if (aspect <= minAspect) {\r\n        width = minWidth;\r\n        height1 = minHeightSet1;\r\n        height2 = minHeightSet2;\r\n      } else if (aspect >= maxAspect) {\r\n        width = maxWidth;\r\n        height1 = maxHeightSet1;\r\n        height2 = maxHeightSet2;\r\n      } else {\r\n        const t = (aspect - minAspect) / (maxAspect - minAspect);\r\n        width = minWidth + (maxWidth - minWidth) * t;\r\n        height1 = minHeightSet1 + (maxHeightSet1 - minHeightSet1) * t;\r\n        height2 = minHeightSet2 + (maxHeightSet2 - minHeightSet2) * t;\r\n      }\r\n\r\n      // --- Absolute height multiplier (0 → 2 over 0–1300px) ---\r\n      const minFrameHeight = 0;\r\n      const maxFrameHeight = 1300;\r\n      const minMultiplier = 0;\r\n      const maxMultiplier = 2;\r\n\r\n      const clampedHeight = Math.min(Math.max(rect.height, minFrameHeight), maxFrameHeight);\r\n      const heightT = (clampedHeight - minFrameHeight) / (maxFrameHeight - minFrameHeight);\r\n      const heightMultiplier = minMultiplier + (maxMultiplier - minMultiplier) * heightT;\r\n\r\n      // Apply multiplier\r\n      width *= heightMultiplier;\r\n      height1 *= heightMultiplier;\r\n      height2 *= heightMultiplier;\r\n\r\n      setStyle({\r\n        width,\r\n        heightSet1: height1,\r\n        heightSet2: height2,\r\n      });\r\n    };\r\n\r\n    update();\r\n    window.addEventListener('resize', update);\r\n    window.addEventListener('orientationchange', update);\r\n    return () => {\r\n      window.removeEventListener('resize', update);\r\n      window.removeEventListener('orientationchange', update);\r\n    };\r\n  }, [frameRef]);\r\n\r\n  return style; // { width, heightSet1, heightSet2 }\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","// lib/fetchUser.ts\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport const fetchImages = async (sortOption = 'default') => {\r\n  let orderClause = '';\r\n  switch (sortOption) {\r\n    case 'titleAsc':  orderClause = '| order(title asc)'; break;\r\n    case 'titleDesc': orderClause = '| order(title desc)'; break;\r\n    case 'dateAsc':   orderClause = '| order(_createdAt asc)'; break;\r\n    case 'dateDesc':  orderClause = '| order(_createdAt desc)'; break;\r\n  }\r\n\r\n  const query = `*[_type == \"imageAsset\"] ${orderClause} {\r\n    _id,\r\n    title,\r\n    description,\r\n    // dereference to get real URLs on the server\r\n    image1{ ..., asset->{ url } },\r\n    image2{ ..., asset->{ url } },\r\n    caption1,\r\n    alt1,\r\n    alt2,\r\n    iconName,\r\n    url1\r\n  }`;\r\n\r\n  try {\r\n    const data = await sanityClient.fetch(query);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching images', error);\r\n    return [];\r\n  }\r\n};\r\n","/* Fetch SVG icons */\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport default async function fetchSVGIcons() {\r\n  const query = `*[_type == \"svgIcon\"]{\r\n    title,\r\n    icon,                         // inline SVG string (portable text / string)\r\n    \"url\": file.asset->url        // optional file URL if present in schema\r\n  }`;\r\n  const icons = await sanityClient.fetch(query);\r\n  return icons;\r\n}"],"names":["scheduleIdle","cb","timeout","arguments","length","undefined","w","window","requestIdleCallback","id","_w$cancelIdleCallback","cancelIdleCallback","call","t","setTimeout","clearTimeout","warmedOnce","DynamicEnhancer","frameRef","useRef","overlayEl","setOverlayEl","useState","useLayoutEffect","_img$closest","img","document","getElementById","current","overlay","closest","querySelector","overlaySize","useDynamicOverlay","isRealMobile","useRealMobileViewport","useEffect","matchMedia","matches","style","width","concat","height","heightSet1","heightSet2","removeProperty","container","cancelIdle","io","run","maxUrls","images","ensureDynamicPreload","Array","isArray","urls","it","s1","image1","urlFor","quality","auto","url","s2","image2","push","head","seen","Set","src","has","add","link","createElement","rel","as","href","crossOrigin","setAttribute","appendChild","Image","decoding","_unused","warmDynamicLowQuality","IntersectionObserver","entries","_entries$","_io","isIntersecting","disconnect","root","rootMargin","threshold","observe","_io2","_cancelIdle","shouldMountShadow","setShouldMountShadow","_ref","entry","intersectionRatio","cancel","ShadowInbound","setShadowInbound","alive","then","m","default","catch","err","console","warn","showLoader","setShowLoader","watchdogRef","hideSsrSpinner","onHydrated","addEventListener","removeEventListener","loader","display","createPortal","_jsxs","_Fragment","children","_jsx","className","LoadingHub","keyword","lines","minHeight","onFocusChange","onReady","handleReady","dispatchEvent","CustomEvent","ariaLabel","progress","cycleMs","animMs","delayMs","lineIndex","setLineIndex","show","setShow","hasMultiple","setInterval","i","clearInterval","useMemo","srRef","textContent","Math","round","role","ref","cache","inFlight","getPreloadedDynamicApp","async","whenDynamicPreloadReady","icons","ensureIconsPreload","iconsRaw","fetchSVGIcons","list","reduce","acc","_it$icon","title","val","icon","toIconMap","ensureImagesPreload","imagesRaw","fetchImages","_unused2","Promise","all","finally","data","__DYNAMIC_PRELOAD__","_objectSpread","setStyle","update","rect","getBoundingClientRect","aspect","minAspect","maxAspect","height1","height2","heightMultiplier","min","max","setIsRealMobile","checkMobile","_window$matchMedia$ma","_window$matchMedia","_window","touch","navigator","maxTouchPoints","coarse","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","orderClause","query","sanityClient","fetch","error"],"sourceRoot":""}