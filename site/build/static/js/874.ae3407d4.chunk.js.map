{"version":3,"file":"static/js/874.ae3407d4.chunk.js","mappings":"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","sources":["components/rock-escapade/game-canvas.tsx"],"sourcesContent":["// src/components/rock-escapade/GameCanvas.tsx\r\nimport { useEffect, useRef } from 'react';\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\n\r\ntype Props = {\r\n  onCoinsChange?: (coins: number) => void;\r\n  highScore?: number;\r\n  onGameOver?: (finalCoins: number, isNewHigh: boolean) => void;\r\n  onReady?: (api: { restart: () => void }) => void;\r\n  pauseWhenHidden?: boolean;\r\n  demoMode?: boolean;\r\n  overlayActive?: boolean;\r\n  allowSpawns?: boolean;\r\n};\r\n\r\nexport default function GameCanvas({\r\n  onCoinsChange,\r\n  highScore = 0,\r\n  onGameOver,\r\n  onReady,\r\n  pauseWhenHidden = true,\r\n  demoMode = false,\r\n  overlayActive = false,\r\n  allowSpawns = true,\r\n}: Props) {\r\n  const hostRef = useRef<HTMLDivElement>(null);\r\n  const q5Ref = useRef<any>(null);\r\n  const visibleRef = useRef(true);\r\n  const cleanupRef = useRef<(() => void) | null>(null);\r\n\r\n  // prop refs\r\n  const coinsChangeRef = useRef(onCoinsChange);\r\n  const gameOverRef = useRef(onGameOver);\r\n  const readyRef = useRef(onReady);\r\n  const highScoreRef = useRef(highScore);\r\n  const pauseHiddenRef = useRef(pauseWhenHidden);\r\n  const demoRef = useRef(!!demoMode);\r\n  const overlayRef = useRef(!!overlayActive);\r\n  const allowSpawnsRef = useRef(allowSpawns);\r\n\r\n  coinsChangeRef.current = onCoinsChange;\r\n  gameOverRef.current = onGameOver;\r\n  readyRef.current = onReady;\r\n  highScoreRef.current = highScore;\r\n  pauseHiddenRef.current = pauseWhenHidden;\r\n  demoRef.current = !!demoMode;\r\n  overlayRef.current = !!overlayActive;\r\n  allowSpawnsRef.current = !!allowSpawns;\r\n\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    let io: IntersectionObserver | null = null;\r\n    let onResize: (() => void) | null = null;\r\n\r\n    import('q5').then((q5mod) => {\r\n      if (!alive) return;\r\n      const q5 = (q5mod as any).default ?? (q5mod as any);\r\n\r\n      const el = hostRef.current;\r\n      if (!el || !el.isConnected) return;\r\n\r\n      // clear any old instance/canvas\r\n      el.replaceChildren();\r\n      if (q5Ref.current?.remove) {\r\n        try { q5Ref.current.remove(); } catch {}\r\n        q5Ref.current = null;\r\n      }\r\n\r\n      const sketch = (p: any) => {\r\n        // ---------------- Local state ----------------\r\n        let verticalMode = false;\r\n        let rectangles: any[] = [];\r\n        let octagons: any[] = [];\r\n        let particles: any[] = [];\r\n        let projectiles: any[] = [];\r\n        let circle: any;\r\n        let lastSpawnTime = 0;\r\n        let lastOctagonSpawnTime = 0;\r\n        let rectangleSpawnRate = 2;\r\n        let coins = 0;\r\n        let gameOver = false;\r\n        let prevGameOver = false;\r\n        let lastDemoFlag = true;\r\n\r\n        let lastFiredTime = -Infinity;\r\n        const cooldownDuration = 1500;\r\n        const cooldownRadiusMax = 48;\r\n\r\n        // perf caps\r\n        const MAX_PARTICLES = isRealMobile ? 600 : 1200;\r\n        const MAX_PROJECTILES = 140;\r\n        const MAX_RECTANGLES = 220;\r\n\r\n        // ---------- Pointer gesture state ----------\r\n        let dragPointerId: number | null = null;\r\n        let lastTouch: { x: number; y: number } | null = null;\r\n\r\n        let primaryCandidateId: number | null = null;\r\n        type TapInfo = { x0: number; y0: number; x: number; y: number; t0: number };\r\n        let primaryTapInfo: TapInfo | null = null;\r\n\r\n        const tapCandidates = new Map<number, TapInfo>();\r\n\r\n        // thresholds\r\n        const TAP_MS = 180;\r\n        const TAP_MOVE = 12;     // also used as drag promotion threshold\r\n        const DRAG_PROMOTE = TAP_MOVE;\r\n        const baseImpulse = isRealMobile ? 0.5 : 0.35;\r\n\r\n        let movingUp = false;\r\n        let movingDown = false;\r\n        let movingLeft = false;\r\n        let movingRight = false;\r\n\r\n        // cached colors\r\n        let GOLD_COLORS: any[] = [];\r\n\r\n        // small scratch object to avoid GC in getCanvasCoords\r\n        const scratchXY = { x: 0, y: 0 };\r\n\r\n        function canSpawn() {\r\n          return demoRef.current || allowSpawnsRef.current;\r\n        }\r\n\r\n        // ---------------- API ----------------\r\n        const restartGame = () => {\r\n          gameOver = false;\r\n          coins = 0;\r\n          coinsChangeRef.current?.(coins);\r\n          rectangles.length = 0;\r\n          octagons.length = 0;\r\n          particles.length = 0;\r\n          projectiles.length = 0;\r\n          circle = new Circle(p, 240, p.height / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n          lastOctagonSpawnTime = p.millis();\r\n        };\r\n        (p as any).restartGame = restartGame;\r\n\r\n        // ---------------- Setup ----------------\r\n        p.setup = () => {\r\n          const w = el.offsetWidth;\r\n          const h = el.offsetHeight;\r\n\r\n          if (isRealMobile && p.pixelDensity) p.pixelDensity(1);\r\n          p.frameRate?.(60);\r\n          p.createCanvas(w, h);\r\n\r\n          // keep the page from stealing gestures\r\n          (el as HTMLElement).style.touchAction = 'none';\r\n          (p as any).canvas.style.touchAction = 'none';\r\n          (el as HTMLElement).style.overscrollBehavior = 'none';\r\n          (el as HTMLElement).style.webkitUserSelect = 'none';\r\n          (el as HTMLElement).style.userSelect = 'none';\r\n\r\n          const canvas = (p as any).canvas as HTMLCanvasElement;\r\n\r\n          const getCanvasCoords = (e: PointerEvent) => {\r\n            const r = canvas.getBoundingClientRect();\r\n            scratchXY.x = (e.clientX - r.left) * (p.width / r.width);\r\n            scratchXY.y = (e.clientY - r.top) * (p.height / r.height);\r\n            return scratchXY;\r\n          };\r\n\r\n          const promoteToDrag = (pointerId: number, x: number, y: number) => {\r\n            dragPointerId = pointerId;\r\n            lastTouch = { x, y };\r\n            try { canvas.setPointerCapture(pointerId); } catch {}\r\n          };\r\n\r\n          // ----- handlers -----\r\n          const onDown = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            if (dragPointerId === null && primaryCandidateId === null) {\r\n              primaryCandidateId = e.pointerId;\r\n              primaryTapInfo = { x0: x, y0: y, x, y, t0: p.millis() };\r\n            } else {\r\n              tapCandidates.set(e.pointerId, { x0: x, y0: y, x, y, t0: p.millis() });\r\n            }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const onMove = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            // Candidate → promote to drag when moved enough\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              if (primaryTapInfo) { primaryTapInfo.x = x; primaryTapInfo.y = y; }\r\n              const dx0 = x - (primaryTapInfo?.x0 ?? x);\r\n              const dy0 = y - (primaryTapInfo?.y0 ?? y);\r\n              const moved = Math.hypot(dx0, dy0);\r\n              if (moved > DRAG_PROMOTE) {\r\n                promoteToDrag(e.pointerId, x, y);\r\n                primaryCandidateId = null;\r\n                primaryTapInfo = null;\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Active drag: only this pointer moves the ship\r\n            if (e.pointerId === dragPointerId) {\r\n              if (!lastTouch || !circle) { lastTouch = { x, y }; e.preventDefault(); return; }\r\n              const dx = x - lastTouch.x;\r\n              const dy = y - lastTouch.y;\r\n              const dist = Math.hypot(dx, dy) || 1;\r\n              const speedFactor = Math.log2(dist + 1);\r\n              const force = baseImpulse * speedFactor;\r\n              circle.vx += (dx / dist) * force;\r\n              circle.vy += (dy / dist) * force;\r\n              lastTouch = { x, y };\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidates: track movement for tap thresholding\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) { ti.x = x; ti.y = y; }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const tryFire = () => {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n              const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n              projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n              if (projectiles.length > MAX_PROJECTILES) {\r\n                projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          };\r\n\r\n          const onUp = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n\r\n            // End drag only if the drag pointer lifted\r\n            if (e.pointerId === dragPointerId) {\r\n              try { canvas.releasePointerCapture(e.pointerId); } catch {}\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Primary candidate ended without being promoted → evaluate as tap\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              const ti = primaryTapInfo;\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n              if (ti) {\r\n                const dt = p.millis() - ti.t0;\r\n                const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n                if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire();\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidate → evaluate as tap\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) {\r\n              tapCandidates.delete(e.pointerId);\r\n              const dt = p.millis() - ti.t0;\r\n              const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n              if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire(); // does NOT affect drag\r\n              e.preventDefault();\r\n            }\r\n          };\r\n\r\n          const onCancel = (e: PointerEvent) => {\r\n            // Clean up states safely\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n            if (primaryCandidateId === e.pointerId) {\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n            }\r\n            tapCandidates.delete(e.pointerId);\r\n          };\r\n\r\n          canvas.addEventListener('pointerdown', onDown, { passive: false });\r\n          canvas.addEventListener('pointermove', onMove, { passive: false });\r\n          canvas.addEventListener('pointerup', onUp, { passive: false });\r\n          canvas.addEventListener('pointercancel', onCancel as any, { passive: false });\r\n          canvas.addEventListener('lostpointercapture', (e: any) => {\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n          });\r\n\r\n          (p as any)._pointerCleanup = () => {\r\n            try {\r\n              canvas.removeEventListener('pointerdown', onDown as any);\r\n              canvas.removeEventListener('pointermove', onMove as any);\r\n              canvas.removeEventListener('pointerup', onUp as any);\r\n              canvas.removeEventListener('pointercancel', onCancel as any);\r\n            } catch {}\r\n          };\r\n\r\n          verticalMode = window.innerWidth <= 1024 && window.innerHeight > window.innerWidth;\r\n\r\n          GOLD_COLORS = [\r\n            p.color(255, 215, 0),\r\n            p.color(255, 223, 70),\r\n            p.color(255, 200, 0),\r\n            p.color(255, 170, 50),\r\n          ];\r\n\r\n          lastOctagonSpawnTime = p.millis();\r\n          circle = new Circle(p, 240, h / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n\r\n          readyRef.current?.({ restart: restartGame });\r\n        };\r\n\r\n        // ---------------- Draw loop ----------------\r\n        p.draw = () => {\r\n          const demo = demoRef.current;\r\n\r\n          // detect demo → live transition\r\n          if (!demo && lastDemoFlag) {\r\n            rectangles.length = 0;\r\n            octagons.length = 0;\r\n            particles.length = 0;\r\n            projectiles.length = 0;\r\n            coins = 0;\r\n            coinsChangeRef.current?.(0);\r\n\r\n            circle.x = 240;\r\n            circle.y = p.height / 2;\r\n            circle.vx = circle.vy = circle.ax = circle.ay = 0;\r\n\r\n            const now = p.millis();\r\n            lastOctagonSpawnTime = now;\r\n            lastSpawnTime = now;\r\n          }\r\n          lastDemoFlag = demo;\r\n\r\n          if (pauseHiddenRef.current && !visibleRef.current) {\r\n            p.background(28);\r\n            return;\r\n          }\r\n\r\n          const delta = p.deltaTime / 16.67;\r\n          const nowMillis = p.millis();\r\n          const vw = p.width;\r\n          const vh = p.height;\r\n\r\n          p.background(28);\r\n\r\n          if (!demo && overlayRef.current) {\r\n            movingUp = movingDown = movingLeft = movingRight = false;\r\n            circle.stopHorizontal();\r\n            circle.stopVertical();\r\n          }\r\n\r\n          if (demo) {\r\n            autoEvade();\r\n          } else {\r\n            if (movingUp) circle.moveUp(); else if (movingDown) circle.moveDown(); else circle.stopVertical();\r\n            if (movingLeft) circle.moveLeft(); else if (movingRight) circle.moveRight(); else circle.stopHorizontal();\r\n          }\r\n\r\n          circle.update(delta, vw, vh);\r\n          circle.display(p);\r\n\r\n          spawnRectangles(p, nowMillis, vw, vh);\r\n          updateRectangles(p, delta, nowMillis, vw, vh);\r\n\r\n          spawnOctagons(p, nowMillis);\r\n          updateOctagons(p, delta, vw, vh);\r\n\r\n          if (!isRealMobile) p.blendMode(p.ADD);\r\n          // update & draw particles\r\n          for (let i = particles.length - 1; i >= 0; i--) {\r\n            const part = particles[i];\r\n            part.update(delta);\r\n            part.display(p);\r\n            if (part.isDead()) particles.splice(i, 1);\r\n          }\r\n          if (!isRealMobile) p.blendMode(p.BLEND);\r\n\r\n          // projectiles\r\n          for (let i = projectiles.length - 1; i >= 0; i--) {\r\n            const proj = projectiles[i];\r\n            proj.update(delta, vw, vh);\r\n            proj.display(p);\r\n            if (proj.isDead(vw, vh)) projectiles.splice(i, 1);\r\n          }\r\n\r\n          // live-mode only HUD & game-over\r\n          if (!demo) {\r\n            if (!prevGameOver && gameOver) {\r\n              const isNewHigh = coins > (highScoreRef.current ?? 0);\r\n              gameOverRef.current?.(coins, isNewHigh);\r\n            }\r\n            prevGameOver = gameOver;\r\n\r\n            if (gameOver) { p.background(28, 180); return; }\r\n            drawCooldownRing(p, nowMillis);\r\n          } else {\r\n            gameOver = false; // demo never ends\r\n          }\r\n\r\n          // --- helpers (closed over locals) ---\r\n          function drawCooldownRing(pAny: any, now: number) {\r\n            const elapsed = now - lastFiredTime;\r\n            if (elapsed >= cooldownDuration) return;\r\n            const progress = 1 - (elapsed / cooldownDuration);\r\n            const radius = progress * cooldownRadiusMax;\r\n            pAny.noStroke();\r\n            pAny.fill(200, 150, 255, 100);\r\n            pAny.ellipse(circle.x, circle.y, radius * 2, radius * 2);\r\n          }\r\n        };\r\n\r\n        // --- Demo simple AI: evade rectangles, seek octagons\r\n        function autoEvade() {\r\n          let evadeX = 0, evadeY = 0, danger = 0;\r\n\r\n          for (const rect of rectangles) {\r\n            const cx = rect.x + rect.w / 2;\r\n            const cy = rect.y + rect.h / 2;\r\n            const dx = circle.x - cx;\r\n            const dy = circle.y - cy;\r\n            const distSq = dx * dx + dy * dy;\r\n            if (distSq < 20000) {\r\n              const dist = Math.sqrt(distSq) || 1;\r\n              const weight = 1 / (dist + 300);\r\n              const force = weight * 150;\r\n              evadeX += (dx / dist) * force;\r\n              evadeY += (dy / dist) * force;\r\n              danger += (1 / (dist + 1)) * 10;\r\n            }\r\n          }\r\n\r\n          let attractX = 0, attractY = 0;\r\n          if (octagons.length > 0 && danger < 50) {\r\n            const target = octagons.reduce((a, b) => {\r\n              const da = Math.hypot(circle.x - (a.x + a.size / 2), circle.y - (a.y + a.size / 2));\r\n              const db = Math.hypot(circle.x - (b.x + b.size / 2), circle.y - (b.y + b.size / 2));\r\n              return db < da ? b : a;\r\n            });\r\n            const dx = (target.x + target.size / 2) - circle.x;\r\n            const dy = (target.y + target.size / 2) - circle.y;\r\n            const d = Math.hypot(dx, dy) || 1;\r\n            attractX = (dx / d) * 0.45;\r\n            attractY = (dy / d) * 0.45;\r\n          }\r\n\r\n          circle.ax = evadeX + attractX;\r\n          circle.ay = evadeY + attractY;\r\n\r\n          if (circle.ax === 0 && circle.ay === 0) {\r\n            const cx = p.width / 2 - circle.x;\r\n            const cy = p.height / 2 - circle.y;\r\n            const d = Math.hypot(cx, cy) || 1;\r\n            circle.ax = (cx / d) * 0.1;\r\n            circle.ay = (cy / d) * 0.1;\r\n          }\r\n        }\r\n\r\n        // ---------------- Spawners/Updaters ----------------\r\n        function spawnRectangles(p: any, now: number, vw: number, vh: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n\r\n          const inView = rectangles.filter((r) =>\r\n            verticalMode ? r.y + r.h > 0 && r.y < vh : r.x + r.w > 0 && r.x < vw\r\n          ).length;\r\n\r\n          let maxRectangles: number;\r\n          const ww = window.innerWidth;\r\n          const wh = window.innerHeight;\r\n          if (ww >= 1025) {\r\n            maxRectangles = 50;\r\n            if (inView < 10) rectangleSpawnRate = 6;\r\n            else if (inView < 25) rectangleSpawnRate = 5;\r\n            else if (inView < 40) rectangleSpawnRate = 4;\r\n            else rectangleSpawnRate = 0;\r\n          } else if (ww >= 768) {\r\n            maxRectangles = 60;\r\n            if (inView < 8) rectangleSpawnRate = 5;\r\n            else if (inView < 20) rectangleSpawnRate = 4;\r\n            else if (inView < 40) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 0;\r\n          } else {\r\n            maxRectangles = 25;\r\n            if (inView < 10) rectangleSpawnRate = 4;\r\n            else if (inView < 20) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 1;\r\n          }\r\n\r\n          if (rectangleSpawnRate > 0 && now - lastSpawnTime > 2000 / rectangleSpawnRate && inView < maxRectangles) {\r\n            rectangles.push(new Shape(p, true, false, verticalMode, GOLD_COLORS));\r\n            lastSpawnTime = now;\r\n          }\r\n\r\n          if (rectangles.length > MAX_RECTANGLES) rectangles.splice(0, rectangles.length - MAX_RECTANGLES);\r\n\r\n          if (now % 5000 < 20) {\r\n            rectangles = rectangles.filter((r) => !isNaN(r.x) && !isNaN(r.y));\r\n          }\r\n        }\r\n\r\n        function updateRectangles(p: any, delta: number, now: number, vw: number, vh: number) {\r\n          for (let i = rectangles.length - 1; i >= 0; i--) {\r\n            const r = rectangles[i];\r\n            r.update(delta);\r\n            r.display(p);\r\n            if (!demoRef.current && circle.overlaps(r)) gameOver = true;\r\n\r\n            // projectile collision\r\n            for (let j = projectiles.length - 1; j >= 0; j--) {\r\n              const proj = projectiles[j];\r\n              const projSize = (proj.size ?? proj.radius * 2);\r\n              const projX = proj.x - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projY = proj.y - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projW = projSize;\r\n              const projH = projSize;\r\n\r\n              if (\r\n                projX + projW > r.x &&\r\n                projX < r.x + r.w &&\r\n                projY + projH > r.y &&\r\n                projY < r.y + r.h\r\n              ) {\r\n                if (proj instanceof RectangleProjectile) {\r\n                  if (p.random() < 0.05) {\r\n                    rectangles.splice(i, 1);\r\n                    projectiles.splice(j, 1);\r\n                    burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                  } else {\r\n                    proj.vx *= -1;\r\n                    proj.vy *= -1;\r\n                    proj.x += proj.vx * delta * 2;\r\n                    proj.y += proj.vy * delta * 2;\r\n                  }\r\n                } else {\r\n                  rectangles.splice(i, 1);\r\n                  projectiles.splice(j, 1);\r\n                  burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                }\r\n                break;\r\n              }\r\n            }\r\n\r\n            const off = verticalMode\r\n              ? r.y - r.h > vh + 100 || r.y + r.h < -100\r\n              : r.x + r.w < -100 || r.x - r.w > vw + 100;\r\n\r\n            if (off) {\r\n              rectangles.splice(i, 1);\r\n              continue;\r\n            }\r\n          }\r\n\r\n          // resolve collisions (unchanged logic)\r\n          for (let i = 0; i < rectangles.length; i++) {\r\n            const r1 = rectangles[i];\r\n            for (let j = i + 1; j < rectangles.length; j++) {\r\n              const r2 = rectangles[j];\r\n              if (r1.overlaps(r2)) r1.resolveCollision(r2);\r\n            }\r\n          }\r\n        }\r\n\r\n        function burstRectangles(p: any, cx: number, cy: number) {\r\n          for (let k = 0; k < 8; k++) {\r\n            const angle = (p.TWO_PI / 8) * k;\r\n            const speed = p.random(2, 4);\r\n            const vx = Math.cos(angle) * speed;\r\n            const vy = Math.sin(angle) * speed;\r\n            projectiles.push(new RectangleProjectile(p, cx, cy, vx, vy, '#c896ff'));\r\n          }\r\n          if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n        }\r\n\r\n        function spawnOctagons(p: any, now: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n          if (now - lastOctagonSpawnTime > 2000) {\r\n            if (octagons.length === 0) octagons.push(new Shape(p, true, true, verticalMode, GOLD_COLORS));\r\n            lastOctagonSpawnTime = now;\r\n          }\r\n        }\r\n\r\n        function updateOctagons(p: any, delta: number, vw: number, vh: number) {\r\n          const buffer = 150;\r\n\r\n          for (let i = octagons.length - 1; i >= 0; i--) {\r\n            const o = octagons[i];\r\n            o.update(delta);\r\n            o.display(p);\r\n\r\n            if (circle.overlaps(o)) {\r\n              if (!demoRef.current) {\r\n                coins += 20;\r\n                coinsChangeRef.current?.(coins);\r\n              }\r\n              for (let j = 0; j < 10; j++) {\r\n                particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c, 0, 0, 5));\r\n              }\r\n              if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n              octagons.splice(i, 1);\r\n              continue;\r\n            }\r\n\r\n            const speed = Math.abs(o.vx) + Math.abs(o.vy);\r\n            let numParticles: number;\r\n            if (speed < 1) numParticles = 0.05;\r\n            else if (speed < 3) numParticles = 0.1;\r\n            else if (speed < 6) numParticles = 0.2;\r\n            else numParticles = 0.3;\r\n\r\n            const whole = Math.floor(numParticles);\r\n            const frac = numParticles - whole;\r\n\r\n            for (let j = 0; j < whole; j++) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (p.random() < frac) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n\r\n            if (\r\n              o.x + o.size < -buffer ||\r\n              o.x - o.size > vw + buffer ||\r\n              o.y + o.size < -buffer ||\r\n              o.y - o.size > vh + buffer\r\n            ) {\r\n              octagons.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // ---------------- Keyboard ----------------\r\n        p.keyPressed = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === ' ' || p.key === 'Spacebar') {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              if (circle) {\r\n                const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n                const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n                projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n                if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          }\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = true;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = true;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = true;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = true;\r\n        };\r\n\r\n        p.keyReleased = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = false;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = false;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = false;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = false;\r\n        };\r\n\r\n        // ---------------- Classes ----------------\r\n        class Circle {\r\n          p:any;x:number;y:number;vx:number;vy:number;ax:number;ay:number;radius:number;c:any;trail:{x:number;y:number}[];\r\n          constructor(p:any,x:number,y:number,r:number){\r\n            this.p=p;this.x=x;this.y=y;this.vx=0;this.vy=0;this.ax=0;this.ay=0;this.radius=r;this.c=p.color(200,150,255);this.trail=[];\r\n          }\r\n          update(delta:number, vw:number, vh:number){\r\n            this.vx+=this.ax*delta;this.vy+=this.ay*delta;\r\n            // damping\r\n            const damp = Math.pow(0.92,delta);\r\n            this.vx*=damp;this.vy*=damp;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;\r\n\r\n            // wrap\r\n            if(this.y+this.radius<0)this.y=vh+this.radius;else if(this.y-this.radius>vh)this.y=-this.radius;\r\n            if(this.x+this.radius<0)this.x=vw+this.radius;else if(this.x-this.radius>vw)this.x=-this.radius;\r\n\r\n            // cheap trail (no p.createVector allocs)\r\n            this.trail.push({x:this.x,y:this.y});\r\n            if(this.trail.length>8)this.trail.shift();\r\n\r\n            // clamp\r\n            const lim=10;\r\n            if(this.vx<-lim)this.vx=-lim; else if(this.vx>lim)this.vx=lim;\r\n            if(this.vy<-lim)this.vy=-lim; else if(this.vy>lim)this.vy=lim;\r\n          }\r\n          display(pAny:any){\r\n            const n=this.trail.length;\r\n            for(let i=0;i<n;i++){\r\n              const pos=this.trail[i];\r\n              const a=pAny.map(i,0,n-1,30,100);\r\n              const r=pAny.map(i,0,n-1,this.radius/2,this.radius);\r\n              pAny.fill(200,150,255,a);pAny.noStroke();pAny.ellipse(pos.x,pos.y,r,r);\r\n            }\r\n            pAny.fill(this.c);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius,this.radius);\r\n          }\r\n          moveUp(){this.ay=-0.5;}moveDown(){this.ay=0.5;}moveLeft(){this.ax=-0.5;}moveRight(){this.ax=0.5;}stopVertical(){this.ay=0;}stopHorizontal(){this.ax=0;}\r\n          overlaps(other:any){\r\n            if(other.isOctagon){\r\n              const dx=this.x-(other.x+other.size/2);\r\n              const dy=this.y-(other.y+other.size/2);\r\n              const sumR=this.radius+other.size/2;\r\n              return dx*dx+dy*dy < sumR*sumR;\r\n            }\r\n            const cx = Math.max(other.x, Math.min(this.x, other.x+other.w));\r\n            const cy = Math.max(other.y, Math.min(this.y, other.y+other.h));\r\n            const dx = this.x-cx, dy=this.y-cy;\r\n            const r = this.radius*0.3; // unchanged gameplay fudge\r\n            return dx*dx+dy*dy < r*r;\r\n          }\r\n        }\r\n\r\n        class Shape {\r\n          p:any;isOctagon:boolean;verticalMode:boolean;x=0;y=0;vx=0;vy=0;w=0;h=0;size=0;c:any;rotation=0;rotationSpeed=0;\r\n          private GOLD:any[];\r\n          constructor(p:any,startOff:boolean,isOct:boolean,vertical:boolean, GOLD:any[]){this.p=p;this.isOctagon=isOct;this.verticalMode=vertical;this.GOLD=GOLD;this.reset(startOff);}\r\n          reset(startOff:boolean){\r\n            const ww = window.innerWidth;\r\n            const wh = window.innerHeight;\r\n            if(this.verticalMode){\r\n              this.x=this.p.random(this.p.width);\r\n              if(this.isOctagon){\r\n                this.y=startOff?-this.p.random(30,60):this.p.random(this.p.height);this.vx=this.p.random(-1.2,1.2);\r\n                if(this.p.random()<0.1)this.vy=this.p.random(6,9);else if(this.p.random()<0.2)this.vy=this.p.random(0.5,1.5);else this.vy=this.p.random(2,5);\r\n                this.size=25;this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.y=startOff?-this.p.random(60,120):this.p.random(this.p.height);this.vx=this.p.random(-0.5,0.5);this.vy=this.p.random(1,3);\r\n                this.w=this.p.random(28,70);this.h=this.p.random(28,70);this.c=this.p.color(235,235,255);\r\n              }\r\n            } else {\r\n              this.x=startOff?this.p.width+this.p.random(10,40):this.p.random(this.p.width);this.y=this.p.random(this.p.height);\r\n              if(this.isOctagon){\r\n                let baseX=this.p.random(-2.5,-0.5);if(ww>=1025&&ww>wh)baseX*=4.5;\r\n                if(this.p.random()<0.1)baseX*=2;else if(this.p.random()<0.2)baseX*=0.5;this.vx=baseX;this.vy=this.p.random(-0.3,0.3);this.size=25;\r\n                this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.vx=this.p.random(-3,-1);this.vy=this.p.random(-0.5,0.5);\r\n                if(ww>=1025&&ww>wh){this.w=this.p.random(33,105);this.h=this.p.random(33,105);}\r\n                else{this.w=this.p.random(30,75);this.h=this.p.random(30,75);}this.c=this.p.color(235,235,255);\r\n              }\r\n            }\r\n            this.rotation=0;this.rotationSpeed=this.p.random(-1,1);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();\r\n            pAny.translate(this.x+(this.isOctagon?this.size/2:this.w/2),this.y+(this.isOctagon?this.size/2:this.h/2));\r\n            pAny.rotate(pAny.radians(this.rotation));pAny.fill(this.c);pAny.noStroke();\r\n            if(this.isOctagon)this.drawOctagon(pAny,0,0,this.size);else{pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.w,this.h);}\r\n            pAny.pop();\r\n          }\r\n          drawOctagon(pAny:any,x:number,y:number,size:number){\r\n            const step=pAny.TWO_PI/8;pAny.beginShape();\r\n            for(let i=0;i<8;i++){const ang=i*step;const px=x+Math.cos(ang)*size/2;const py=y+Math.sin(ang)*size/2;pAny.vertex(px,py);}\r\n            pAny.endShape(pAny.CLOSE);\r\n          }\r\n          overlaps(o:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=o.isOctagon?o.size:o.w;const h2=o.isOctagon?o.size:o.h;\r\n            return !(this.x+w1<o.x||this.x>o.x+w2||this.y+h1<o.y||this.y>o.y+h2);\r\n          }\r\n          resolveCollision(other:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=other.isOctagon?other.size:other.w;const h2=other.isOctagon?other.size:other.h;\r\n            const overlapX=Math.min(this.x+w1,other.x+w2)-Math.max(this.x,other.x);const overlapY=Math.min(this.y+h1,other.y+h2)-Math.max(this.y,other.y);\r\n            if(overlapX<overlapY){\r\n              if(this.x<other.x){this.x-=overlapX/2;other.x+=overlapX/2;}else{this.x+=overlapX/2;other.x-=overlapX/2;}this.vx*=-1;other.vx*=-1;\r\n            } else {\r\n              if(this.y<other.y){this.y-=overlapY/2;other.y+=overlapY/2;}else{this.y+=overlapY/2;other.y-=overlapY/2;}this.vy*=-1;other.vy*=-1;\r\n            }\r\n          }\r\n        }\r\n\r\n        class Particle {\r\n          p:any;x:number;y:number;vx:number;vy:number;lifespan:number;c:any;\r\n          constructor(p:any,x:number,y:number,lifespan=255,c=p.color(255,215,0),srcVx=0,srcVy=0,mul:number|null=null){\r\n            this.p=p;this.x=x;this.y=y;this.lifespan=lifespan;this.c=c;\r\n            const srcSpeed=Math.hypot(srcVx,srcVy);\r\n            let speed=p.map(srcSpeed,0,5,1,3);speed=p.constrain(speed,1.2,3.5);if(mul!=null)speed*=mul;\r\n            const ang=p.random(0,p.TWO_PI);this.vx=Math.cos(ang)*speed+srcVx*0.1;this.vy=Math.sin(ang)*speed+srcVy*0.1;\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;}\r\n          display(pAny:any){pAny.noStroke();pAny.fill(this.c.levels[0],this.c.levels[1],this.c.levels[2],this.lifespan);pAny.ellipse(this.x,this.y,4,4);}\r\n          isDead(){return this.lifespan<=0;}\r\n        }\r\n\r\n        class Projectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;ux:number;uy:number;radius:number;lifespan:number;trail:{x:number;y:number;alpha:number}[];color:any;\r\n          minSpeed=0.6;maxSpeed=12;speed=this.minSpeed;targetSpeed=8;acceleration=3;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number){\r\n            this.p=p;this.x=x;this.y=y;\r\n            const mag=Math.hypot(vx,vy)||1;\r\n            this.ux=vx/mag;this.uy=vy/mag;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;this.radius=6;this.lifespan=500;this.trail=[];this.color=p.color(200,150,255);\r\n          }\r\n          update(delta:number){\r\n            // accelerate speed toward target, direction unchanged\r\n            this.speed+=(this.targetSpeed-this.speed)*this.acceleration*delta;\r\n            if(this.speed<this.minSpeed)this.speed=this.minSpeed;if(this.speed>this.maxSpeed)this.speed=this.maxSpeed;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;\r\n            this.trail.push({x:this.x,y:this.y,alpha:160});if(this.trail.length>20)this.trail.shift();\r\n            for(let i=0;i<this.trail.length;i++)this.trail[i].alpha*=0.8;\r\n          }\r\n          display(pAny:any){\r\n            for(let i=0;i<this.trail.length;i++){const t=this.trail[i];pAny.fill(200,150,255,t.alpha);pAny.noStroke();pAny.ellipse(t.x,t.y,this.radius*2,this.radius*2);}\r\n            pAny.fill(this.color);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius*2,this.radius*2);\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<0||this.x>vw||this.y<0||this.y>vh;}\r\n        }\r\n\r\n        class RectangleProjectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;size:number;lifespan:number;maxLifespan:number;color:any;rotation:number;rotationSpeed:number;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number,color:string){\r\n            this.p=p;this.x=x;this.y=y;this.size=p.random(8,20);const factor=this.p.map(this.size,8,20,1,2);this.vx=vx*factor;this.vy=vy*factor;\r\n            this.lifespan=80;this.maxLifespan=this.lifespan;this.color=p.color(color);this.rotation=p.random(360);this.rotationSpeed=p.random(-20,20);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();pAny.translate(this.x,this.y);pAny.rotate(pAny.radians(this.rotation));\r\n            const a=pAny.map(this.lifespan,0,this.maxLifespan,0,255);pAny.fill(this.color.levels[0],this.color.levels[1],this.color.levels[2],a);\r\n            pAny.noStroke();pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.size,this.size);pAny.pop();\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<-50||this.x>vw+50||this.y<-50||this.y>vh+50;}\r\n        }\r\n      }; // end sketch\r\n\r\n      // ----- mount / resize / cleanup -----\r\n      requestAnimationFrame(() => {\r\n        if (!alive || !el.isConnected) return;\r\n\r\n        if (q5Ref.current) {\r\n          try { q5Ref.current.remove?.(); } catch {}\r\n          q5Ref.current = null;\r\n        }\r\n        let instance: any;\r\n        try { instance = new q5(sketch, el); }\r\n        catch (err) { console.error('[GameCanvas] q5 init error', err); return; }\r\n        q5Ref.current = instance;\r\n\r\n        if (pauseHiddenRef.current && 'IntersectionObserver' in window) {\r\n          io = new IntersectionObserver(([entry]) => {\r\n            visibleRef.current = entry.isIntersecting;\r\n            try {\r\n              if (entry.isIntersecting) q5Ref.current?.loop?.();\r\n              else q5Ref.current?.noLoop?.();\r\n            } catch {}\r\n          }, { threshold: 0.01 });\r\n          io.observe(el);\r\n        }\r\n\r\n        let ro: ResizeObserver | null = null;\r\n        const vv: VisualViewport | undefined = (window as any).visualViewport;\r\n        let lastW = 0, lastH = 0;\r\n\r\n        const resizeToHost = () => {\r\n          const host = hostRef.current;\r\n          const inst = q5Ref.current;\r\n          if (!host || !host.isConnected || !inst?.resizeCanvas) return;\r\n          const w = Math.max(1, Math.round(host.offsetWidth));\r\n          const h = Math.max(1, Math.round(host.offsetHeight));\r\n          if (w === lastW && h === lastH) return;\r\n          lastW = w; lastH = h;\r\n          try { inst.resizeCanvas(w, h); } catch (e) { console.warn('[GameCanvas] resize skipped', e); }\r\n        };\r\n\r\n        onResize = () => requestAnimationFrame(resizeToHost);\r\n        window.addEventListener('resize', onResize);\r\n\r\n        if ('ResizeObserver' in window) {\r\n          ro = new ResizeObserver(() => requestAnimationFrame(resizeToHost));\r\n          ro.observe(el);\r\n        }\r\n\r\n        window.addEventListener('orientationchange', onResize);\r\n        vv?.addEventListener('resize', onResize);\r\n        vv?.addEventListener('scroll', onResize);\r\n\r\n        const onFs = () => requestAnimationFrame(resizeToHost);\r\n        document.addEventListener('fullscreenchange', onFs);\r\n\r\n        requestAnimationFrame(resizeToHost);\r\n\r\n        cleanupRef.current = () => {\r\n          const instAny = q5Ref.current as any;\r\n          if (instAny && typeof instAny._pointerCleanup === 'function') {\r\n            try { instAny._pointerCleanup(); } catch {}\r\n          }\r\n          if (io) io.disconnect();\r\n          if (onResize) window.removeEventListener('resize', onResize);\r\n          document.removeEventListener('fullscreenchange', onFs);\r\n          ro?.disconnect();\r\n          vv?.removeEventListener('resize', onResize);\r\n          vv?.removeEventListener('scroll', onResize);\r\n          if (q5Ref.current?.remove) q5Ref.current.remove();\r\n          q5Ref.current = null;\r\n          el.replaceChildren();\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      alive = false;\r\n      cleanupRef.current?.();\r\n      cleanupRef.current = null;\r\n    };\r\n  }, []); // run once\r\n\r\n  return <div className=\"evade-the-rock\" ref={hostRef} style={{ width: '100vw', height: '100dvh' }} />;\r\n}\r\n"],"names":["GameCanvas","_ref","onCoinsChange","highScore","onGameOver","onReady","pauseWhenHidden","demoMode","overlayActive","allowSpawns","hostRef","useRef","q5Ref","visibleRef","cleanupRef","coinsChangeRef","gameOverRef","readyRef","highScoreRef","pauseHiddenRef","demoRef","overlayRef","allowSpawnsRef","current","isRealMobile","useRealMobileViewport","useEffect","alive","io","onResize","then","q5mod","_default","_q5Ref$current","q5","default","el","isConnected","replaceChildren","remove","_unused","sketch","p","circle","verticalMode","rectangles","octagons","particles","projectiles","lastSpawnTime","lastOctagonSpawnTime","rectangleSpawnRate","coins","gameOver","prevGameOver","lastDemoFlag","lastFiredTime","Infinity","cooldownDuration","MAX_PARTICLES","MAX_PROJECTILES","MAX_RECTANGLES","dragPointerId","lastTouch","primaryCandidateId","primaryTapInfo","tapCandidates","Map","baseImpulse","movingUp","movingDown","movingLeft","movingRight","GOLD_COLORS","scratchXY","x","y","canSpawn","restartGame","_coinsChangeRef$curre","call","length","Circle","height","millis","burstRectangles","cx","cy","k","angle","TWO_PI","speed","random","vx","Math","cos","vy","sin","push","RectangleProjectile","splice","setup","_p$frameRate","_readyRef$current","w","offsetWidth","h","offsetHeight","pixelDensity","frameRate","createCanvas","style","touchAction","canvas","overscrollBehavior","webkitUserSelect","userSelect","getCanvasCoords","e","r","getBoundingClientRect","clientX","left","width","clientY","top","onDown","pointerId","x0","y0","t0","set","preventDefault","onMove","_primaryTapInfo$x","_primaryTapInfo","_primaryTapInfo$y","_primaryTapInfo2","dx0","dy0","hypot","promoteToDrag","setPointerCapture","_unused2","dx","dy","dist","speedFactor","log2","force","ti","get","tryFire","now","Projectile","onUp","releasePointerCapture","_unused3","dt","moved","delete","onCancel","addEventListener","passive","_pointerCleanup","removeEventListener","_unused4","window","innerWidth","innerHeight","color","restart","draw","demo","_coinsChangeRef$curre2","ax","ay","background","delta","deltaTime","nowMillis","vw","vh","stopHorizontal","stopVertical","evadeX","evadeY","danger","rect","distSq","sqrt","attractX","attractY","target","reduce","a","b","da","size","d","autoEvade","moveUp","moveDown","moveLeft","moveRight","update","display","inView","filter","maxRectangles","ww","Shape","isNaN","spawnRectangles","i","overlaps","j","_proj$size","proj","projSize","radius","projX","projY","projH","r1","r2","resolveCollision","updateRectangles","spawnOctagons","buffer","o","_coinsChangeRef$curre3","Particle","c","abs","numParticles","whole","floor","frac","updateOctagons","blendMode","ADD","part","isDead","BLEND","_highScoreRef$current","_gameOverRef$current","isNewHigh","pAny","elapsed","noStroke","fill","ellipse","drawCooldownRing","keyPressed","key","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","keyReleased","constructor","trail","this","damp","pow","shift","lim","n","pos","map","other","isOctagon","sumR","max","min","startOff","isOct","vertical","GOLD","rotation","rotationSpeed","reset","wh","baseX","translate","rotate","radians","drawOctagon","rectMode","CENTER","pop","step","beginShape","ang","px","py","vertex","endShape","CLOSE","w1","h1","w2","h2","overlapX","overlapY","lifespan","arguments","undefined","srcVx","srcVy","mul","srcSpeed","constrain","levels","ux","uy","minSpeed","maxSpeed","targetSpeed","acceleration","mag","alpha","t","maxLifespan","factor","requestAnimationFrame","_q5Ref$current$remove","_q5Ref$current2","_unused5","instance","err","console","error","IntersectionObserver","_ref2","entry","isIntersecting","_q5Ref$current3","_q5Ref$current3$loop","_q5Ref$current4","_q5Ref$current4$noLoo","loop","noLoop","_unused6","threshold","observe","ro","vv","visualViewport","lastW","lastH","resizeToHost","host","inst","resizeCanvas","round","warn","ResizeObserver","onFs","document","_ro","_q5Ref$current5","instAny","_unused7","disconnect","_cleanupRef$current","_jsx","className","ref"],"sourceRoot":""}