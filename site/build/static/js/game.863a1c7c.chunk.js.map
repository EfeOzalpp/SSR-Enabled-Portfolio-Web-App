{"version":3,"file":"static/js/game.863a1c7c.chunk.js","mappings":"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","sources":["utils/content-utility/real-mobile.ts","components/rock-escapade/game-canvas.tsx"],"sourcesContent":["// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","// src/components/rock-escapade/GameCanvas.tsx\r\nimport { useEffect, useRef } from 'react';\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\n\r\ntype Props = {\r\n  onCoinsChange?: (coins: number) => void;\r\n  highScore?: number;\r\n  onGameOver?: (finalCoins: number, isNewHigh: boolean) => void;\r\n  onReady?: (api: { restart: () => void }) => void;\r\n  pauseWhenHidden?: boolean;\r\n  demoMode?: boolean;\r\n  overlayActive?: boolean;\r\n  allowSpawns?: boolean;\r\n};\r\n\r\nexport default function GameCanvas({\r\n  onCoinsChange,\r\n  highScore = 0,\r\n  onGameOver,\r\n  onReady,\r\n  pauseWhenHidden = true,\r\n  demoMode = false,\r\n  overlayActive = false,\r\n  allowSpawns = true,\r\n}: Props) {\r\n  const hostRef = useRef<HTMLDivElement>(null);\r\n  const q5Ref = useRef<any>(null);\r\n  const visibleRef = useRef(true);\r\n  const cleanupRef = useRef<(() => void) | null>(null);\r\n\r\n  // prop refs\r\n  const coinsChangeRef = useRef(onCoinsChange);\r\n  const gameOverRef = useRef(onGameOver);\r\n  const readyRef = useRef(onReady);\r\n  const highScoreRef = useRef(highScore);\r\n  const pauseHiddenRef = useRef(pauseWhenHidden);\r\n  const demoRef = useRef(!!demoMode);\r\n  const overlayRef = useRef(!!overlayActive);\r\n  const allowSpawnsRef = useRef(allowSpawns);\r\n\r\n  coinsChangeRef.current = onCoinsChange;\r\n  gameOverRef.current = onGameOver;\r\n  readyRef.current = onReady;\r\n  highScoreRef.current = highScore;\r\n  pauseHiddenRef.current = pauseWhenHidden;\r\n  demoRef.current = !!demoMode;\r\n  overlayRef.current = !!overlayActive;\r\n  allowSpawnsRef.current = !!allowSpawns;\r\n\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    let io: IntersectionObserver | null = null;\r\n    let onResize: (() => void) | null = null;\r\n\r\n    import('q5').then((q5mod) => {\r\n      if (!alive) return;\r\n      const q5 = (q5mod as any).default ?? (q5mod as any);\r\n\r\n      const el = hostRef.current;\r\n      if (!el || !el.isConnected) return;\r\n\r\n      // clear any old instance/canvas\r\n      el.replaceChildren();\r\n      if (q5Ref.current?.remove) {\r\n        try { q5Ref.current.remove(); } catch {}\r\n        q5Ref.current = null;\r\n      }\r\n\r\n      const sketch = (p: any) => {\r\n        // ---------------- Local state ----------------\r\n        let verticalMode = false;\r\n        let rectangles: any[] = [];\r\n        let octagons: any[] = [];\r\n        let particles: any[] = [];\r\n        let projectiles: any[] = [];\r\n        let circle: any;\r\n        let lastSpawnTime = 0;\r\n        let lastOctagonSpawnTime = 0;\r\n        let rectangleSpawnRate = 2;\r\n        let coins = 0;\r\n        let gameOver = false;\r\n        let prevGameOver = false;\r\n        let lastDemoFlag = true;\r\n\r\n        let lastFiredTime = -Infinity;\r\n        const cooldownDuration = 1500;\r\n        const cooldownRadiusMax = 48;\r\n\r\n        // perf caps\r\n        const MAX_PARTICLES = isRealMobile ? 600 : 1200;\r\n        const MAX_PROJECTILES = 140;\r\n        const MAX_RECTANGLES = 220;\r\n\r\n        // ---------- Pointer gesture state ----------\r\n        let dragPointerId: number | null = null;\r\n        let lastTouch: { x: number; y: number } | null = null;\r\n\r\n        let primaryCandidateId: number | null = null;\r\n        type TapInfo = { x0: number; y0: number; x: number; y: number; t0: number };\r\n        let primaryTapInfo: TapInfo | null = null;\r\n\r\n        const tapCandidates = new Map<number, TapInfo>();\r\n\r\n        // thresholds\r\n        const TAP_MS = 180;\r\n        const TAP_MOVE = 12;     // also used as drag promotion threshold\r\n        const DRAG_PROMOTE = TAP_MOVE;\r\n        const baseImpulse = isRealMobile ? 0.5 : 0.35;\r\n\r\n        let movingUp = false;\r\n        let movingDown = false;\r\n        let movingLeft = false;\r\n        let movingRight = false;\r\n\r\n        // cached colors\r\n        let GOLD_COLORS: any[] = [];\r\n\r\n        // small scratch object to avoid GC in getCanvasCoords\r\n        const scratchXY = { x: 0, y: 0 };\r\n\r\n        function canSpawn() {\r\n          return demoRef.current || allowSpawnsRef.current;\r\n        }\r\n\r\n        // ---------------- API ----------------\r\n        const restartGame = () => {\r\n          gameOver = false;\r\n          coins = 0;\r\n          coinsChangeRef.current?.(coins);\r\n          rectangles.length = 0;\r\n          octagons.length = 0;\r\n          particles.length = 0;\r\n          projectiles.length = 0;\r\n          circle = new Circle(p, 240, p.height / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n          lastOctagonSpawnTime = p.millis();\r\n        };\r\n        (p as any).restartGame = restartGame;\r\n\r\n        // ---------------- Setup ----------------\r\n        p.setup = () => {\r\n          const w = el.offsetWidth;\r\n          const h = el.offsetHeight;\r\n\r\n          if (isRealMobile && p.pixelDensity) p.pixelDensity(1);\r\n          p.frameRate?.(60);\r\n          p.createCanvas(w, h);\r\n\r\n          // keep the page from stealing gestures\r\n          (el as HTMLElement).style.touchAction = 'none';\r\n          (p as any).canvas.style.touchAction = 'none';\r\n          (el as HTMLElement).style.overscrollBehavior = 'none';\r\n          (el as HTMLElement).style.webkitUserSelect = 'none';\r\n          (el as HTMLElement).style.userSelect = 'none';\r\n\r\n          const canvas = (p as any).canvas as HTMLCanvasElement;\r\n\r\n          const getCanvasCoords = (e: PointerEvent) => {\r\n            const r = canvas.getBoundingClientRect();\r\n            scratchXY.x = (e.clientX - r.left) * (p.width / r.width);\r\n            scratchXY.y = (e.clientY - r.top) * (p.height / r.height);\r\n            return scratchXY;\r\n          };\r\n\r\n          const promoteToDrag = (pointerId: number, x: number, y: number) => {\r\n            dragPointerId = pointerId;\r\n            lastTouch = { x, y };\r\n            try { canvas.setPointerCapture(pointerId); } catch {}\r\n          };\r\n\r\n          // ----- handlers -----\r\n          const onDown = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            if (dragPointerId === null && primaryCandidateId === null) {\r\n              primaryCandidateId = e.pointerId;\r\n              primaryTapInfo = { x0: x, y0: y, x, y, t0: p.millis() };\r\n            } else {\r\n              tapCandidates.set(e.pointerId, { x0: x, y0: y, x, y, t0: p.millis() });\r\n            }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const onMove = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            // Candidate → promote to drag when moved enough\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              if (primaryTapInfo) { primaryTapInfo.x = x; primaryTapInfo.y = y; }\r\n              const dx0 = x - (primaryTapInfo?.x0 ?? x);\r\n              const dy0 = y - (primaryTapInfo?.y0 ?? y);\r\n              const moved = Math.hypot(dx0, dy0);\r\n              if (moved > DRAG_PROMOTE) {\r\n                promoteToDrag(e.pointerId, x, y);\r\n                primaryCandidateId = null;\r\n                primaryTapInfo = null;\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Active drag: only this pointer moves the ship\r\n            if (e.pointerId === dragPointerId) {\r\n              if (!lastTouch || !circle) { lastTouch = { x, y }; e.preventDefault(); return; }\r\n              const dx = x - lastTouch.x;\r\n              const dy = y - lastTouch.y;\r\n              const dist = Math.hypot(dx, dy) || 1;\r\n              const speedFactor = Math.log2(dist + 1);\r\n              const force = baseImpulse * speedFactor;\r\n              circle.vx += (dx / dist) * force;\r\n              circle.vy += (dy / dist) * force;\r\n              lastTouch = { x, y };\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidates: track movement for tap thresholding\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) { ti.x = x; ti.y = y; }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const tryFire = () => {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n              const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n              projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n              if (projectiles.length > MAX_PROJECTILES) {\r\n                projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          };\r\n\r\n          const onUp = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n\r\n            // End drag only if the drag pointer lifted\r\n            if (e.pointerId === dragPointerId) {\r\n              try { canvas.releasePointerCapture(e.pointerId); } catch {}\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Primary candidate ended without being promoted → evaluate as tap\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              const ti = primaryTapInfo;\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n              if (ti) {\r\n                const dt = p.millis() - ti.t0;\r\n                const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n                if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire();\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidate → evaluate as tap\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) {\r\n              tapCandidates.delete(e.pointerId);\r\n              const dt = p.millis() - ti.t0;\r\n              const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n              if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire(); // does NOT affect drag\r\n              e.preventDefault();\r\n            }\r\n          };\r\n\r\n          const onCancel = (e: PointerEvent) => {\r\n            // Clean up states safely\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n            if (primaryCandidateId === e.pointerId) {\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n            }\r\n            tapCandidates.delete(e.pointerId);\r\n          };\r\n\r\n          canvas.addEventListener('pointerdown', onDown, { passive: false });\r\n          canvas.addEventListener('pointermove', onMove, { passive: false });\r\n          canvas.addEventListener('pointerup', onUp, { passive: false });\r\n          canvas.addEventListener('pointercancel', onCancel as any, { passive: false });\r\n          canvas.addEventListener('lostpointercapture', (e: any) => {\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n          });\r\n\r\n          (p as any)._pointerCleanup = () => {\r\n            try {\r\n              canvas.removeEventListener('pointerdown', onDown as any);\r\n              canvas.removeEventListener('pointermove', onMove as any);\r\n              canvas.removeEventListener('pointerup', onUp as any);\r\n              canvas.removeEventListener('pointercancel', onCancel as any);\r\n            } catch {}\r\n          };\r\n\r\n          verticalMode = window.innerWidth <= 1024 && window.innerHeight > window.innerWidth;\r\n\r\n          GOLD_COLORS = [\r\n            p.color(255, 215, 0),\r\n            p.color(255, 223, 70),\r\n            p.color(255, 200, 0),\r\n            p.color(255, 170, 50),\r\n          ];\r\n\r\n          lastOctagonSpawnTime = p.millis();\r\n          circle = new Circle(p, 240, h / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n\r\n          readyRef.current?.({ restart: restartGame });\r\n        };\r\n\r\n        // ---------------- Draw loop ----------------\r\n        p.draw = () => {\r\n          const demo = demoRef.current;\r\n\r\n          // detect demo → live transition\r\n          if (!demo && lastDemoFlag) {\r\n            rectangles.length = 0;\r\n            octagons.length = 0;\r\n            particles.length = 0;\r\n            projectiles.length = 0;\r\n            coins = 0;\r\n            coinsChangeRef.current?.(0);\r\n\r\n            circle.x = 240;\r\n            circle.y = p.height / 2;\r\n            circle.vx = circle.vy = circle.ax = circle.ay = 0;\r\n\r\n            const now = p.millis();\r\n            lastOctagonSpawnTime = now;\r\n            lastSpawnTime = now;\r\n          }\r\n          lastDemoFlag = demo;\r\n\r\n          if (pauseHiddenRef.current && !visibleRef.current) {\r\n            p.background(28);\r\n            return;\r\n          }\r\n\r\n          const delta = p.deltaTime / 16.67;\r\n          const nowMillis = p.millis();\r\n          const vw = p.width;\r\n          const vh = p.height;\r\n\r\n          p.background(28);\r\n\r\n          if (!demo && overlayRef.current) {\r\n            movingUp = movingDown = movingLeft = movingRight = false;\r\n            circle.stopHorizontal();\r\n            circle.stopVertical();\r\n          }\r\n\r\n          if (demo) {\r\n            autoEvade();\r\n          } else {\r\n            if (movingUp) circle.moveUp(); else if (movingDown) circle.moveDown(); else circle.stopVertical();\r\n            if (movingLeft) circle.moveLeft(); else if (movingRight) circle.moveRight(); else circle.stopHorizontal();\r\n          }\r\n\r\n          circle.update(delta, vw, vh);\r\n          circle.display(p);\r\n\r\n          spawnRectangles(p, nowMillis, vw, vh);\r\n          updateRectangles(p, delta, nowMillis, vw, vh);\r\n\r\n          spawnOctagons(p, nowMillis);\r\n          updateOctagons(p, delta, vw, vh);\r\n\r\n          if (!isRealMobile) p.blendMode(p.ADD);\r\n          // update & draw particles\r\n          for (let i = particles.length - 1; i >= 0; i--) {\r\n            const part = particles[i];\r\n            part.update(delta);\r\n            part.display(p);\r\n            if (part.isDead()) particles.splice(i, 1);\r\n          }\r\n          if (!isRealMobile) p.blendMode(p.BLEND);\r\n\r\n          // projectiles\r\n          for (let i = projectiles.length - 1; i >= 0; i--) {\r\n            const proj = projectiles[i];\r\n            proj.update(delta, vw, vh);\r\n            proj.display(p);\r\n            if (proj.isDead(vw, vh)) projectiles.splice(i, 1);\r\n          }\r\n\r\n          // live-mode only HUD & game-over\r\n          if (!demo) {\r\n            if (!prevGameOver && gameOver) {\r\n              const isNewHigh = coins > (highScoreRef.current ?? 0);\r\n              gameOverRef.current?.(coins, isNewHigh);\r\n            }\r\n            prevGameOver = gameOver;\r\n\r\n            if (gameOver) { p.background(28, 180); return; }\r\n            drawCooldownRing(p, nowMillis);\r\n          } else {\r\n            gameOver = false; // demo never ends\r\n          }\r\n\r\n          // --- helpers (closed over locals) ---\r\n          function drawCooldownRing(pAny: any, now: number) {\r\n            const elapsed = now - lastFiredTime;\r\n            if (elapsed >= cooldownDuration) return;\r\n            const progress = 1 - (elapsed / cooldownDuration);\r\n            const radius = progress * cooldownRadiusMax;\r\n            pAny.noStroke();\r\n            pAny.fill(200, 150, 255, 100);\r\n            pAny.ellipse(circle.x, circle.y, radius * 2, radius * 2);\r\n          }\r\n        };\r\n\r\n        // --- Demo simple AI: evade rectangles, seek octagons\r\n        function autoEvade() {\r\n          let evadeX = 0, evadeY = 0, danger = 0;\r\n\r\n          for (const rect of rectangles) {\r\n            const cx = rect.x + rect.w / 2;\r\n            const cy = rect.y + rect.h / 2;\r\n            const dx = circle.x - cx;\r\n            const dy = circle.y - cy;\r\n            const distSq = dx * dx + dy * dy;\r\n            if (distSq < 20000) {\r\n              const dist = Math.sqrt(distSq) || 1;\r\n              const weight = 1 / (dist + 300);\r\n              const force = weight * 150;\r\n              evadeX += (dx / dist) * force;\r\n              evadeY += (dy / dist) * force;\r\n              danger += (1 / (dist + 1)) * 10;\r\n            }\r\n          }\r\n\r\n          let attractX = 0, attractY = 0;\r\n          if (octagons.length > 0 && danger < 50) {\r\n            const target = octagons.reduce((a, b) => {\r\n              const da = Math.hypot(circle.x - (a.x + a.size / 2), circle.y - (a.y + a.size / 2));\r\n              const db = Math.hypot(circle.x - (b.x + b.size / 2), circle.y - (b.y + b.size / 2));\r\n              return db < da ? b : a;\r\n            });\r\n            const dx = (target.x + target.size / 2) - circle.x;\r\n            const dy = (target.y + target.size / 2) - circle.y;\r\n            const d = Math.hypot(dx, dy) || 1;\r\n            attractX = (dx / d) * 0.45;\r\n            attractY = (dy / d) * 0.45;\r\n          }\r\n\r\n          circle.ax = evadeX + attractX;\r\n          circle.ay = evadeY + attractY;\r\n\r\n          if (circle.ax === 0 && circle.ay === 0) {\r\n            const cx = p.width / 2 - circle.x;\r\n            const cy = p.height / 2 - circle.y;\r\n            const d = Math.hypot(cx, cy) || 1;\r\n            circle.ax = (cx / d) * 0.1;\r\n            circle.ay = (cy / d) * 0.1;\r\n          }\r\n        }\r\n\r\n        // ---------------- Spawners/Updaters ----------------\r\n        function spawnRectangles(p: any, now: number, vw: number, vh: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n\r\n          const inView = rectangles.filter((r) =>\r\n            verticalMode ? r.y + r.h > 0 && r.y < vh : r.x + r.w > 0 && r.x < vw\r\n          ).length;\r\n\r\n          let maxRectangles: number;\r\n          const ww = window.innerWidth;\r\n          const wh = window.innerHeight;\r\n          if (ww >= 1025) {\r\n            maxRectangles = 50;\r\n            if (inView < 10) rectangleSpawnRate = 6;\r\n            else if (inView < 25) rectangleSpawnRate = 5;\r\n            else if (inView < 40) rectangleSpawnRate = 4;\r\n            else rectangleSpawnRate = 0;\r\n          } else if (ww >= 768) {\r\n            maxRectangles = 60;\r\n            if (inView < 8) rectangleSpawnRate = 5;\r\n            else if (inView < 20) rectangleSpawnRate = 4;\r\n            else if (inView < 40) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 0;\r\n          } else {\r\n            maxRectangles = 25;\r\n            if (inView < 10) rectangleSpawnRate = 4;\r\n            else if (inView < 20) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 1;\r\n          }\r\n\r\n          if (rectangleSpawnRate > 0 && now - lastSpawnTime > 2000 / rectangleSpawnRate && inView < maxRectangles) {\r\n            rectangles.push(new Shape(p, true, false, verticalMode, GOLD_COLORS));\r\n            lastSpawnTime = now;\r\n          }\r\n\r\n          if (rectangles.length > MAX_RECTANGLES) rectangles.splice(0, rectangles.length - MAX_RECTANGLES);\r\n\r\n          if (now % 5000 < 20) {\r\n            rectangles = rectangles.filter((r) => !isNaN(r.x) && !isNaN(r.y));\r\n          }\r\n        }\r\n\r\n        function updateRectangles(p: any, delta: number, now: number, vw: number, vh: number) {\r\n          for (let i = rectangles.length - 1; i >= 0; i--) {\r\n            const r = rectangles[i];\r\n            r.update(delta);\r\n            r.display(p);\r\n            if (!demoRef.current && circle.overlaps(r)) gameOver = true;\r\n\r\n            // projectile collision\r\n            for (let j = projectiles.length - 1; j >= 0; j--) {\r\n              const proj = projectiles[j];\r\n              const projSize = (proj.size ?? proj.radius * 2);\r\n              const projX = proj.x - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projY = proj.y - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projW = projSize;\r\n              const projH = projSize;\r\n\r\n              if (\r\n                projX + projW > r.x &&\r\n                projX < r.x + r.w &&\r\n                projY + projH > r.y &&\r\n                projY < r.y + r.h\r\n              ) {\r\n                if (proj instanceof RectangleProjectile) {\r\n                  if (p.random() < 0.05) {\r\n                    rectangles.splice(i, 1);\r\n                    projectiles.splice(j, 1);\r\n                    burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                  } else {\r\n                    proj.vx *= -1;\r\n                    proj.vy *= -1;\r\n                    proj.x += proj.vx * delta * 2;\r\n                    proj.y += proj.vy * delta * 2;\r\n                  }\r\n                } else {\r\n                  rectangles.splice(i, 1);\r\n                  projectiles.splice(j, 1);\r\n                  burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                }\r\n                break;\r\n              }\r\n            }\r\n\r\n            const off = verticalMode\r\n              ? r.y - r.h > vh + 100 || r.y + r.h < -100\r\n              : r.x + r.w < -100 || r.x - r.w > vw + 100;\r\n\r\n            if (off) {\r\n              rectangles.splice(i, 1);\r\n              continue;\r\n            }\r\n          }\r\n\r\n          // resolve collisions (unchanged logic)\r\n          for (let i = 0; i < rectangles.length; i++) {\r\n            const r1 = rectangles[i];\r\n            for (let j = i + 1; j < rectangles.length; j++) {\r\n              const r2 = rectangles[j];\r\n              if (r1.overlaps(r2)) r1.resolveCollision(r2);\r\n            }\r\n          }\r\n        }\r\n\r\n        function burstRectangles(p: any, cx: number, cy: number) {\r\n          for (let k = 0; k < 8; k++) {\r\n            const angle = (p.TWO_PI / 8) * k;\r\n            const speed = p.random(2, 4);\r\n            const vx = Math.cos(angle) * speed;\r\n            const vy = Math.sin(angle) * speed;\r\n            projectiles.push(new RectangleProjectile(p, cx, cy, vx, vy, '#c896ff'));\r\n          }\r\n          if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n        }\r\n\r\n        function spawnOctagons(p: any, now: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n          if (now - lastOctagonSpawnTime > 2000) {\r\n            if (octagons.length === 0) octagons.push(new Shape(p, true, true, verticalMode, GOLD_COLORS));\r\n            lastOctagonSpawnTime = now;\r\n          }\r\n        }\r\n\r\n        function updateOctagons(p: any, delta: number, vw: number, vh: number) {\r\n          const buffer = 150;\r\n\r\n          for (let i = octagons.length - 1; i >= 0; i--) {\r\n            const o = octagons[i];\r\n            o.update(delta);\r\n            o.display(p);\r\n\r\n            if (circle.overlaps(o)) {\r\n              if (!demoRef.current) {\r\n                coins += 20;\r\n                coinsChangeRef.current?.(coins);\r\n              }\r\n              for (let j = 0; j < 10; j++) {\r\n                particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c, 0, 0, 5));\r\n              }\r\n              if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n              octagons.splice(i, 1);\r\n              continue;\r\n            }\r\n\r\n            const speed = Math.abs(o.vx) + Math.abs(o.vy);\r\n            let numParticles: number;\r\n            if (speed < 1) numParticles = 0.05;\r\n            else if (speed < 3) numParticles = 0.1;\r\n            else if (speed < 6) numParticles = 0.2;\r\n            else numParticles = 0.3;\r\n\r\n            const whole = Math.floor(numParticles);\r\n            const frac = numParticles - whole;\r\n\r\n            for (let j = 0; j < whole; j++) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (p.random() < frac) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n\r\n            if (\r\n              o.x + o.size < -buffer ||\r\n              o.x - o.size > vw + buffer ||\r\n              o.y + o.size < -buffer ||\r\n              o.y - o.size > vh + buffer\r\n            ) {\r\n              octagons.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // ---------------- Keyboard ----------------\r\n        p.keyPressed = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === ' ' || p.key === 'Spacebar') {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              if (circle) {\r\n                const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n                const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n                projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n                if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          }\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = true;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = true;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = true;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = true;\r\n        };\r\n\r\n        p.keyReleased = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = false;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = false;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = false;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = false;\r\n        };\r\n\r\n        // ---------------- Classes ----------------\r\n        class Circle {\r\n          p:any;x:number;y:number;vx:number;vy:number;ax:number;ay:number;radius:number;c:any;trail:{x:number;y:number}[];\r\n          constructor(p:any,x:number,y:number,r:number){\r\n            this.p=p;this.x=x;this.y=y;this.vx=0;this.vy=0;this.ax=0;this.ay=0;this.radius=r;this.c=p.color(200,150,255);this.trail=[];\r\n          }\r\n          update(delta:number, vw:number, vh:number){\r\n            this.vx+=this.ax*delta;this.vy+=this.ay*delta;\r\n            // damping\r\n            const damp = Math.pow(0.92,delta);\r\n            this.vx*=damp;this.vy*=damp;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;\r\n\r\n            // wrap\r\n            if(this.y+this.radius<0)this.y=vh+this.radius;else if(this.y-this.radius>vh)this.y=-this.radius;\r\n            if(this.x+this.radius<0)this.x=vw+this.radius;else if(this.x-this.radius>vw)this.x=-this.radius;\r\n\r\n            // cheap trail (no p.createVector allocs)\r\n            this.trail.push({x:this.x,y:this.y});\r\n            if(this.trail.length>8)this.trail.shift();\r\n\r\n            // clamp\r\n            const lim=10;\r\n            if(this.vx<-lim)this.vx=-lim; else if(this.vx>lim)this.vx=lim;\r\n            if(this.vy<-lim)this.vy=-lim; else if(this.vy>lim)this.vy=lim;\r\n          }\r\n          display(pAny:any){\r\n            const n=this.trail.length;\r\n            for(let i=0;i<n;i++){\r\n              const pos=this.trail[i];\r\n              const a=pAny.map(i,0,n-1,30,100);\r\n              const r=pAny.map(i,0,n-1,this.radius/2,this.radius);\r\n              pAny.fill(200,150,255,a);pAny.noStroke();pAny.ellipse(pos.x,pos.y,r,r);\r\n            }\r\n            pAny.fill(this.c);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius,this.radius);\r\n          }\r\n          moveUp(){this.ay=-0.5;}moveDown(){this.ay=0.5;}moveLeft(){this.ax=-0.5;}moveRight(){this.ax=0.5;}stopVertical(){this.ay=0;}stopHorizontal(){this.ax=0;}\r\n          overlaps(other:any){\r\n            if(other.isOctagon){\r\n              const dx=this.x-(other.x+other.size/2);\r\n              const dy=this.y-(other.y+other.size/2);\r\n              const sumR=this.radius+other.size/2;\r\n              return dx*dx+dy*dy < sumR*sumR;\r\n            }\r\n            const cx = Math.max(other.x, Math.min(this.x, other.x+other.w));\r\n            const cy = Math.max(other.y, Math.min(this.y, other.y+other.h));\r\n            const dx = this.x-cx, dy=this.y-cy;\r\n            const r = this.radius*0.3; // unchanged gameplay fudge\r\n            return dx*dx+dy*dy < r*r;\r\n          }\r\n        }\r\n\r\n        class Shape {\r\n          p:any;isOctagon:boolean;verticalMode:boolean;x=0;y=0;vx=0;vy=0;w=0;h=0;size=0;c:any;rotation=0;rotationSpeed=0;\r\n          private GOLD:any[];\r\n          constructor(p:any,startOff:boolean,isOct:boolean,vertical:boolean, GOLD:any[]){this.p=p;this.isOctagon=isOct;this.verticalMode=vertical;this.GOLD=GOLD;this.reset(startOff);}\r\n          reset(startOff:boolean){\r\n            const ww = window.innerWidth;\r\n            const wh = window.innerHeight;\r\n            if(this.verticalMode){\r\n              this.x=this.p.random(this.p.width);\r\n              if(this.isOctagon){\r\n                this.y=startOff?-this.p.random(30,60):this.p.random(this.p.height);this.vx=this.p.random(-1.2,1.2);\r\n                if(this.p.random()<0.1)this.vy=this.p.random(6,9);else if(this.p.random()<0.2)this.vy=this.p.random(0.5,1.5);else this.vy=this.p.random(2,5);\r\n                this.size=25;this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.y=startOff?-this.p.random(60,120):this.p.random(this.p.height);this.vx=this.p.random(-0.5,0.5);this.vy=this.p.random(1,3);\r\n                this.w=this.p.random(28,70);this.h=this.p.random(28,70);this.c=this.p.color(235,235,255);\r\n              }\r\n            } else {\r\n              this.x=startOff?this.p.width+this.p.random(10,40):this.p.random(this.p.width);this.y=this.p.random(this.p.height);\r\n              if(this.isOctagon){\r\n                let baseX=this.p.random(-2.5,-0.5);if(ww>=1025&&ww>wh)baseX*=4.5;\r\n                if(this.p.random()<0.1)baseX*=2;else if(this.p.random()<0.2)baseX*=0.5;this.vx=baseX;this.vy=this.p.random(-0.3,0.3);this.size=25;\r\n                this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.vx=this.p.random(-3,-1);this.vy=this.p.random(-0.5,0.5);\r\n                if(ww>=1025&&ww>wh){this.w=this.p.random(33,105);this.h=this.p.random(33,105);}\r\n                else{this.w=this.p.random(30,75);this.h=this.p.random(30,75);}this.c=this.p.color(235,235,255);\r\n              }\r\n            }\r\n            this.rotation=0;this.rotationSpeed=this.p.random(-1,1);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();\r\n            pAny.translate(this.x+(this.isOctagon?this.size/2:this.w/2),this.y+(this.isOctagon?this.size/2:this.h/2));\r\n            pAny.rotate(pAny.radians(this.rotation));pAny.fill(this.c);pAny.noStroke();\r\n            if(this.isOctagon)this.drawOctagon(pAny,0,0,this.size);else{pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.w,this.h);}\r\n            pAny.pop();\r\n          }\r\n          drawOctagon(pAny:any,x:number,y:number,size:number){\r\n            const step=pAny.TWO_PI/8;pAny.beginShape();\r\n            for(let i=0;i<8;i++){const ang=i*step;const px=x+Math.cos(ang)*size/2;const py=y+Math.sin(ang)*size/2;pAny.vertex(px,py);}\r\n            pAny.endShape(pAny.CLOSE);\r\n          }\r\n          overlaps(o:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=o.isOctagon?o.size:o.w;const h2=o.isOctagon?o.size:o.h;\r\n            return !(this.x+w1<o.x||this.x>o.x+w2||this.y+h1<o.y||this.y>o.y+h2);\r\n          }\r\n          resolveCollision(other:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=other.isOctagon?other.size:other.w;const h2=other.isOctagon?other.size:other.h;\r\n            const overlapX=Math.min(this.x+w1,other.x+w2)-Math.max(this.x,other.x);const overlapY=Math.min(this.y+h1,other.y+h2)-Math.max(this.y,other.y);\r\n            if(overlapX<overlapY){\r\n              if(this.x<other.x){this.x-=overlapX/2;other.x+=overlapX/2;}else{this.x+=overlapX/2;other.x-=overlapX/2;}this.vx*=-1;other.vx*=-1;\r\n            } else {\r\n              if(this.y<other.y){this.y-=overlapY/2;other.y+=overlapY/2;}else{this.y+=overlapY/2;other.y-=overlapY/2;}this.vy*=-1;other.vy*=-1;\r\n            }\r\n          }\r\n        }\r\n\r\n        class Particle {\r\n          p:any;x:number;y:number;vx:number;vy:number;lifespan:number;c:any;\r\n          constructor(p:any,x:number,y:number,lifespan=255,c=p.color(255,215,0),srcVx=0,srcVy=0,mul:number|null=null){\r\n            this.p=p;this.x=x;this.y=y;this.lifespan=lifespan;this.c=c;\r\n            const srcSpeed=Math.hypot(srcVx,srcVy);\r\n            let speed=p.map(srcSpeed,0,5,1,3);speed=p.constrain(speed,1.2,3.5);if(mul!=null)speed*=mul;\r\n            const ang=p.random(0,p.TWO_PI);this.vx=Math.cos(ang)*speed+srcVx*0.1;this.vy=Math.sin(ang)*speed+srcVy*0.1;\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;}\r\n          display(pAny:any){pAny.noStroke();pAny.fill(this.c.levels[0],this.c.levels[1],this.c.levels[2],this.lifespan);pAny.ellipse(this.x,this.y,4,4);}\r\n          isDead(){return this.lifespan<=0;}\r\n        }\r\n\r\n        class Projectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;ux:number;uy:number;radius:number;lifespan:number;trail:{x:number;y:number;alpha:number}[];color:any;\r\n          minSpeed=0.6;maxSpeed=12;speed=this.minSpeed;targetSpeed=8;acceleration=3;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number){\r\n            this.p=p;this.x=x;this.y=y;\r\n            const mag=Math.hypot(vx,vy)||1;\r\n            this.ux=vx/mag;this.uy=vy/mag;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;this.radius=6;this.lifespan=500;this.trail=[];this.color=p.color(200,150,255);\r\n          }\r\n          update(delta:number){\r\n            // accelerate speed toward target, direction unchanged\r\n            this.speed+=(this.targetSpeed-this.speed)*this.acceleration*delta;\r\n            if(this.speed<this.minSpeed)this.speed=this.minSpeed;if(this.speed>this.maxSpeed)this.speed=this.maxSpeed;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;\r\n            this.trail.push({x:this.x,y:this.y,alpha:160});if(this.trail.length>20)this.trail.shift();\r\n            for(let i=0;i<this.trail.length;i++)this.trail[i].alpha*=0.8;\r\n          }\r\n          display(pAny:any){\r\n            for(let i=0;i<this.trail.length;i++){const t=this.trail[i];pAny.fill(200,150,255,t.alpha);pAny.noStroke();pAny.ellipse(t.x,t.y,this.radius*2,this.radius*2);}\r\n            pAny.fill(this.color);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius*2,this.radius*2);\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<0||this.x>vw||this.y<0||this.y>vh;}\r\n        }\r\n\r\n        class RectangleProjectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;size:number;lifespan:number;maxLifespan:number;color:any;rotation:number;rotationSpeed:number;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number,color:string){\r\n            this.p=p;this.x=x;this.y=y;this.size=p.random(8,20);const factor=this.p.map(this.size,8,20,1,2);this.vx=vx*factor;this.vy=vy*factor;\r\n            this.lifespan=80;this.maxLifespan=this.lifespan;this.color=p.color(color);this.rotation=p.random(360);this.rotationSpeed=p.random(-20,20);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();pAny.translate(this.x,this.y);pAny.rotate(pAny.radians(this.rotation));\r\n            const a=pAny.map(this.lifespan,0,this.maxLifespan,0,255);pAny.fill(this.color.levels[0],this.color.levels[1],this.color.levels[2],a);\r\n            pAny.noStroke();pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.size,this.size);pAny.pop();\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<-50||this.x>vw+50||this.y<-50||this.y>vh+50;}\r\n        }\r\n      }; // end sketch\r\n\r\n      // ----- mount / resize / cleanup -----\r\n      requestAnimationFrame(() => {\r\n        if (!alive || !el.isConnected) return;\r\n\r\n        if (q5Ref.current) {\r\n          try { q5Ref.current.remove?.(); } catch {}\r\n          q5Ref.current = null;\r\n        }\r\n        let instance: any;\r\n        try { instance = new q5(sketch, el); }\r\n        catch (err) { console.error('[GameCanvas] q5 init error', err); return; }\r\n        q5Ref.current = instance;\r\n\r\n        if (pauseHiddenRef.current && 'IntersectionObserver' in window) {\r\n          io = new IntersectionObserver(([entry]) => {\r\n            visibleRef.current = entry.isIntersecting;\r\n            try {\r\n              if (entry.isIntersecting) q5Ref.current?.loop?.();\r\n              else q5Ref.current?.noLoop?.();\r\n            } catch {}\r\n          }, { threshold: 0.01 });\r\n          io.observe(el);\r\n        }\r\n\r\n        let ro: ResizeObserver | null = null;\r\n        const vv: VisualViewport | undefined = (window as any).visualViewport;\r\n        let lastW = 0, lastH = 0;\r\n\r\n        const resizeToHost = () => {\r\n          const host = hostRef.current;\r\n          const inst = q5Ref.current;\r\n          if (!host || !host.isConnected || !inst?.resizeCanvas) return;\r\n          const w = Math.max(1, Math.round(host.offsetWidth));\r\n          const h = Math.max(1, Math.round(host.offsetHeight));\r\n          if (w === lastW && h === lastH) return;\r\n          lastW = w; lastH = h;\r\n          try { inst.resizeCanvas(w, h); } catch (e) { console.warn('[GameCanvas] resize skipped', e); }\r\n        };\r\n\r\n        onResize = () => requestAnimationFrame(resizeToHost);\r\n        window.addEventListener('resize', onResize);\r\n\r\n        if ('ResizeObserver' in window) {\r\n          ro = new ResizeObserver(() => requestAnimationFrame(resizeToHost));\r\n          ro.observe(el);\r\n        }\r\n\r\n        window.addEventListener('orientationchange', onResize);\r\n        vv?.addEventListener('resize', onResize);\r\n        vv?.addEventListener('scroll', onResize);\r\n\r\n        const onFs = () => requestAnimationFrame(resizeToHost);\r\n        document.addEventListener('fullscreenchange', onFs);\r\n\r\n        requestAnimationFrame(resizeToHost);\r\n\r\n        cleanupRef.current = () => {\r\n          const instAny = q5Ref.current as any;\r\n          if (instAny && typeof instAny._pointerCleanup === 'function') {\r\n            try { instAny._pointerCleanup(); } catch {}\r\n          }\r\n          if (io) io.disconnect();\r\n          if (onResize) window.removeEventListener('resize', onResize);\r\n          document.removeEventListener('fullscreenchange', onFs);\r\n          ro?.disconnect();\r\n          vv?.removeEventListener('resize', onResize);\r\n          vv?.removeEventListener('scroll', onResize);\r\n          if (q5Ref.current?.remove) q5Ref.current.remove();\r\n          q5Ref.current = null;\r\n          el.replaceChildren();\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      alive = false;\r\n      cleanupRef.current?.();\r\n      cleanupRef.current = null;\r\n    };\r\n  }, []); // run once\r\n\r\n  return <div className=\"evade-the-rock\" ref={hostRef} style={{ width: '100vw', height: '100dvh' }} />;\r\n}\r\n"],"names":["useRealMobileViewport","isRealMobile","setIsRealMobile","useState","useEffect","checkMobile","_window$matchMedia$ma","_window$matchMedia","_window","touch","navigator","maxTouchPoints","coarse","window","matchMedia","call","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","addEventListener","removeEventListener","GameCanvas","_ref","onCoinsChange","highScore","onGameOver","onReady","pauseWhenHidden","demoMode","overlayActive","allowSpawns","hostRef","useRef","q5Ref","visibleRef","cleanupRef","coinsChangeRef","gameOverRef","readyRef","highScoreRef","pauseHiddenRef","demoRef","overlayRef","allowSpawnsRef","current","alive","io","onResize","then","q5mod","_default","_q5Ref$current","q5","default","el","isConnected","replaceChildren","remove","_unused","sketch","p","circle","verticalMode","rectangles","octagons","particles","projectiles","lastSpawnTime","lastOctagonSpawnTime","rectangleSpawnRate","coins","gameOver","prevGameOver","lastDemoFlag","lastFiredTime","Infinity","cooldownDuration","MAX_PARTICLES","MAX_PROJECTILES","MAX_RECTANGLES","dragPointerId","lastTouch","primaryCandidateId","primaryTapInfo","tapCandidates","Map","baseImpulse","movingUp","movingDown","movingLeft","movingRight","GOLD_COLORS","scratchXY","x","y","canSpawn","restartGame","_coinsChangeRef$curre","length","Circle","height","millis","burstRectangles","cx","cy","k","angle","TWO_PI","speed","random","vx","Math","cos","vy","sin","push","RectangleProjectile","splice","setup","_p$frameRate","_readyRef$current","w","offsetWidth","h","offsetHeight","pixelDensity","frameRate","createCanvas","style","touchAction","canvas","overscrollBehavior","webkitUserSelect","userSelect","getCanvasCoords","e","r","getBoundingClientRect","clientX","left","clientY","top","onDown","pointerId","x0","y0","t0","set","preventDefault","onMove","_primaryTapInfo$x","_primaryTapInfo","_primaryTapInfo$y","_primaryTapInfo2","dx0","dy0","hypot","promoteToDrag","setPointerCapture","_unused2","dx","dy","dist","speedFactor","log2","force","ti","get","tryFire","now","Projectile","onUp","releasePointerCapture","_unused3","dt","moved","delete","onCancel","passive","_pointerCleanup","_unused4","innerHeight","color","restart","draw","demo","_coinsChangeRef$curre2","ax","ay","background","delta","deltaTime","nowMillis","vw","vh","stopHorizontal","stopVertical","evadeX","evadeY","danger","rect","distSq","sqrt","attractX","attractY","target","reduce","a","b","da","size","d","autoEvade","moveUp","moveDown","moveLeft","moveRight","update","display","inView","filter","maxRectangles","ww","Shape","isNaN","spawnRectangles","i","overlaps","j","_proj$size","proj","projSize","radius","projX","projY","projH","r1","r2","resolveCollision","updateRectangles","spawnOctagons","buffer","o","_coinsChangeRef$curre3","Particle","c","abs","numParticles","whole","floor","frac","updateOctagons","blendMode","ADD","part","isDead","BLEND","_highScoreRef$current","_gameOverRef$current","isNewHigh","pAny","elapsed","noStroke","fill","ellipse","drawCooldownRing","keyPressed","key","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","keyReleased","constructor","trail","this","damp","pow","shift","lim","n","pos","map","other","isOctagon","sumR","max","min","startOff","isOct","vertical","GOLD","rotation","rotationSpeed","reset","wh","baseX","translate","rotate","radians","drawOctagon","rectMode","CENTER","pop","step","beginShape","ang","px","py","vertex","endShape","CLOSE","w1","h1","w2","h2","overlapX","overlapY","lifespan","arguments","undefined","srcVx","srcVy","mul","srcSpeed","constrain","levels","ux","uy","minSpeed","maxSpeed","targetSpeed","acceleration","mag","alpha","t","maxLifespan","factor","requestAnimationFrame","_q5Ref$current$remove","_q5Ref$current2","_unused5","instance","err","console","error","IntersectionObserver","_ref2","entry","isIntersecting","_q5Ref$current3","_q5Ref$current3$loop","_q5Ref$current4","_q5Ref$current4$noLoo","loop","noLoop","_unused6","threshold","observe","ro","vv","visualViewport","lastW","lastH","resizeToHost","host","inst","resizeCanvas","round","warn","ResizeObserver","onFs","document","_ro","_q5Ref$current5","instAny","_unused7","disconnect","_cleanupRef$current","_jsx","className","ref"],"sourceRoot":""}