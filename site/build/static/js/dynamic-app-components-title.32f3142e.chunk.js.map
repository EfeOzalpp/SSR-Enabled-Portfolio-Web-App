{"version":3,"file":"static/js/dynamic-app-components-title.32f3142e.chunk.js","mappings":"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","sources":["dynamic-app/components/title.jsx","styles/dynamic-app/title.css?raw"],"sourcesContent":["// TitleDivider component (no flicker on enter/leave)\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useStyleInjection } from '../../utils/context-providers/style-injector.ts';\r\nimport titleCss from '../../styles/dynamic-app/title.css?raw';\r\n\r\nconst isTriplet = (v) => Array.isArray(v) && v.length === 3 && v.every(x => typeof x === 'string');\r\n\r\nconst TitleDivider = ({ svgIcon, movingTextColors, pauseAnimation }) => {\r\n  useStyleInjection(titleCss, 'dynamic-app-style-title');\r\n\r\n  // ----- visibility of this component -----\r\n  const rootRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  useEffect(() => {\r\n    const el = rootRef.current;\r\n    if (!el || typeof IntersectionObserver === 'undefined') return;\r\n    const io = new IntersectionObserver(\r\n      ([entry]) => setIsVisible(!!entry.isIntersecting),\r\n      { threshold: 0.01 }\r\n    );\r\n    io.observe(el);\r\n    return () => io.disconnect();\r\n  }, []);\r\n\r\n  // ----- stable palette that only changes when visible -----\r\n  const defaultTriplet = ['#70c6b0', '#5670b5', '#50b0c5'];\r\n  const incoming = isTriplet(movingTextColors) ? movingTextColors : defaultTriplet;\r\n\r\n  const [stableColors, setStableColors] = useState(incoming);\r\n  const pendingRef = useRef(null);\r\n\r\n  // shallow compare helper\r\n  const sameTriplet = (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n\r\n  // When palette prop changes: apply immediately if visible, else stash it.\r\n  useEffect(() => {\r\n    if (!isTriplet(incoming)) return;\r\n    if (isVisible) {\r\n      setStableColors(prev => (sameTriplet(prev, incoming) ? prev : incoming));\r\n      pendingRef.current = null;\r\n    } else {\r\n      // hold for later to avoid flicker while hidden\r\n      pendingRef.current = incoming;\r\n    }\r\n  }, [incoming, isVisible]);\r\n\r\n  // When we become visible, commit any pending palette once.\r\n  useEffect(() => {\r\n    if (isVisible && pendingRef.current && !sameTriplet(stableColors, pendingRef.current)) {\r\n      setStableColors(pendingRef.current);\r\n      pendingRef.current = null;\r\n    }\r\n  }, [isVisible, stableColors]);\r\n\r\n  // ----- brightness adjust + smooth transition -----\r\n  const adjustBrightness = (hex, mul) => {\r\n    if (!/^#[0-9a-f]{6}$/i.test(hex)) return hex;\r\n    let r = parseInt(hex.slice(1, 3), 16);\r\n    let g = parseInt(hex.slice(3, 5), 16);\r\n    let b = parseInt(hex.slice(5, 7), 16);\r\n    r = Math.min(255, Math.max(0, Math.floor(r * mul)));\r\n    g = Math.min(255, Math.max(0, Math.floor(g * mul)));\r\n    b = Math.min(255, Math.max(0, Math.floor(b * mul)));\r\n    return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\r\n  };\r\n\r\n  const colors = useMemo(() => ([\r\n    adjustBrightness(stableColors[0], 1.05),\r\n    adjustBrightness(stableColors[1], 1.25),\r\n    adjustBrightness(stableColors[2], 1.10),\r\n  ]), [stableColors]);\r\n\r\n  const textSegments = useMemo(() => ([\r\n    { text: 'Institute Gallery', suffix: '' },\r\n    { text: 'Dyna', suffix: 'mic Media' },\r\n    { text: 'Dyn', suffix: 'mic Media' },\r\n  ]), []);\r\n\r\n  const renderMovingContent = (repeatCount = 2) =>\r\n    [...Array(repeatCount)].flatMap((_, repeatIndex) =>\r\n      textSegments.map((segment, i) => (\r\n        <span\r\n          key={`${repeatIndex}-${i}`}\r\n          className=\"moving-text\"\r\n          style={{\r\n            color: colors[i],\r\n            transition: 'color 120ms linear',\r\n          }}\r\n        >\r\n          {segment.text}\r\n          <span className=\"logo-container\">\r\n            <span\r\n              className=\"svg-icon\"\r\n              // If your injected SVG respects currentColor, you could instead set color here.\r\n              style={{ fill: colors[i], transition: 'fill 120ms linear' }}\r\n              dangerouslySetInnerHTML={{ __html: svgIcon }}\r\n            />\r\n          </span>\r\n          {segment.suffix}\r\n        </span>\r\n      ))\r\n    );\r\n\r\n  return (\r\n    <div className=\"title-container\" ref={rootRef}>\r\n      <div className=\"static-title\">\r\n        <h1>MassArt 2024</h1>\r\n      </div>\r\n      <div className={`moving-title ${pauseAnimation ? 'paused' : ''}`}>\r\n        <h1 className=\"title-with-icon moving-text-wrapper\">\r\n          {renderMovingContent()}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleDivider;\r\n","export default \"/* General Styles for hero title */\\r\\n.moving-title.paused .moving-text-wrapper, .moving-title.paused #Layer_12 {animation-play-state: paused;}\\r\\n.moving-title {z-index: 6;}\\r\\n@keyframes slide { 0% {transform: translateX(0);} 100% {transform: translateX(-50%);}}\\r\\n@keyframes rotate { 0% {transform: rotate(0deg);} 100% {transform: rotate(360deg);}}\\r\\n\\r\\n/* Hero title for mobile devices */\\r\\n@media screen and (max-width: 768px) {\\r\\n.title-container {background-color: #1e1e1f; display: flex; flex-direction: column; align-items: center; justify-content: center; overflow: hidden; padding-top: 1.6em;}\\r\\n.static-title {margin-bottom: 20px; padding-left: 1.6em; padding-right: 0.8em;  z-index: 3;}\\r\\n\\r\\n/* Moving title styles */\\r\\n.title-with-icon {display: flex; align-items: center; white-space: nowrap;}\\r\\n.moving-title {position: relative; margin-top: -2.34em; width: 100%; overflow: hidden; z-index: 2;}\\r\\n.moving-title::before {content: \\\"\\\"; position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 2; \\r\\nbackground: linear-gradient(to right, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 2%), linear-gradient(to left, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 2%);}\\r\\n.moving-title h1 {font-weight: 200 !important; letter-spacing: -1.8px;}\\r\\n.moving-text-wrapper {display: inline-flex; align-items: center; animation: slide var(--animation-speed, 32s) linear infinite;}\\r\\n.moving-text {display: inline-flex; align-items: center; padding-right: 1.8em;}\\r\\n#shadow-dynamic-app .moving-text { padding-right: 2em;}\\r\\n#shadow-dynamic-app .moving-title { margin-top: -2.4em;}\\r\\n#shadow-dynamic-app .logo-container .svg-icon { padding-right: 12px;}\\r\\n\\r\\n/* SVG icon styles for rotation and size */\\r\\n#Layer_12 {padding-left: 0.05em; padding-right: 0.03em; margin-top: 0.5em; width: 1.1em;  height: 1.1em; animation: rotate var(--animation-speed, 12s) linear infinite;}\\r\\n}\\r\\n\\r\\n\\r\\n/* Hero title for tablet devices */\\r\\n@media screen and (min-width: 768px) and (max-width: 1024px) {\\r\\n.title-container {background-color: #1e1e1f; display: flex; flex-direction: column; align-items: center; justify-content: center; overflow: hidden; padding-top: 2.6em; padding-bottom: 2.8em; padding-left: 2.4em;}\\r\\n#shadow-dynamic-app .title-container {padding-top: 1.6em;}\\r\\n.static-title {margin-bottom: 20px; padding-left: 0em; padding-right: 50%;  z-index: 3;}\\r\\n/* Moving title styles */\\r\\n.title-with-icon {display: flex; align-items: center; white-space: nowrap;}\\r\\n.moving-title {position: relative; margin-top: -2.3em; width: 100%; overflow: hidden; z-index: 2;}\\r\\n.moving-title::before {content: \\\"\\\"; position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 2; \\r\\nbackground: linear-gradient(to right, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 5%), linear-gradient(to left, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 5%);}\\r\\n.moving-title h1 {font-weight: 200 !important; letter-spacing: -0.4px;}\\r\\n.moving-text-wrapper {display: inline-flex; align-items: center; animation: slide 32s linear infinite;}\\r\\n.moving-text {display: inline-flex; align-items: center; padding-right: 108px;}\\r\\n#shadow-dynamic-app .moving-text {padding-right: 146px;}\\r\\n\\r\\n/* SVG icon styles for rotation and size */\\r\\n#Layer_12 {padding-left: 0.03em; padding-right: 0.03em; margin-top: 0.4em; width: 1.1em;  height: 1.1em;  animation: rotate 10s linear infinite;}\\r\\n}\\r\\n\\r\\n\\r\\n/* Hero title for desktop devices */\\r\\n@media screen and (min-width: 1025px) {\\r\\n.title-container {display: flex; flex-direction: column; align-items: center; justify-content: center; width: 100%; margin: 0 auto; position: relative;}\\r\\n.static-title {z-index: 2; width: 50%; white-space: nowrap; text-align: center;}\\r\\n#shadow-dynamic-app .static-title {width: auto !important; }\\r\\n\\r\\n/* Moving title styles */\\r\\n.title-with-icon {display: flex; align-items: center; white-space: nowrap;}\\r\\n.moving-title {display: flex; justify-content: flex-start; align-items: center; overflow: hidden; width: 66%; position: relative; margin-top: -1.2em;}\\r\\n.moving-title::before {content: \\\"\\\"; position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 2; \\r\\nbackground: linear-gradient(to right, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 10%), linear-gradient(to left, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 10%); background-blend-mode: screen;}\\r\\n#shadow-dynamic-app .moving-title::before { background: linear-gradient(to right, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 24%), linear-gradient(to left, rgba(30, 30, 31, 1) 0%, rgba(30, 30, 31, 0) 24%); }\\r\\n\\r\\n.moving-title h1 {font-weight: 200 !important; letter-spacing: -1.6px;}\\r\\n.moving-text-wrapper {display: flex; white-space: nowrap; align-items: center; animation: slide var(--animation-speed, 48s) linear infinite;}\\r\\n.moving-text {display: inline-flex; align-items: center; padding-right: 74px; mix-blend-mode: difference;}\\r\\n\\r\\n/* SVG icon styles for rotation and size */\\r\\n#Layer_12 {padding-left: 0.04em; padding-right: 0.04em; margin-top: 0.225em; width: 1.3em;  height: 1.05em; animation: rotate var(--animation-speed, 16s) linear infinite;}\\r\\n#shadow-dynamic-app  .moving-title {margin-top: 1.1em; width: 65%;}\\r\\n#shadow-dynamic-app #Layer_12 {width: 1.1em; height: 1.1em;}\\r\\n#shadow-dynamic-app .moving-text {padding-right: 72px;}\\r\\n#shadow-dynamic-app span.svg-icon {width: 1.04em; font-size: 85% !important;}\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 2025px) { \\r\\n.moving-title {margin-top: -1.2em;}\\r\\n#shadow-dynamic-app  .moving-title {margin-top: 0em;}\\r\\n.moving-text {padding-right: 186px;}\\r\\n}\";"],"names":["isTriplet","v","Array","isArray","length","every","x","_ref","svgIcon","movingTextColors","pauseAnimation","useStyleInjection","rootRef","useRef","isVisible","setIsVisible","useState","useEffect","el","current","IntersectionObserver","io","_ref2","entry","isIntersecting","threshold","observe","disconnect","incoming","stableColors","setStableColors","pendingRef","sameTriplet","a","b","prev","adjustBrightness","hex","mul","test","r","parseInt","slice","g","Math","min","max","floor","concat","toString","padStart","colors","useMemo","textSegments","text","suffix","_jsxs","className","ref","children","_jsx","arguments","undefined","flatMap","_","repeatIndex","map","segment","i","style","color","transition","fill","dangerouslySetInnerHTML","__html","renderMovingContent"],"sourceRoot":""}