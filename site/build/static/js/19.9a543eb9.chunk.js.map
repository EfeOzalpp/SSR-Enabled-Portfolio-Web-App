{"version":3,"file":"static/js/19.9a543eb9.chunk.js","mappings":"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","sources":["utils/media-providers/image-upgrade-manager.ts","utils/media-providers/media-loader.tsx","utils/media-providers/video-observer.tsx","components/block-type-1/rotary-lamp.tsx"],"sourcesContent":["// src/utils/image-upgrade-manager.ts\r\nlet totalImages = 0;\r\nlet loadedLowRes = 0;\r\nlet listeners: (() => void)[] = [];\r\nlet upgradeTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const setUpgradeTimeout = (ms: number = 5000) => {\r\n  if (upgradeTimeout) return;\r\n  upgradeTimeout = setTimeout(() => {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }, ms);\r\n};\r\n\r\nexport const registerImage = () => {\r\n  totalImages++;\r\n  setUpgradeTimeout();\r\n};\r\n\r\nexport const notifyLowResLoaded = () => {\r\n  loadedLowRes++;\r\n  if (loadedLowRes >= totalImages) {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }\r\n};\r\n\r\nexport const onAllLowResLoaded = (callback: () => void) => {\r\n  listeners.push(callback);\r\n};\r\n","// src/utils/media-providers/media-loader.tsx\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { useVideoVisibility } from './video-observer';\r\nimport LoadingScreen from '../loading/loading';\r\nimport { SanityImageSource } from '@sanity/image-url/lib/types/types';\r\nimport {\r\n  getLowResImageUrl,\r\n  getMediumImageUrl,\r\n  getHighQualityImageUrl,\r\n  urlFor,\r\n} from './image-builder';\r\nimport {\r\n  registerImage,\r\n  notifyLowResLoaded,\r\n  onAllLowResLoaded,\r\n} from './image-upgrade-manager';\r\n\r\nfunction useNearViewport<T extends Element>(\r\n  ref: React.RefObject<T>,\r\n  { rootMargin = '900px 0px', threshold = 0, once = true } = {}\r\n) {\r\n  const [near, setNear] = useState(false);\r\n  useEffect(() => {\r\n    if (!ref.current || near) return;\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries.some((e) => e.isIntersecting)) {\r\n          setNear(true);\r\n          if (once) io.disconnect();\r\n        }\r\n      },\r\n      { rootMargin, threshold }\r\n    );\r\n    io.observe(ref.current);\r\n    return () => io.disconnect();\r\n  }, [ref, near, rootMargin, threshold, once]);\r\n  return near;\r\n}\r\n\r\ntype VideoSetSrc = {\r\n  webmUrl?: string;\r\n  mp4Url?: string;\r\n  poster?: SanityImageSource | string;\r\n};\r\n\r\ntype MediaLoaderProps = {\r\n  type: 'image' | 'video';\r\n  src: string | SanityImageSource | VideoSetSrc | null | undefined;\r\n  alt?: string;\r\n  id?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  objectPosition?: string;\r\n  loop?: boolean;\r\n  muted?: boolean;\r\n  playsInline?: boolean;\r\n  preload?: 'auto' | 'metadata' | 'none';\r\n  enableVisibilityControl?: boolean;\r\n  priority?: boolean;\r\n  controls?: boolean;\r\n};\r\n\r\nconst MediaLoader = ({\r\n  type,\r\n  src,\r\n  alt = '',\r\n  id,\r\n  className = '',\r\n  style = {},\r\n  objectPosition = 'center center',\r\n  loop = true,\r\n  muted = true,\r\n  playsInline = true,\r\n  preload = 'metadata',\r\n  enableVisibilityControl = true,\r\n  priority = false,\r\n  controls = false,\r\n}: MediaLoaderProps) => {\r\n  const isSSR = typeof window === 'undefined';\r\n\r\n  // Start as loaded in SSR to avoid fade-in on hydration\r\n  const [loaded, setLoaded] = useState(isSSR);\r\n  const [showMedium, setShowMedium] = useState(false);\r\n  const [showHigh, setShowHigh] = useState(false);\r\n\r\n  // Native poster control (no overlay)\r\n  const [posterRemoved, setPosterRemoved] = useState(false);\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const isNear = useNearViewport(containerRef);\r\n  const shouldStart = priority || isNear;\r\n\r\n  // If already cached, skip fade-in\r\n  useEffect(() => {\r\n    if (type === 'image' && imgRef.current?.complete) setLoaded(true);\r\n    if (type === 'video' && videoRef.current?.readyState >= 2) setLoaded(true);\r\n  }, [type]);\r\n\r\n  // IMAGE progressive upgrade\r\n  useEffect(() => {\r\n    if (type !== 'image') return;\r\n    registerImage();\r\n\r\n    const t1 = setTimeout(() => setShowMedium(true), shouldStart ? 0 : 2000);\r\n    if (shouldStart) setShowMedium(true);\r\n\r\n    const off = () => setTimeout(() => setShowHigh(true), 300);\r\n    onAllLowResLoaded(off);\r\n    const t2 = setTimeout(() => setShowHigh(true), 5000);\r\n\r\n    return () => {\r\n      clearTimeout(t1);\r\n      clearTimeout(t2);\r\n    };\r\n  }, [type, shouldStart]);\r\n\r\n  const onMediaLoaded = () => {\r\n    setLoaded(true);\r\n    if (type === 'image') notifyLowResLoaded();\r\n    if (id) {\r\n      const event = new CustomEvent('mediaReady', { detail: { id } });\r\n      window.dispatchEvent(event);\r\n    }\r\n  };\r\n\r\n  // ----- Video source parsing + poster URL -----\r\n  const isVideoSetObj =\r\n    typeof src === 'object' &&\r\n    src !== null &&\r\n    !('asset' in (src as any)) &&\r\n    (('webmUrl' in (src as any)) || ('mp4Url' in (src as any)));\r\n\r\n  const vs = (isVideoSetObj ? (src as VideoSetSrc) : undefined);\r\n  const legacyVideoUrl = typeof src === 'string' ? src : undefined;\r\n\r\n  const posterUrl =\r\n    vs?.poster\r\n      ? (typeof vs.poster === 'string'\r\n          ? vs.poster\r\n          : urlFor(vs.poster).width(1200).quality(80).auto('format').url())\r\n      : undefined;\r\n\r\n  // ✅ Keep native poster visible until the first *painted* frame, then remove it.\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n\r\n    const hidePoster = () => {\r\n      setPosterRemoved(true);\r\n      v.removeAttribute('poster');\r\n    };\r\n\r\n    const onPlay = () => {\r\n      const anyV = v as any;\r\n      if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n        anyV.requestVideoFrameCallback(() => hidePoster());\r\n      } else {\r\n        const onTime = () => {\r\n          if (v.currentTime > 0 && v.readyState >= 2) {\r\n            v.removeEventListener('timeupdate', onTime);\r\n            hidePoster();\r\n          }\r\n        };\r\n        v.addEventListener('timeupdate', onTime);\r\n        const timer = setTimeout(() => {\r\n          v.removeEventListener('timeupdate', onTime);\r\n          hidePoster();\r\n        }, 1200);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    };\r\n\r\n    v.addEventListener('play', onPlay, { once: true });\r\n    return () => v.removeEventListener('play', onPlay);\r\n  }, [type]);\r\n\r\n  // VIDEO visibility/autoplay (your existing hook takes care of play/pause)\r\n  useVideoVisibility(\r\n    videoRef,\r\n    containerRef,\r\n    type === 'video' && enableVisibilityControl ? 0.35 : (undefined as unknown as number)\r\n  );\r\n\r\n  // ─────────────────────────────────────────────────────────────\r\n  // VIDEO RELIABILITY PATCHES\r\n  // - Kick load when near\r\n  // - Retry once, then promote preload to 'auto'\r\n  // - Decode nudge for iOS Safari after loadedmetadata\r\n  // - Early \"loaded\" on loadedmetadata to remove spinner sooner\r\n  // - Gentle play kick when data is ready (muted+inline)\r\n  // ─────────────────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n\r\n    let retryTimer: number | null = null;\r\n    let promoteTimer: number | null = null;\r\n\r\n    const clearTimers = () => {\r\n      if (retryTimer) { window.clearTimeout(retryTimer); retryTimer = null; }\r\n      if (promoteTimer) { window.clearTimeout(promoteTimer); promoteTimer = null; }\r\n    };\r\n\r\n    // If we’re near (or priority), ensure the browser actually fetches metadata\r\n    const kickLoad = () => {\r\n      try {\r\n        // set the DOM property; the attribute React renders can be different and that's OK\r\n        v.preload = preload ?? 'metadata';\r\n        if (v.preload !== 'none') v.load(); // important: actually trigger the fetch\r\n      } catch {}\r\n    };\r\n\r\n    const nudgeDecode = () => {\r\n      // iOS Safari sometimes stalls after metadata; a tiny seek wakes decode\r\n      try {\r\n        if (v.readyState < 2) return;\r\n        const t = v.currentTime;\r\n        v.currentTime = t > 0 ? t : 0.001;\r\n      } catch {}\r\n    };\r\n\r\n    const tryPlay = async () => {\r\n      if (!enableVisibilityControl) return;\r\n      try {\r\n        if (v.muted && v.playsInline && v.paused && v.readyState >= 2) {\r\n          await v.play().catch(() => {});\r\n        }\r\n      } catch {}\r\n    };\r\n\r\n    const onLoadedMeta = () => {\r\n      // spinner can go away on metadata (poster is still covering until first frame)\r\n      setLoaded(true);\r\n      nudgeDecode();\r\n    };\r\n\r\n    const onLoadedData = () => { setLoaded(true); void tryPlay(); };\r\n    const onCanPlay = () => { setLoaded(true); void tryPlay(); };\r\n\r\n    if (shouldStart) {\r\n      kickLoad();\r\n\r\n      // If nothing after ~2.5s, try load() once more\r\n      retryTimer = window.setTimeout(() => {\r\n        if (v.readyState < 2) kickLoad();\r\n      }, 2500);\r\n\r\n      // Still nothing after ~5s? Promote preload to 'auto'\r\n      promoteTimer = window.setTimeout(() => {\r\n        if (v.readyState < 2) {\r\n          try { v.preload = 'auto'; v.load(); } catch {}\r\n        }\r\n      }, 5000);\r\n    }\r\n\r\n    v.addEventListener('loadedmetadata', onLoadedMeta);\r\n    v.addEventListener('loadeddata', onLoadedData);\r\n    v.addEventListener('canplay', onCanPlay);\r\n\r\n    // Optional: diagnostics for flaky networks\r\n    const onError = (e: Event) => console.warn('Video error', e);\r\n    const onStalled = () => console.warn('Video stalled');\r\n    const onSuspend = () => {/* benign on many browsers */};\r\n    v.addEventListener('error', onError);\r\n    v.addEventListener('stalled', onStalled);\r\n    v.addEventListener('suspend', onSuspend);\r\n\r\n    return () => {\r\n      clearTimers();\r\n      v.removeEventListener('loadedmetadata', onLoadedMeta);\r\n      v.removeEventListener('loadeddata', onLoadedData);\r\n      v.removeEventListener('canplay', onCanPlay);\r\n      v.removeEventListener('error', onError);\r\n      v.removeEventListener('stalled', onStalled);\r\n      v.removeEventListener('suspend', onSuspend);\r\n    };\r\n  }, [\r\n    type,\r\n    shouldStart,\r\n    preload,\r\n    enableVisibilityControl,\r\n    // if any URL changes, re-run the loader watchdog\r\n    isVideoSetObj,\r\n    (vs && vs.webmUrl) || '',\r\n    (vs && vs.mp4Url) || '',\r\n    legacyVideoUrl || '',\r\n  ]);\r\n\r\n  const hasVideoSource = Boolean(vs?.webmUrl || vs?.mp4Url || legacyVideoUrl);\r\n  if (!src || (type === 'video' && !hasVideoSource)) return null;\r\n\r\n  // ====== IMAGE ======\r\n  if (type === 'image') {\r\n    const ultraLowSrc = typeof src === 'string' ? src : getLowResImageUrl(src);\r\n    const mediumSrc   = typeof src === 'string' ? src : getMediumImageUrl(src);\r\n    const highResSrc  = typeof src === 'string' ? src : getHighQualityImageUrl(src);\r\n\r\n    const resolvedSrc = showHigh ? highResSrc : showMedium ? mediumSrc : ultraLowSrc;\r\n    if (!resolvedSrc) return null;\r\n\r\n    return (\r\n      <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n        {!loaded && (\r\n          <div className=\"absolute-inset\">\r\n            <LoadingScreen isFullScreen={false} />\r\n          </div>\r\n        )}\r\n        <img\r\n          ref={imgRef}\r\n          loading={priority ? 'eager' : undefined}\r\n          fetchPriority={showHigh || priority ? 'high' : showMedium ? 'auto' : 'low'}\r\n          id={id}\r\n          src={resolvedSrc || undefined}\r\n          alt={alt}\r\n          onLoad={onMediaLoaded}\r\n          onError={(e) => console.warn('Image failed', (e.target as HTMLImageElement).src)}\r\n          className={className}\r\n          draggable={false}\r\n          style={{\r\n            ...style,\r\n            objectFit: 'cover',\r\n            objectPosition,\r\n            opacity: loaded ? 1 : 0,\r\n            transition: isSSR ? 'none' : 'filter 0.5s ease, opacity 0.3s ease',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ====== VIDEO ======\r\n  const showSpinner = !loaded;\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      {showSpinner && (\r\n        <div className=\"absolute-inset\">\r\n          <LoadingScreen isFullScreen={false} />\r\n        </div>\r\n      )}\r\n\r\n      <video\r\n        id={id}\r\n        ref={videoRef}\r\n        // treat loadeddata & metadata as “ready enough” for UI\r\n        onLoadedData={onMediaLoaded}\r\n        onLoadedMetadata={() => setLoaded(true)}\r\n        onError={(e) => console.warn('Video failed', e)}\r\n        className={className}\r\n        style={{\r\n          ...style,\r\n          objectFit: 'cover',\r\n          objectPosition,\r\n          opacity: loaded ? 1 : 0,\r\n          transition: isSSR ? 'none' : 'opacity 0.3s ease',\r\n          pointerEvents: 'all',\r\n          zIndex: 1,\r\n        }}\r\n        loop={loop}\r\n        muted={muted}\r\n        playsInline={playsInline}\r\n        preload={preload ?? 'metadata'}\r\n        controls={controls}\r\n        // If you host poster/video on different origins and ever read pixels to <canvas>,\r\n        // uncomment next line and ensure CORS headers exist:\r\n        // crossOrigin=\"anonymous\"\r\n        poster={posterRemoved ? undefined : posterUrl}\r\n      >\r\n        {/* Order matters: prefer MP4 first for Safari reliability */}\r\n        {vs?.mp4Url  && <source src={vs.mp4Url  || undefined} type=\"video/mp4\"  />}\r\n        {vs?.webmUrl && <source src={vs.webmUrl || undefined} type=\"video/webm\" />}\r\n        {!vs?.webmUrl && !vs?.mp4Url && legacyVideoUrl && (\r\n          <source src={legacyVideoUrl || undefined} />\r\n        )}\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaLoader;\r\n","// video-observer.tsx\r\nimport { useEffect } from 'react';\r\n\r\nexport const useVideoVisibility = (\r\n  videoRef: React.RefObject<HTMLVideoElement> | null,\r\n  containerRef: React.RefObject<HTMLElement> | null,\r\n  threshold: number = 0.4\r\n) => {\r\n  useEffect(() => {\r\n    if (!videoRef?.current || !containerRef?.current) return;\r\n\r\n    const t = typeof threshold === 'number' && threshold >= 0 && threshold <= 1 ? threshold : 0.4;\r\n\r\n    let observer: IntersectionObserver | undefined;\r\n\r\n    const video = videoRef.current!;\r\n    const container = containerRef.current!;\r\n\r\n    // IMPORTANT: load even when using <source> children\r\n    // (video.src is empty in that case; currentSrc is set after load())\r\n    video.load();\r\n    video.muted = true;\r\n\r\n    observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          video.play().catch(() => setTimeout(() => video.play().catch(() => {}), 500));\r\n        } else {\r\n          video.pause();\r\n        }\r\n      },\r\n      { threshold: t }\r\n    );\r\n\r\n    observer.observe(container);\r\n\r\n    // kick once if already in view\r\n    const rect = container.getBoundingClientRect();\r\n    const ratio = Math.min(Math.max((window.innerHeight - rect.top) / window.innerHeight, 0), 1);\r\n    if (ratio >= t) video.play().catch(() => {});\r\n\r\n    return () => observer?.disconnect();\r\n  }, [videoRef, containerRef, threshold]);\r\n};\r\n","// RotaryLamp.tsx\r\nimport { useEffect, useState } from 'react';\r\nimport { getProjectData } from '../../utils/get-project-data';\r\nimport SplitDragHandler from '../../utils/split+drag/split-controller';\r\nimport PannableViewport from '../../utils/split+drag/pannable-object-position';\r\nimport MediaLoader from '../../utils/media-providers/media-loader';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\nimport '../../styles/block-type-1.css';\r\n\r\ntype MediaSlot = { alt?: string; image?: any; video?: { asset?: { url?: string } } };\r\ntype RotaryData = { mediaOne: MediaSlot; mediaTwo: MediaSlot };\r\n\r\nconst MIN_PORTRAIT_SPLIT = 16; // %\r\nconst EPS = 0.25; // small hysteresis for the snap zones\r\n\r\nexport default function RotaryLamp() {\r\n  const [data, setData] = useState<RotaryData | null>(null);\r\n  const [split, setSplit] = useState(() => (window.innerWidth < 768 ? 55 : 50));\r\n  const [isPortrait, setIsPortrait] = useState(window.innerHeight > window.innerWidth);\r\n\r\n  useTooltipInit();\r\n\r\n  useEffect(() => {\r\n    getProjectData<RotaryData>('rotary-lamp').then((d) => setData(d));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => setIsPortrait(window.innerHeight > window.innerWidth);\r\n    window.addEventListener('resize', onResize, { passive: true });\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  if (!data) return null;\r\n\r\n  // swap media in landscape, keep original order in portrait\r\n  const media1 = isPortrait ? data.mediaOne : data.mediaTwo;\r\n  const media2 = isPortrait ? data.mediaTwo : data.mediaOne;\r\n\r\n  const TOP = MIN_PORTRAIT_SPLIT;\r\n  const BOTTOM = 100 - MIN_PORTRAIT_SPLIT;\r\n\r\n  const nearTop = isPortrait && split <= TOP + EPS;\r\n  const nearBottom = isPortrait && split >= BOTTOM - EPS;\r\n\r\n  return (\r\n    <section className=\"block-type-1\" id=\"no-ssr\" style={{ position: 'relative' }}>\r\n      {/* LEFT / TOP */}\r\n      <div\r\n        className=\"media-content-1\"\r\n        style={\r\n          isPortrait\r\n            ? nearTop\r\n              ? { height: '0%', width: '100%', position: 'absolute', top: 0, transition: 'height 0.1s ease' }\r\n              : nearBottom\r\n              ? { height: '100%', width: '100%', position: 'absolute', top: 0, transition: 'height 0.1s ease' }\r\n              : { height: `${split}%`, width: '100%', position: 'absolute', top: 0 }\r\n            : { width: `${split}%`, height: '100%', position: 'absolute', left: 0 }\r\n        }\r\n      >\r\n        <PannableViewport sensitivity={2}>\r\n          <MediaLoader\r\n            type=\"image\"\r\n            src={media1.image}\r\n            alt={media1.alt || 'Rotary Lamp media'}\r\n            id=\"rotary-media-1\"\r\n            className=\"media-item-1 tooltip-rotary-lamp\"\r\n            style={{ width: '100%', height: '100%' }}\r\n          />\r\n        </PannableViewport>\r\n      </div>\r\n\r\n      {/* Split handle — shares the same min so UX/DOM match */}\r\n      <SplitDragHandler split={split} setSplit={setSplit} />\r\n\r\n      {/* RIGHT / BOTTOM */}\r\n      <div\r\n        className=\"media-content-2\"\r\n        style={\r\n          isPortrait\r\n            ? nearTop\r\n              ? {\r\n                  height: '100%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: '0%',\r\n                  transition: 'height 0.1s ease, top 0.1s ease',\r\n                }\r\n              : nearBottom\r\n              ? {\r\n                  height: '0%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: '100%',\r\n                  transition: 'height 0.1s ease, top 0.1s ease',\r\n                }\r\n              : {\r\n                  height: `${100 - split}%`,\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: `${split}%`,\r\n                }\r\n            : {\r\n                width: `${100 - split}%`,\r\n                height: '100%',\r\n                position: 'absolute',\r\n                left: `${split}%`,\r\n              }\r\n        }\r\n      >\r\n        <PannableViewport sensitivity={2}>\r\n          <MediaLoader\r\n            type={media2?.video?.asset?.url ? 'video' : 'image'}\r\n            src={media2?.video?.asset?.url || media2.image}\r\n            alt={media2.alt || 'Rotary Lamp media'}\r\n            id=\"rotary-media-2\"\r\n            className=\"media-item-2 tooltip-rotary-lamp\"\r\n            style={{ width: '100%', height: '100%' }}\r\n          />\r\n        </PannableViewport>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["totalImages","loadedLowRes","listeners","upgradeTimeout","registerImage","setTimeout","forEach","fn","arguments","length","undefined","setUpgradeTimeout","_ref","type","src","alt","id","className","style","objectPosition","loop","muted","playsInline","preload","enableVisibilityControl","priority","controls","isSSR","window","loaded","setLoaded","useState","showMedium","setShowMedium","showHigh","setShowHigh","posterRemoved","setPosterRemoved","videoRef","useRef","imgRef","containerRef","isNear","ref","rootMargin","threshold","once","near","setNear","useEffect","current","io","IntersectionObserver","entries","some","e","isIntersecting","disconnect","observe","useNearViewport","shouldStart","_imgRef$current","_videoRef$current","complete","readyState","t1","callback","off","push","t2","clearTimeout","onMediaLoaded","event","CustomEvent","detail","dispatchEvent","isVideoSetObj","vs","legacyVideoUrl","posterUrl","poster","urlFor","width","quality","auto","url","v","hidePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","removeEventListener","addEventListener","timer","t","observer","video","container","load","entry","play","catch","pause","rect","getBoundingClientRect","Math","min","max","innerHeight","top","_observer","useVideoVisibility","retryTimer","promoteTimer","kickLoad","_unused","tryPlay","async","paused","_unused3","onLoadedMeta","nudgeDecode","_unused2","onLoadedData","onCanPlay","_unused4","onError","console","warn","onStalled","onSuspend","webmUrl","mp4Url","hasVideoSource","Boolean","ultraLowSrc","getLowResImageUrl","mediumSrc","getMediumImageUrl","highResSrc","getHighQualityImageUrl","resolvedSrc","_jsxs","position","height","children","_jsx","LoadingScreen","isFullScreen","loading","fetchPriority","onLoad","target","draggable","_objectSpread","objectFit","opacity","transition","showSpinner","onLoadedMetadata","pointerEvents","zIndex","MIN_PORTRAIT_SPLIT","EPS","RotaryLamp","_media2$video","_media2$video$asset","_media2$video2","_media2$video2$asset","data","setData","split","setSplit","innerWidth","isPortrait","setIsPortrait","useTooltipInit","getProjectData","then","d","onResize","passive","media1","mediaOne","mediaTwo","media2","nearTop","nearBottom","concat","left","PannableViewport","sensitivity","MediaLoader","image","SplitDragHandler","asset"],"sourceRoot":""}