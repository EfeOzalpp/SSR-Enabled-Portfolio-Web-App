{"version":3,"file":"static/js/dynamic-app-ssr-app-dynamic-theme-route-tsx.06cf50dc.chunk.js","mappings":"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","sources":["dynamic-app/lib/palette-controller.ts","dynamic-app/preload-dynamic-app-route.ts","dynamic-app/lib/documentObserver.ts","ssr/logic/dynamic-alt-observer.ts","ssr/dynamic-app/UIcards+sort.tsx","dynamic-app/lib/svg-icon-map.ts","dynamic-app/ssr-app/dynamic-theme.route.tsx","dynamic-app/lib/fetchUser.js","utils/context-providers/shadow-root-context.tsx","utils/context-providers/style-injector.ts","styles/dynamic-app/misc.css?raw","utils/sanity.ts","dynamic-app/lib/fetchSVGIcons.js","dynamic-app/lib/colorString.ts"],"sourcesContent":["// src/dynamic-app/lib/palette-controller.ts\r\n\r\nexport type Quartet = [string, string, string, string];\r\nexport type Triplet = [string, string, string];\r\n\r\nconst WHITE = '#FFFFFF';\r\n\r\n// resolve alt → palette (handles trailing spaces too)\r\nexport function resolvePalette(\r\n  altRaw: string | null | undefined,\r\n  colorMapping: Record<string, Quartet | undefined>\r\n): Quartet | null {\r\n  if (!altRaw) return null;\r\n  const exact = colorMapping[altRaw];\r\n  if (Array.isArray(exact)) return exact as Quartet;\r\n  const trimmed = colorMapping[altRaw.trim()];\r\n  if (Array.isArray(trimmed)) return trimmed as Quartet;\r\n  return null;\r\n}\r\n\r\n// compute state from a quartet\r\nexport function computeStateFromPalette(\r\n  q: Quartet | null,\r\n  win: Window = window\r\n): { activeColor: string; movingText: Triplet; lastKnown: string } {\r\n  const palette: Quartet = q ?? [WHITE, WHITE, WHITE, WHITE];\r\n  const [c0, c1, c2, c3] = palette;\r\n\r\n  // desktop/mobile branching for first slot\r\n  const isDesktop = win.innerWidth >= 1024;\r\n  const first = isDesktop ? (c1 ?? WHITE) : (c0 ?? WHITE);\r\n\r\n  const movingText: Triplet = [first, c1 ?? WHITE, c3 ?? c2 ?? WHITE];\r\n  const activeColor = c2 ?? WHITE;\r\n\r\n  return { activeColor, movingText, lastKnown: activeColor };\r\n}\r\n","import fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type DynThemeCache = {\r\n  icons?: Record<string, string>;\r\n  images?: any[];\r\n  seed?: number; // informational only\r\n};\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: DynThemeCache = {};\r\nlet inFlight: Promise<DynThemeCache> | null = null;\r\n\r\nexport function getPreloadedDynamicTheme(): DynThemeCache {\r\n  return cache;\r\n}\r\n\r\nexport function primeDynamicThemeFromSSR(data?: Partial<DynThemeCache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nexport async function whenDynamicThemePreloadReady(): Promise<DynThemeCache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return (list || []).reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url;\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\nexport async function ensureDynamicThemeIcons(): Promise<Record<string, string>> {\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown = [];\r\n  try { iconsRaw = await fetchSVGIcons(); } catch {}\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\n/**\r\n * IMPORTANT: no seeding/reshuffle here.\r\n * If SSR provided images, we keep them as-is.\r\n * If not, we fetch and keep the API order.\r\n */\r\nexport async function ensureDynamicThemeImages(): Promise<any[]> {\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown = [];\r\n  try { imagesRaw = await fetchImages(); } catch {}\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return cache.images;\r\n}\r\n\r\nexport async function ensureDynamicThemePreload(): Promise<DynThemeCache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise\r\n    .all([ensureDynamicThemeIcons(), ensureDynamicThemeImages()])\r\n    .then(([icons, images]) => {\r\n      cache = { ...cache, icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => { inFlight = null; });\r\n\r\n  return inFlight;\r\n}\r\n\r\n/* ---- hydrate from SSR bootstrap (window.__DYNAMIC_THEME_PRELOAD__) ---- */\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_THEME_PRELOAD__?: DynThemeCache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_THEME_PRELOAD__) {\r\n  primeDynamicThemeFromSSR((window as any).__DYNAMIC_THEME_PRELOAD__);\r\n}\r\n","// setupIntersectionObserver.ts\r\nlet observer: IntersectionObserver | null = null;\r\n\r\nconst setupIntersectionObserver = (pauseAnimation: boolean, rootElement: Document | ShadowRoot = document) => {\r\n  if (observer) {\r\n    observer.disconnect();\r\n    observer = null;\r\n  }\r\n\r\n  if (pauseAnimation) return;\r\n\r\n  const applyTransform = (percentage: number, imageContainer: HTMLElement, imageContainer2: HTMLElement) => {\r\n    if (!imageContainer || !imageContainer2) return;\r\n\r\n    let imageContainerTransform = 'translate(0em, 0em)';\r\n    let imageContainer2Transform = 'translate(1em, -27.8em)';\r\n    let imageContainerZIndex = '5';\r\n    let imageContainer2ZIndex = '1';\r\n\r\n    const width = window.innerWidth;\r\n\r\n    if (width <= 767) {\r\n      if (percentage > 0.35) {\r\n        imageContainerTransform = 'translate(1em, 1.5em)';\r\n        imageContainer2Transform = 'translate(-1em, -29.5em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.15) {\r\n        imageContainerTransform = 'translate(0.5em, 0.75em)';\r\n        imageContainer2Transform = 'translate(-0.5em, -28.9em)';\r\n      } else {\r\n        imageContainer2Transform = 'translate(0em, -28.4em)';\r\n      }\r\n    } else if (width <= 1024) {\r\n      if (percentage > 0.3) {\r\n        imageContainerTransform = 'translate(-1em, 0em)';\r\n        imageContainer2Transform = 'translate(0em, -29em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.15) {\r\n        imageContainerTransform = 'translate(0em, 1em)';\r\n        imageContainer2Transform = 'translate(-1em, -28em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      } else if (percentage <= 0.15) {\r\n        imageContainerTransform = 'translate(-1em, 0em)';\r\n        imageContainer2Transform = 'translate(0em, -29em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      }\r\n    } else if (width > 1025) {\r\n      if (percentage > 0.5) {\r\n        imageContainerTransform = 'translate(0em, 0em)';\r\n        imageContainer2Transform = 'translate(1em, -27.2em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.25) {\r\n        imageContainerTransform = 'translate(1em, 1em)';\r\n        imageContainer2Transform = 'translate(0em, -26em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      } else if (percentage >= 0) {\r\n        imageContainerTransform = 'translate(0em, 0em)';\r\n        imageContainer2Transform = 'translate(1em, -27em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      }\r\n    }\r\n\r\n    imageContainer.style.transform = imageContainerTransform;\r\n    imageContainer.style.zIndex = imageContainerZIndex;\r\n    imageContainer2.style.transform = imageContainer2Transform;\r\n    imageContainer2.style.zIndex = imageContainer2ZIndex;\r\n  };\r\n\r\n  const observerCallback: IntersectionObserverCallback = (entries) => {\r\n    entries.forEach((entry) => {\r\n      const element = entry.target as HTMLElement;\r\n      const imageContainer = element.querySelector('.image-container') as HTMLElement;\r\n      const imageContainer2 = element.querySelector('.image-container2') as HTMLElement;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const vh = window.innerHeight;\r\n      const vc = vh / 1.6;\r\n      const percentage = Math.max(0, Math.min(rect.height, vc - rect.top)) / rect.height;\r\n\r\n      applyTransform(percentage, imageContainer, imageContainer2);\r\n    });\r\n  };\r\n\r\n  const observerOptions: IntersectionObserverInit = {\r\n    threshold: Array.from({ length: 101 }, (_, i) => i / 100),\r\n  };\r\n\r\n  observer = new IntersectionObserver(observerCallback, observerOptions);\r\n\r\n  const cards = rootElement.querySelectorAll('.card-container');\r\n  cards.forEach((card, index) => {\r\n    if (index < 3) {\r\n      const rect = card.getBoundingClientRect();\r\n      const vh = window.innerHeight;\r\n      const vc = vh / 2;\r\n      const percentage = Math.max(0, Math.min(rect.height, vc - rect.top)) / rect.height;\r\n\r\n      const img1 = card.querySelector('.image-container') as HTMLElement;\r\n      const img2 = card.querySelector('.image-container2') as HTMLElement;\r\n      applyTransform(percentage, img1, img2);\r\n    }\r\n\r\n    observer.observe(card);\r\n  });\r\n};\r\n\r\nexport default setupIntersectionObserver;\r\n","// src/ssr/logic/dynamic-alt-observer.ts\r\n// Instance-scoped alt observer (mirrors your working setupAltObserver)\r\n\r\ntype AltObserverOpts = {\r\n  rootElement?: Document | HTMLElement;        // default: document\r\n  minActiveRatio?: number;                     // default: 0.10\r\n  onActivate: (altRaw: string) => void;        // REQUIRED\r\n  onDeactivate?: (altRaw: string) => void;\r\n};\r\n\r\ntype EntryLike = { target: Element; intersectionRatio: number };\r\n\r\nexport function createSsrAltObserver({\r\n  rootElement = document,\r\n  minActiveRatio = 0.10,\r\n  onActivate,\r\n  onDeactivate,\r\n}: AltObserverOpts) {\r\n  if (typeof onActivate !== 'function') {\r\n    throw new Error('createSsrAltObserver: onActivate callback is required');\r\n  }\r\n\r\n  // keep RAW alt (including trailing spaces), like the working version\r\n  let currentlyActiveAlt: string | null = null;\r\n  let highestVisibility = 0;\r\n  let debounceTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  // 0..1 with 0.01 steps\r\n  const thresholds: number[] = Array.from({ length: 101 }, (_, i) => i / 100);\r\n\r\n  const getImageAlt = (cardEl: Element): string | null => {\r\n    const img =\r\n      (cardEl.querySelector('.ui-image2') as HTMLImageElement | null) ||\r\n      (cardEl.querySelector('.ui-image1') as HTMLImageElement | null);\r\n    return img ? img.getAttribute('alt') : null; // DO NOT trim\r\n  };\r\n\r\n  // Core logic operates on a simplified EntryLike[] so we can reuse it\r\n  const handleEntries = (entries: EntryLike[]) => {\r\n    // most-visible first\r\n    entries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\r\n\r\n    entries.forEach((entry) => {\r\n      const element = entry.target as HTMLElement;\r\n      const alt = getImageAlt(element);\r\n      if (alt == null) return;\r\n\r\n      const visibility = entry.intersectionRatio;\r\n\r\n      if (visibility > minActiveRatio && visibility > highestVisibility) {\r\n        if (currentlyActiveAlt !== alt) {\r\n          if (currentlyActiveAlt && typeof onDeactivate === 'function') {\r\n            try { onDeactivate(currentlyActiveAlt); } catch {}\r\n          }\r\n          try { onActivate(alt); } catch {}\r\n          currentlyActiveAlt = alt;\r\n          highestVisibility = visibility;\r\n        }\r\n      } else if (visibility <= minActiveRatio && currentlyActiveAlt === alt) {\r\n        if (typeof onDeactivate === 'function') {\r\n          try { onDeactivate(alt); } catch {}\r\n        }\r\n        currentlyActiveAlt = null;\r\n        highestVisibility = 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Real IO -> adapt to EntryLike\r\n  const io = new IntersectionObserver(\r\n    (entries) => {\r\n      const simplified: EntryLike[] = entries.map((e) => ({\r\n        target: e.target,\r\n        intersectionRatio: e.intersectionRatio,\r\n      }));\r\n      handleEntries(simplified);\r\n    },\r\n    {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: thresholds,\r\n    }\r\n  );\r\n\r\n  const observeAll = () => {\r\n    const cards = rootElement.querySelectorAll('.card-container');\r\n    cards.forEach((el) => io.observe(el));\r\n  };\r\n\r\n  const triggerInitial = () => {\r\n    if (debounceTimeout) clearTimeout(debounceTimeout);\r\n    debounceTimeout = setTimeout(() => {\r\n      const cards = Array.from(rootElement.querySelectorAll('.card-container'));\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      // Synthetic first-pass, like your working code\r\n      const synthetic: EntryLike[] = cards.map((card) => {\r\n        const rect = (card as HTMLElement).getBoundingClientRect();\r\n        const visibility = Math.max(0, Math.min(rect.height, viewportHeight - rect.top) / rect.height);\r\n        return { target: card, intersectionRatio: visibility };\r\n      });\r\n\r\n      handleEntries(synthetic);\r\n    }, 50);\r\n  };\r\n\r\n  // bootstrap\r\n  observeAll();\r\n  triggerInitial();\r\n\r\n  return {\r\n    dispose() {\r\n      if (debounceTimeout) clearTimeout(debounceTimeout);\r\n      io.disconnect();\r\n      currentlyActiveAlt = null;\r\n      highestVisibility = 0;\r\n    },\r\n    rearm() {\r\n      io.disconnect();\r\n      observeAll();\r\n      triggerInitial();\r\n    },\r\n    debugState() {\r\n      return { currentlyActiveAlt, highestVisibility };\r\n    },\r\n  };\r\n}\r\n\r\nexport default createSsrAltObserver;\r\n","import { ensureDynamicThemePreload } from '../../dynamic-app/preload-dynamic-app-route';\r\nimport setupIntersectionObserver from '../../dynamic-app/lib/documentObserver';\r\nimport { createSsrAltObserver } from '../logic/dynamic-alt-observer';\r\nimport { colorMapping2 } from '../../dynamic-app/lib/colorString';\r\n\r\n/* =========================\r\n   Config / selectors\r\n   ========================= */\r\nconst SEL = {\r\n  list: '.UI-card-divider',\r\n  card: '.card-container',\r\n  imgPref: '.ui-image2',    // prefer this image\r\n  imgFallback: '.ui-image1' // fallback image\r\n};\r\n\r\n/* =========================\r\n   Helpers\r\n   ========================= */\r\n\r\n// normalize for safer alphabetic sorting (accent/case/numeric)\r\nfunction normalizeForSort(s?: string | null) {\r\n  return (s || '')\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .toLocaleLowerCase('en');\r\n}\r\nfunction compareAsc(a: string, b: string) {\r\n  return normalizeForSort(a).localeCompare(normalizeForSort(b), 'en', {\r\n    sensitivity: 'base',\r\n    numeric: true,\r\n    ignorePunctuation: true,\r\n  });\r\n}\r\nfunction compareDesc(a: string, b: string) {\r\n  return -compareAsc(a, b);\r\n}\r\n\r\n// fresh shuffle each call (seedless)\r\nfunction shuffleArray<T>(arr: T[]): T[] {\r\n  const a = [...arr];\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n\r\n// get <img alt> from a card; prefer .ui-image2 then .ui-image1\r\nfunction getAltFromCard(cardEl: HTMLElement): string {\r\n  const img =\r\n    (cardEl.querySelector(SEL.imgPref) as HTMLImageElement | null) ||\r\n    (cardEl.querySelector(SEL.imgFallback) as HTMLImageElement | null);\r\n  return (img?.getAttribute('alt') || '').trim();\r\n}\r\n\r\n// ES2019-safe replaceAll via split/join\r\nfunction replaceAllCompat(h: string, n: string, r: string) {\r\n  return h.split(n).join(r);\r\n}\r\n\r\n// Retag index-based classes if you rely on them for styling\r\nfunction retagIndexClasses(cardEl: HTMLElement, oldIndex: number, newIndex: number) {\r\n  const rewrite = (el: Element) => {\r\n    const node = el as HTMLElement;\r\n    const cls = node.className;\r\n    if (typeof cls === 'string' && cls) {\r\n      let next = cls;\r\n      next = replaceAllCompat(next, `custom-card-${oldIndex}-2`, `custom-card-${newIndex}-2`);\r\n      next = replaceAllCompat(next, `custom-card-${oldIndex}`, `custom-card-${newIndex}`);\r\n      node.className = next;\r\n    }\r\n  };\r\n  rewrite(cardEl);\r\n  cardEl.querySelectorAll('*').forEach(rewrite);\r\n}\r\n\r\n// tiny debounce\r\nfunction debounce<F extends (...args: any[]) => void>(fn: F, ms = 120) {\r\n  let t: any;\r\n  return (...args: Parameters<F>) => {\r\n    clearTimeout(t);\r\n    t = setTimeout(() => fn(...args), ms);\r\n  };\r\n}\r\n\r\n// hex (#rrggbb) -> rgba(r,g,b,a) with fallback to original if parse fails\r\nfunction hexToRgba(hex: string, alpha = 0.65): string {\r\n  const m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec((hex || '').trim());\r\n  if (!m) return hex;\r\n  const r = parseInt(m[1], 16);\r\n  const g = parseInt(m[2], 16);\r\n  const b = parseInt(m[3], 16);\r\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n}\r\n\r\n/* =========================\r\n   SortBy chrome color from current DOM order\r\n   ========================= */\r\n\r\n// Rule: ≥1025px → 3rd card, 768–1024 → 2nd card, <768 → 1st card.\r\n// Use that card’s alt → colorMapping[alt][1].\r\nfunction computeViewportIndex(width: number) {\r\n  return width >= 1025 ? 2 : width >= 768 ? 1 : 0;\r\n}\r\n\r\nfunction applySortChromeColorFromDomOrder(listContainer: HTMLElement, sortRoot: HTMLElement | null) {\r\n  if (!sortRoot || !listContainer) return;\r\n\r\n  const cards = Array.from(listContainer.querySelectorAll(SEL.card)) as HTMLElement[];\r\n  if (cards.length === 0) return;\r\n\r\n  const idx = computeViewportIndex(window.innerWidth);\r\n  const target = cards[idx];\r\n  if (!target) return;\r\n\r\n  const alt = getAltFromCard(target);\r\n  if (!alt) return;\r\n\r\n  const colors = (colorMapping2 as any)?.[alt];\r\n  const color = Array.isArray(colors) ? (colors[1] || null) : null;\r\n  if (!color) return;\r\n\r\n  const borderRgba = hexToRgba(color, 0.3);\r\n\r\n  (sortRoot as HTMLElement).style.border = `solid 1.6px ${borderRgba}`;\r\n  (sortRoot as HTMLElement).style.boxShadow = `\r\n    0 1px 8px rgba(0,0,0,0.1),\r\n    0 22px 8px rgba(0,0,0,0.08),\r\n    12px 12px ${color}\r\n  `;\r\n}\r\n\r\n/* =========================\r\n   Progressive HQ upgrade (visible first + background queue)\r\n   ========================= */\r\n\r\n// Quick pass: upgrade any images currently visible on screen\r\nfunction upgradeVisibleImages(container: HTMLElement | Document) {\r\n  const imgs = Array.from(container.querySelectorAll('img[data-src-full]')) as HTMLImageElement[];\r\n  const vh = window.innerHeight;\r\n  for (const img of imgs) {\r\n    const rect = img.getBoundingClientRect();\r\n    const visible = rect.bottom > 0 && rect.top < vh;\r\n    const full = (img.dataset as any)?.srcFull;\r\n    if (visible && full && img.src !== full) {\r\n      img.src = full;\r\n      img.removeAttribute('data-src-full');\r\n    }\r\n  }\r\n}\r\n\r\n// Preload a URL with low priority then resolve (no swap here)\r\nfunction preload(fullUrl: string) {\r\n  return new Promise<void>((resolve, reject) => {\r\n    const ghost = new Image();\r\n    try { (ghost as any).decoding = 'async'; } catch {}\r\n    try { (ghost as any).fetchPriority = 'low'; } catch {}\r\n    ghost.onload = () => resolve();\r\n    ghost.onerror = () => resolve(); // tolerate failures; keep LQ\r\n    ghost.src = fullUrl;\r\n  });\r\n}\r\n\r\n// Background queue that eventually swaps every remaining image\r\nlet _bgHQStarted = false;\r\nlet _bgCancel: (() => void) | null = null;\r\n\r\nfunction upgradeAllImagesInBackground(root: Document | HTMLElement, maxConcurrent = 3) {\r\n  if (_bgHQStarted) return _bgCancel || null;\r\n  _bgHQStarted = true;\r\n\r\n  const pool = new Set<Promise<any>>();\r\n  let cancelled = false;\r\n\r\n  const allImgs = Array.from(root.querySelectorAll('img[data-src-full]')) as HTMLImageElement[];\r\n\r\n  // Optional: prioritize by distance from viewport top (still “all”, just nicer order)\r\n  const vhMid = window.scrollY + window.innerHeight / 2;\r\n  allImgs.sort((a, b) => {\r\n    const ra = a.getBoundingClientRect(); const rb = b.getBoundingClientRect();\r\n    const ya = ra.top + window.scrollY; const yb = rb.top + window.scrollY;\r\n    return Math.abs(ya - vhMid) - Math.abs(yb - vhMid);\r\n  });\r\n\r\n  let index = 0;\r\n\r\n  const pump = () => {\r\n    if (cancelled) return;\r\n    while (pool.size < maxConcurrent && index < allImgs.length) {\r\n      const el = allImgs[index++];\r\n      const full = (el.dataset as any)?.srcFull;\r\n      if (!full) continue;\r\n\r\n      const task = preload(full).then(() => {\r\n        if (cancelled) return;\r\n        // If still pointing to LQ and not already swapped, replace\r\n        if (el.isConnected && el.getAttribute('data-src-full') === full) {\r\n          // keep lazy decoding; just change the source\r\n          el.src = full;\r\n          el.removeAttribute('data-src-full');\r\n        }\r\n      }).finally(() => {\r\n        pool.delete(task);\r\n        pump();\r\n      });\r\n\r\n      pool.add(task);\r\n    }\r\n  };\r\n\r\n  pump();\r\n\r\n  const cancel = () => { cancelled = true; };\r\n  _bgCancel = cancel;\r\n  return cancel;\r\n}\r\n\r\n/* =========================\r\n   Main enhancer (DOM-driven, seed-proof for A↔Z)\r\n   ========================= */\r\n\r\nexport function enhanceDynamicThemeSSR(opts: { onColorChange?: (alt: string, colors: string[]) => void } = {}) {\r\n  const { onColorChange } = opts;\r\n\r\n  const host = document.getElementById('dynamic-theme-ssr');\r\n  if (!host || (host as any).__enhanced) return;\r\n  (host as any).__enhanced = true;\r\n\r\n  // make the SSR section interactive now\r\n  host.classList.remove('ssr-initial');\r\n  (host as HTMLElement).style.pointerEvents = 'auto';\r\n\r\n  // If your CSS was disabling pointer events on the snapshot, force-enable:\r\n  const snapshot = (document.getElementById('dynamic-snapshot') as HTMLElement | null) || host;\r\n  if (snapshot) snapshot.style.pointerEvents = 'auto';\r\n\r\n  const listContainer = snapshot?.querySelector(SEL.list) as HTMLElement | null;\r\n  if (!listContainer) return;\r\n\r\n  // Sort UI bits\r\n  const sortRoot = document.querySelector('#dynamic-sortby-mount .custom-dropdown') as HTMLElement | null;\r\n  const selectEl = sortRoot?.querySelector('.custom-select');\r\n  const arrowEl = sortRoot?.querySelector('.custom-arrow');\r\n  const selectedValueEl = sortRoot?.querySelector('.selected-value h5');\r\n\r\n  let optionsEl = sortRoot?.querySelector('.options-container') as HTMLElement | null;\r\n  if (!optionsEl) {\r\n    optionsEl = document.createElement('div');\r\n    optionsEl.className = 'options-container';\r\n    optionsEl.style.display = 'none';\r\n    optionsEl.innerHTML = `\r\n      <div class=\"option selected\" data-value=\"random\">Randomized</div>\r\n      <div class=\"option\" data-value=\"titleAsc\">A to Z</div>\r\n      <div class=\"option\" data-value=\"titleDesc\">Z to A</div>\r\n    `;\r\n    sortRoot?.appendChild(optionsEl);\r\n  }\r\n\r\n  const openOptions = () => { optionsEl!.style.display = ''; arrowEl?.classList.add('open'); };\r\n  const closeOptions = () => { optionsEl!.style.display = 'none'; arrowEl?.classList.remove('open'); };\r\n  document.addEventListener('mousedown', (e) => { if (!sortRoot?.contains(e.target as Node)) closeOptions(); });\r\n  selectEl?.addEventListener('click', () => {\r\n    const isOpen = optionsEl!.style.display !== 'none';\r\n    isOpen ? closeOptions() : openOptions();\r\n  });\r\n\r\n  const setSelectedLabel = (mode: string) => {\r\n    if (!selectedValueEl) return;\r\n    selectedValueEl.textContent =\r\n      mode === 'titleAsc' ? 'A to Z' :\r\n      mode === 'titleDesc' ? 'Z to A' : 'Randomized';\r\n  };\r\n  const setSelectedClass = (mode: string) => {\r\n    optionsEl!.querySelectorAll('.option').forEach((o) => {\r\n      o.classList.toggle('selected', (o as HTMLElement).getAttribute('data-value') === mode);\r\n    });\r\n  };\r\n\r\n  // Base SSR enhancements (always root = document)\r\n  const prefersReduced = !!(window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches);\r\n  setupIntersectionObserver(prefersReduced, document);\r\n\r\n  // Observer for color dynamics\r\n  let altObs: ReturnType<typeof createSsrAltObserver> | null = null;\r\n  const rearmAlt = () => {\r\n    if (altObs) altObs.dispose();\r\n    altObs = createSsrAltObserver({\r\n      rootElement: document,\r\n      onActivate: (alt1: string) => {\r\n        const colors = (colorMapping2 as any)?.[alt1];\r\n        if (typeof onColorChange === 'function' && colors) onColorChange(alt1, colors);\r\n      },\r\n      onDeactivate: () => { /* no-op */ },\r\n    });\r\n  };\r\n\r\n  const afterReorder = () => {\r\n    // keep your transforms/images work\r\n    setupIntersectionObserver(true, document);\r\n    setupIntersectionObserver(false, document);\r\n\r\n    // ensure observer tracks current nodes\r\n    altObs?.rearm();\r\n\r\n    // apply SortBy color from current DOM order according to viewport rule\r\n    applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n\r\n    // visible first\r\n    upgradeVisibleImages(document);\r\n    // and make sure the background queue is running for the rest\r\n    upgradeAllImagesInBackground(document, 3);\r\n  };\r\n\r\n  // DOM-driven sort (seed-proof): use <img alt> from each card\r\n  optionsEl!.addEventListener('click', (e) => {\r\n    const opt = (e.target as HTMLElement).closest('.option');\r\n    if (!opt) return;\r\n\r\n    const mode = (opt.getAttribute('data-value') as 'random' | 'titleAsc' | 'titleDesc') || 'random';\r\n    const cards = Array.from(listContainer.querySelectorAll(SEL.card)) as HTMLElement[];\r\n\r\n    let ordered: HTMLElement[];\r\n    if (mode === 'random') {\r\n      ordered = shuffleArray(cards);\r\n    } else {\r\n      ordered = [...cards].sort((a, b) => {\r\n        const A = getAltFromCard(a);\r\n        const B = getAltFromCard(b);\r\n        return mode === 'titleAsc' ? compareAsc(A, B) : compareDesc(A, B);\r\n      });\r\n    }\r\n\r\n    // apply to DOM + keep index-based classes in sync\r\n    const frag = document.createDocumentFragment();\r\n    ordered.forEach((el, newIndex) => {\r\n      const idxClass = [...el.classList].find((c) => /^custom-card-\\d+$/.test(c));\r\n      const oldIndex = idxClass ? parseInt(idxClass.split('-').pop()!, 10) : -1;\r\n      if (oldIndex !== -1 && oldIndex !== newIndex) retagIndexClasses(el, oldIndex, newIndex);\r\n      frag.appendChild(el);\r\n    });\r\n    listContainer.appendChild(frag);\r\n\r\n    setSelectedLabel(mode);\r\n    setSelectedClass(mode);\r\n\r\n    closeOptions();\r\n    afterReorder();\r\n  });\r\n\r\n  // Recompute SortBy color on viewport resize (debounced)\r\n  const onResize = debounce(() => {\r\n    applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n    upgradeVisibleImages(document);\r\n    upgradeAllImagesInBackground(document, 3);\r\n  }, 150);\r\n  window.addEventListener('resize', onResize);\r\n\r\n  // Preload only to finish bootstrapping; color is from DOM order (not preload)\r\n  ensureDynamicThemePreload()\r\n    .finally(() => {\r\n      rearmAlt();\r\n      setSelectedLabel('random');\r\n      setSelectedClass('random');\r\n      // initial color from current DOM order\r\n      applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n      // visible images first\r\n      upgradeVisibleImages(document);\r\n      // then *everything else* via background queue\r\n      upgradeAllImagesInBackground(document, 3);\r\n    });\r\n\r\n  // optional cleanup (enable if your route unmounts)\r\n  // return () => { window.removeEventListener('resize', onResize); altObs?.dispose(); _bgCancel?.(); };\r\n}\r\n","// Reusable helpers for turning icon payloads into safe HTML strings\r\n\r\nexport type IconLike = { title?: string; icon?: string; url?: string };\r\n\r\n/** remove BOM, <?xml …?>, <!DOCTYPE …> so innerHTML gets a clean <svg> root */\r\nexport const stripSvgPreamble = (s = '') =>\r\n  s\r\n    .replace(/^\\uFEFF/, '')\r\n    .replace(/^\\s*<\\?xml[\\s\\S]*?\\?>\\s*/i, '')\r\n    .replace(/^\\s*<!DOCTYPE[\\s\\S]*?>\\s*/i, '')\r\n    .trim();\r\n\r\nexport const isInlineSvg = (s?: string) => {\r\n  if (typeof s !== 'string') return false;\r\n  const t = stripSvgPreamble(s);\r\n  return /^\\s*<svg[\\s\\S]*<\\/svg>\\s*$/i.test(t);\r\n};\r\n\r\nexport const asInlineSvg = (s?: string) => (isInlineSvg(s) ? stripSvgPreamble(s!) : '');\r\n\r\nexport const escapeAttr = (s: string) => String(s).replace(/\"/g, '&quot;');\r\n\r\nexport const toImgHtml = (src?: string) =>\r\n  typeof src === 'string' && src.trim()\r\n    ? `<img src=\"${escapeAttr(src)}\" alt=\"\" aria-hidden=\"true\" />`\r\n    : '';\r\n\r\n/** normalize a plain { name: value } map (from SSR/window) to safe HTML strings */\r\nexport function normalizeIconMap(raw?: Record<string, string>): Record<string, string> {\r\n  const out: Record<string, string> = {};\r\n  for (const [k, v] of Object.entries(raw || {})) {\r\n    out[k] = asInlineSvg(v) || toImgHtml(v);\r\n  }\r\n  return out;\r\n}\r\n\r\n/** build a client icon map from Sanity rows (prefer inline; else URL→<img>) */\r\nexport function toClientIconMap(list: IconLike[] = []): Record<string, string> {\r\n  const out: Record<string, string> = {};\r\n  for (const it of list) {\r\n    if (!it?.title) continue;\r\n    const inline = asInlineSvg(it.icon);\r\n    out[it.title] = inline || toImgHtml(it.url) || toImgHtml(it.icon);\r\n  }\r\n  return out;\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport loadable from '@loadable/component';\r\nimport { createPortal } from 'react-dom';\r\nimport { useSsrData } from '../../utils/context-providers/ssr-data-context';\r\nimport { useStyleInjection } from '../../utils/context-providers/style-injector';\r\n\r\nimport {\r\n  primeDynamicThemeFromSSR as primeFromSSR,\r\n  ensureDynamicThemePreload as ensureDynamicPreload,\r\n} from '../preload-dynamic-app-route';\r\nimport { enhanceDynamicThemeSSR } from '../../ssr/dynamic-app/UIcards+sort';\r\nimport { colorMapping } from '../../dynamic-app/lib/colorString';\r\nimport fetchSVGIcons from '../../dynamic-app/lib/fetchSVGIcons';\r\nimport miscCss from '../../styles/dynamic-app/misc.css?raw';\r\n\r\nimport {\r\n  normalizeIconMap,\r\n  toClientIconMap,\r\n} from '../../dynamic-app/lib/svg-icon-map';\r\nimport type { IconLike } from '../../dynamic-app/lib/svg-icon-map';\r\n\r\n// use the actual export you have\r\nimport { computeStateFromPalette } from '../lib/palette-controller';\r\n\r\n// local types to satisfy TS based on your controller’s API\r\ntype Quartet = [string, string, string, string];\r\ntype Triplet = [string, string, string];\r\n\r\n// client-only chunks\r\nconst Navigation = loadable(() => import('../../dynamic-app/components/navigation'), { ssr: false });\r\nconst FireworksDisplay = loadable(() => import('../../dynamic-app/components/fireworksDisplay'), { ssr: false });\r\nconst Footer = loadable(() => import('../../dynamic-app/components/footer'), { ssr: false });\r\nconst TitleDivider = loadable(() => import('../../dynamic-app/components/title'), { ssr: false });\r\nconst PauseButton = loadable(() => import('../../dynamic-app/components/pauseButton'), { ssr: false });\r\n\r\n// SSR shell (UI cards + sort stub)\r\nconst DynamicTheme = loadable(() => import('../../DynamicTheme.jsx'), { ssr: true });\r\n\r\n/* ---------- portals ---------- */\r\nfunction NavigationPortal(props: {\r\n  items: any[];\r\n  arrow1?: string;\r\n  arrow2?: string;\r\n  activeColor?: string;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useStyleInjection(miscCss, 'dynamic-app-style-misc');\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-nav-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <Navigation\r\n      items={props.items}\r\n      customArrowIcon2={props.arrow1}\r\n      customArrowIcon={props.arrow2}\r\n      activeColor={props.activeColor ?? '#FFFFFF'}\r\n      isInShadow={false}\r\n      scrollLockContainer={undefined}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction FireworksPortal(props: {\r\n  items: any[];\r\n  activeColor: string;\r\n  lastKnownColor: string;\r\n  onToggleFireworks?: (fn: (enabled: boolean) => void) => void;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-fireworks-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <FireworksDisplay\r\n      colorMapping={colorMapping}\r\n      items={props.items}\r\n      activeColor={props.activeColor}\r\n      lastKnownColor={props.lastKnownColor}\r\n      onToggleFireworks={props.onToggleFireworks || (() => {})}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction TitlePortal(props: {\r\n  logoSvg?: string;\r\n  movingTextColors?: Triplet;\r\n  pauseAnimation?: boolean;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-title-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <TitleDivider\r\n      svgIcon={props.logoSvg || ''}\r\n      movingTextColors={props.movingTextColors || ['#FFFFFF', '#FFFFFF', '#FFFFFF']}\r\n      pauseAnimation={!!props.pauseAnimation}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction PausePortal(props: { onToggle: (isEnabled: boolean) => void }) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-pause-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <div className=\"pause-button-wrapper\">\r\n      <PauseButton toggleP5Animation={props.onToggle} />\r\n    </div>,\r\n    target\r\n  );\r\n}\r\n\r\nfunction FooterPortal(props: {\r\n  arrow1?: string;\r\n  linkArrowIcon?: string;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-footer-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <Footer\r\n      customArrowIcon2={props.arrow1}\r\n      linkArrowIcon={props.linkArrowIcon}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\n/* ---------- route ---------- */\r\nexport default function DynamicThemeRoute() {\r\n  const ssr = useSsrData();\r\n  const preload = ssr?.preloaded?.dynamicTheme;\r\n\r\n  const [items, setItems] = useState<any[]>(Array.isArray(preload?.images) ? preload!.images : []);\r\n  const [icons, setIcons] = useState<Record<string, string>>(normalizeIconMap(preload?.icons || {}));\r\n  const [pauseAnimation, setPauseAnimation] = useState(false);\r\n\r\n  const [activeColor, setActiveColor] = useState('#FFFFFF');\r\n  const [movingTextColors, setMovingTextColors] = useState<Triplet>(['#FFFFFF', '#FFFFFF', '#FFFFFF']);\r\n  const [lastKnownColor, setLastKnownColor] = useState('#FFFFFF');\r\n\r\n  const fwToggleRef = useRef<((enabled: boolean) => void) | null>(null);\r\n  const handleSetToggleFireworks = (fn: (enabled: boolean) => void) => { fwToggleRef.current = fn; };\r\n  const handlePauseToggle = (isEnabled: boolean) => {\r\n    setPauseAnimation(!isEnabled);\r\n    try { fwToggleRef.current?.(isEnabled); } catch {}\r\n  };\r\n\r\n  useEffect(() => { if (preload) primeFromSSR(preload); }, [preload]);\r\n\r\n  useEffect(() => {\r\n    const w = typeof window !== 'undefined' ? (window as any) : null;\r\n    const boot = w?.__DYNAMIC_THEME_PRELOAD__;\r\n    if (boot) {\r\n      if (Array.isArray(boot.images)) setItems(boot.images);\r\n      if (boot.icons) setIcons(normalizeIconMap(boot.icons));\r\n      primeFromSSR(boot);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let dead = false;\r\n    (async () => {\r\n      try {\r\n        const cache = await ensureDynamicPreload();\r\n        if (!dead && cache) {\r\n          if (!items.length && Array.isArray(cache.images)) setItems(cache.images);\r\n          if (!Object.keys(icons).length && cache.icons) setIcons(normalizeIconMap(cache.icons));\r\n        }\r\n      } catch {}\r\n    })();\r\n    return () => { dead = true; };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let dead = false;\r\n    (async () => {\r\n      if (icons && (icons['arrow1'] || icons['arrow2'] || icons['link-icon'] || icons['logo-small-1'])) return;\r\n      try {\r\n        const raw = (await fetchSVGIcons().catch(() => [])) as IconLike[];\r\n        if (!dead && Array.isArray(raw)) {\r\n          const map = toClientIconMap(raw);\r\n          if (Object.keys(map).length) setIcons(prev => ({ ...map, ...prev }));\r\n        }\r\n      } catch {}\r\n    })();\r\n    return () => { dead = true; };\r\n  }, [icons]);\r\n\r\n  // compute palette-driven state from the enhancer (which gives a Quartet)\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined')\r\n      enhanceDynamicThemeSSR({\r\n        onColorChange: (_alt: string, palette?: string[] | null) => {\r\n          // only accept quartets\r\n          if (!Array.isArray(palette) || palette.length < 4) return;\r\n          const { activeColor: nextActive, movingText: nextTriplet, lastKnown } =\r\n            computeStateFromPalette(palette as Quartet);\r\n\r\n          if (nextActive !== activeColor) {\r\n            setActiveColor(nextActive);\r\n            setLastKnownColor(lastKnown ?? nextActive);\r\n          }\r\n          setMovingTextColors(nextTriplet as Triplet);\r\n        },\r\n      });\r\n  }, [activeColor]);\r\n\r\n  const propsMemo = useMemo(() => ({\r\n    items,\r\n    arrow1: icons['arrow1'] || '',\r\n    arrow2: icons['arrow2'] || '',\r\n    linkArrowIcon: icons['link-icon'] || '',\r\n    logoSmall: icons['logo-small-1'] || '',\r\n  }), [items, icons]);\r\n\r\n  return (\r\n    <>\r\n      <DynamicTheme />\r\n\r\n      <NavigationPortal\r\n        items={propsMemo.items}\r\n        arrow1={propsMemo.arrow1}\r\n        arrow2={propsMemo.arrow2}\r\n        activeColor={activeColor}\r\n      />\r\n\r\n      <FireworksPortal\r\n        items={propsMemo.items}\r\n        activeColor={activeColor}\r\n        lastKnownColor={lastKnownColor}\r\n        onToggleFireworks={handleSetToggleFireworks}\r\n      />\r\n\r\n      <TitlePortal\r\n        logoSvg={propsMemo.logoSmall}\r\n        movingTextColors={movingTextColors}\r\n        pauseAnimation={pauseAnimation}\r\n      />\r\n\r\n      <PausePortal onToggle={handlePauseToggle} />\r\n\r\n      <FooterPortal\r\n        arrow1={propsMemo.arrow1}\r\n        linkArrowIcon={propsMemo.linkArrowIcon}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// lib/fetchUser.ts\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport const fetchImages = async (sortOption = 'default') => {\r\n  let orderClause = '';\r\n  switch (sortOption) {\r\n    case 'titleAsc':  orderClause = '| order(title asc)'; break;\r\n    case 'titleDesc': orderClause = '| order(title desc)'; break;\r\n    case 'dateAsc':   orderClause = '| order(_createdAt asc)'; break;\r\n    case 'dateDesc':  orderClause = '| order(_createdAt desc)'; break;\r\n  }\r\n\r\n  const query = `*[_type == \"imageAsset\"] ${orderClause} {\r\n    _id,\r\n    title,\r\n    description,\r\n    // dereference to get real URLs on the server\r\n    image1{ ..., asset->{ url } },\r\n    image2{ ..., asset->{ url } },\r\n    caption1,\r\n    alt1,\r\n    alt2,\r\n    iconName,\r\n    url1\r\n  }`;\r\n\r\n  try {\r\n    const data = await sanityClient.fetch(query);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching images', error);\r\n    return [];\r\n  }\r\n};\r\n","// src/utils/context-providers/shadow-root-context.tsx\r\nimport React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n\r\ntype ShadowRootFn = () => ShadowRoot | null;\r\ntype StyleSheetRaw = string;\r\n\r\nconst hasDOM = typeof document !== 'undefined';\r\nconst hasConstructedSheets =\r\n  hasDOM &&\r\n  typeof (globalThis as any).Document !== 'undefined' &&\r\n  'adoptedStyleSheets' in (Document.prototype as any) &&\r\n  typeof (globalThis as any).CSSStyleSheet !== 'undefined' &&\r\n  'replaceSync' in (CSSStyleSheet.prototype as any);\r\n\r\nconst isShadowRoot = (node: any): node is ShadowRoot =>\r\n  typeof (globalThis as any).ShadowRoot !== 'undefined' && node instanceof (globalThis as any).ShadowRoot;\r\n\r\ntype Ctx = {\r\n  getShadowRoot: ShadowRootFn;\r\n  injectStyle: (css: StyleSheetRaw, id: string) => void;\r\n  injectLink: (href: string, id?: string) => void;\r\n  removeStyle?: (id: string) => void;\r\n} | null;\r\n\r\nconst ShadowRootContext = createContext<Ctx>(null);\r\n\r\nlet warnedOnce = false;\r\n\r\nexport const useShadowRoot = () => {\r\n  const ctx = useContext(ShadowRootContext);\r\n  if (!ctx) {\r\n    if (!warnedOnce) {\r\n      // Dev-friendly, harmless in prod too; only once.\r\n      console.warn('useShadowRoot called outside provider; falling back to document.');\r\n      warnedOnce = true;\r\n    }\r\n\r\n    const injectStyle = (css: string, id: string) => {\r\n      if (!hasDOM) return;\r\n      const existing = document.head.querySelector<HTMLStyleElement>(`style[data-style-id=\"${id}\"]`);\r\n      if (existing) return;\r\n      const style = document.createElement('style');\r\n      style.dataset.styleId = id;\r\n      style.textContent = css;\r\n      document.head.appendChild(style);\r\n    };\r\n\r\n    const injectLink = (href: string, id?: string) => {\r\n      if (!hasDOM) return;\r\n      const selector = id\r\n        ? `link[data-style-id=\"${id}\"]`\r\n        : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n      if (document.head.querySelector(selector)) return;\r\n      const link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = href;\r\n      if (id) link.dataset.styleId = id;\r\n      document.head.appendChild(link);\r\n    };\r\n\r\n    const removeStyle = (id: string) => {\r\n      if (!hasDOM) return;\r\n      document.head.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n    };\r\n\r\n    return {\r\n      getShadowRoot: () => null,\r\n      injectStyle,\r\n      injectLink,\r\n      removeStyle,\r\n    };\r\n  }\r\n  return ctx;\r\n};\r\n\r\nexport function ShadowRootProvider({\r\n  getShadowRoot,\r\n  children,\r\n}: {\r\n  getShadowRoot: ShadowRootFn;\r\n  children: ReactNode;\r\n}) {\r\n  // Cache constructed sheets per ID (per provider)\r\n  const sheetCacheRef = useRef<Map<string, CSSStyleSheet>>(new Map());\r\n\r\n  const injectStyle = (css: string, id: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // If no shadow root, gracefully inject into document.head\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      const existing = document.head.querySelector<HTMLStyleElement>(`style[data-style-id=\"${id}\"]`);\r\n      if (existing) return;\r\n      const style = document.createElement('style');\r\n      style.dataset.styleId = id;\r\n      style.textContent = css;\r\n      document.head.appendChild(style);\r\n      return;\r\n    }\r\n\r\n    // Shadow root path\r\n    if (hasConstructedSheets) {\r\n      let sheet = sheetCacheRef.current.get(id);\r\n      if (!sheet) {\r\n        sheet = new (CSSStyleSheet as any)();\r\n        sheet.replaceSync(css);\r\n        sheetCacheRef.current.set(id, sheet);\r\n      }\r\n      if (!root.adoptedStyleSheets.includes(sheet)) {\r\n        root.adoptedStyleSheets = [...root.adoptedStyleSheets, sheet];\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Fallback <style> in shadow root\r\n    if (root.querySelector(`style[data-style-id=\"${id}\"]`)) return;\r\n    const style = document.createElement('style');\r\n    style.textContent = css;\r\n    (style as any).dataset.styleId = id;\r\n    root.appendChild(style);\r\n  };\r\n\r\n  const injectLink = (href: string, id?: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // If no shadow root, use document.head\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      const selector = id\r\n        ? `link[data-style-id=\"${id}\"]`\r\n        : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n      if (document.head.querySelector(selector)) return;\r\n      const link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = href;\r\n      if (id) (link as any).dataset.styleId = id;\r\n      document.head.appendChild(link);\r\n      return;\r\n    }\r\n\r\n    // Shadow root link injection\r\n    const selector = id ? `link[data-style-id=\"${id}\"]` : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n    if (root.querySelector(selector)) return;\r\n    const link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = href;\r\n    if (id) (link as any).dataset.styleId = id;\r\n    root.appendChild(link);\r\n  };\r\n\r\n  const removeStyle = (id: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // Remove from doc head if no shadow root\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      document.head.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n      return;\r\n    }\r\n\r\n    if (hasConstructedSheets) {\r\n      const sheet = sheetCacheRef.current.get(id);\r\n      if (sheet) {\r\n        root.adoptedStyleSheets = root.adoptedStyleSheets.filter((s) => s !== sheet);\r\n      }\r\n      return;\r\n    }\r\n    root.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n  };\r\n\r\n  return (\r\n    <ShadowRootContext.Provider value={{ getShadowRoot, injectStyle, injectLink, removeStyle }}>\r\n      {children}\r\n    </ShadowRootContext.Provider>\r\n  );\r\n}\r\n","// src/utils/context-providers/style-injector.ts\r\nimport { useEffect } from 'react';\r\nimport { useShadowRoot } from './shadow-root-context';\r\n\r\n// Augment Window locally so TS always sees the field here\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_STYLE_IDS__?: Set<string>;\r\n  }\r\n}\r\n\r\n// Safe handle to window (SSR-friendly)\r\nconst win: (Window & { __DYNAMIC_STYLE_IDS__?: Set<string> }) | undefined =\r\n  typeof window !== 'undefined' ? window : undefined;\r\n\r\n// Global dedupe set (persisted on window between renders)\r\nconst globalStyleIds: Set<string> = (() => {\r\n  if (!win) return new Set<string>();\r\n  if (!win.__DYNAMIC_STYLE_IDS__) win.__DYNAMIC_STYLE_IDS__ = new Set<string>();\r\n  return win.__DYNAMIC_STYLE_IDS__;\r\n})();\r\n\r\nexport const useStyleInjection = (css: string, id: string) => {\r\n  const { injectStyle, getShadowRoot } = useShadowRoot() || {};\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn('useStyleInjection: id is required for dedupe');\r\n      }\r\n      return;\r\n    }\r\n\r\n    const shadowRoot = getShadowRoot?.();\r\n    const isInShadow = shadowRoot && shadowRoot !== document;\r\n\r\n    if (isInShadow && injectStyle) {\r\n      // Shadow DOM dedupe by ID\r\n      if (!shadowRoot.querySelector(`style[data-style-id=\"${id}\"]`)) {\r\n        injectStyle(css, id); // provider handles DOM append\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Global dedupe (memo + DOM check as a safety)\r\n    if (!globalStyleIds.has(id)) {\r\n      const existing = document.head.querySelector(`style[data-style-id=\"${id}\"]`);\r\n      if (!existing) {\r\n        const styleEl = document.createElement('style');\r\n        styleEl.textContent = css;\r\n        styleEl.dataset.styleId = id;\r\n        document.head.appendChild(styleEl);\r\n      }\r\n      globalStyleIds.add(id);\r\n    }\r\n  }, [css, id, injectStyle, getShadowRoot]);\r\n};\r\n","export default \"/* Firework q5-canvas styles */\\r\\n/* canvas {background-color: #1e1e1f;} /* Background colors just incase to avoid color flickering */\\r\\n.firework-divider { pointer-events: none; display: block; position: absolute; background-color: #1e1e1f;}\\r\\n.q5Canvas {z-index: 1 !important; position: relative; display: block; width: 100% !important; height: 100% !important; overflow: hidden;  background: transparent !important;}\\r\\ncanvas {\\r\\n  background-color: transparent !important;\\r\\n  position: fixed; /* or absolute, depending on your setup */\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n#shadow-dynamic-app .firework-wrapper {position: relative; width: 100%; z-index: 0; background-color: transparent; height: 0px;}\\r\\n#shadow-dynamic-app .firework-divider {position: absolute; top: 0; left: 0;\\r\\nwidth: 100%; z-index: 1; pointer-events: none;} \\r\\n\\r\\n@media screen and (max-width: 767px) {\\r\\n.firework-divider {margin-top: -3.6em; transform: scale(1);}  \\r\\n#shadow-dynamic-app .firework-divider {margin-top: -3.6em; background-color: transparent;} \\r\\n#shadow-dynamic-app .q5-normal {background-color: transparent !important; z-index: 2 !important; position: relative;}\\r\\n.q5Canvas {z-index: 1 !important; position: relative;}\\r\\n}\\r\\n@media screen and (min-width: 768px) and (max-width: 1024px) {\\r\\n.firework-divider {margin-top: -6.8em;}  \\r\\n#shadow-dynamic-app .firework-divider {height: 16em;}\\r\\n}\\r\\n@media screen and (min-width: 1025px) {\\r\\n.firework-divider {margin-top: -6.8em;} \\r\\n#shadow-dynamic-app .firework-divider {height: 100dvh;} \\r\\n}\\r\\n@media screen and (min-width: 1225px) {\\r\\n.firework-divider {margin-top: -6.8em;}  \\r\\n#shadow-dynamic-app .firework-divider {transform: scale(1.1);\\r\\nheight: 36em;} \\r\\n}\\r\\n@media screen and (min-width: 2025px) {\\r\\n#shadow-dynamic-app .firework-divider  {transform: scale(1.3);}\\r\\n.firework-divider  {margin-top: -12.8em; overflow: hidden;}\\r\\n.q5-normal {transform: scale(1.4);}\\r\\n#shadow-dynamic-app .firework-divider-shadow {height: 32vw !important;}\\r\\n}\";","// utils/sanity.ts\r\nimport {createClient} from '@sanity/client'\r\n\r\nconst client = createClient({\r\n  projectId: 'uyghamp6',\r\n  dataset: 'production',\r\n  apiVersion: '2023-01-01',\r\n  useCdn: true,\r\n})\r\n\r\nexport default client\r\n","/* Fetch SVG icons */\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport default async function fetchSVGIcons() {\r\n  const query = `*[_type == \"svgIcon\"]{\r\n    title,\r\n    icon,                         // inline SVG string (portable text / string)\r\n    \"url\": file.asset->url        // optional file URL if present in schema\r\n  }`;\r\n  const icons = await sanityClient.fetch(query);\r\n  return icons;\r\n}","// Student → color set mapping\r\nexport const colorMapping: Record<string, [string, string, string, string]> = {\r\n  'Yiner Xu ': ['#e9b2c2', '#ffc3d4', '#5f4f53', '#ffc9d8'],\r\n  'Simone Schwartz': ['#d2b098', '#f0be9b', '#5b4e44', '#f2c5a5'],\r\n  'Seth Abrahamson ': ['#a9a9a9', '#b9b9b9', '#292929', '#c0c0c0'],\r\n  'Sanna Anwar': ['#e9d0a0', '#ffe4af', '#2f2d28', '#ffe7b7'],\r\n  'Javi Ortiz': ['#e9afbd', '#ffbfcf', '#2f2a2b', '#ffc5d4'],\r\n  'Janhvi Gokalgandhi': ['#a0e1e9', '#aff7ff', '#282e2f', '#b7f8ff'],\r\n  'Andrew Adamides': ['#bef9da', '#7ca08d', '#262a28', '#9dccb4'],\r\n  'Shozab Raza': ['#e9e0a7', '#fff6b6', '#2f2e29', '#fff7bd'],\r\n  'Baopu Wang': ['#b3c2e9', '#c4d4ff', '#4f535f', '#cad8ff'],\r\n  'Efe Ozalp': ['#6fc1e9', '#78d3ff', '#242b2f', '#85d7ff'],\r\n  'Harry Liao ': ['#abcdb2', '#b5e7be', '#292d2a', '#bceac5'],\r\n  'Jawad Naik': ['#97cfac', '#9bedb9', '#272d29', '#a5efc0'],\r\n};\r\n\r\nexport const colorMapping2: Record<string, [string, string, string, string]> = {\r\n  'Yiner Xu': ['#e9b2c2', '#ffc3d4', '#5f4f53', '#ffc9d8'],\r\n  'Simone Schwartz': ['#d2b098', '#f0be9b', '#5b4e44', '#f2c5a5'],\r\n  'Seth Abrahamson': ['#a9a9a9', '#b9b9b9', '#292929', '#c0c0c0'],\r\n  'Sanna Anwar': ['#e9d0a0', '#ffe4af', '#2f2d28', '#ffe7b7'],\r\n  'Javi Ortiz': ['#e9afbd', '#ffbfcf', '#2f2a2b', '#ffc5d4'],\r\n  'Janhvi Gokalgandhi': ['#a0e1e9', '#aff7ff', '#282e2f', '#b7f8ff'],\r\n  'Andrew Adamides': ['#bef9da', '#7ca08d', '#262a28', '#9dccb4'],\r\n  'Shozab Raza': ['#e9e0a7', '#fff6b6', '#2f2e29', '#fff7bd'],\r\n  'Baopu Wang': ['#b3c2e9', '#c4d4ff', '#4f535f', '#cad8ff'],\r\n  'Efe Ozalp': ['#6fc1e9', '#78d3ff', '#242b2f', '#85d7ff'],\r\n  'Harry Liao': ['#abcdb2', '#b5e7be', '#292d2a', '#bceac5'],\r\n  'Jawad Naik': ['#97cfac', '#9bedb9', '#272d29', '#a5efc0'],\r\n};\r\n\r\n"],"names":["WHITE","resolvePalette","altRaw","colorMapping","exact","Array","isArray","trimmed","trim","computeStateFromPalette","q","_ref","win","arguments","length","undefined","window","palette","c0","c1","c2","c3","movingText","innerWidth","activeColor","lastKnown","cache","inFlight","primeDynamicThemeFromSSR","data","_objectSpread","async","ensureDynamicThemeIcons","icons","iconsRaw","fetchSVGIcons","_unused","list","reduce","acc","it","_it$icon","title","val","icon","url","toIconMap","ensureDynamicThemeImages","images","imagesRaw","fetchImages","_unused2","ensureDynamicThemePreload","Promise","all","then","finally","__DYNAMIC_THEME_PRELOAD__","observer","pauseAnimation","rootElement","document","disconnect","applyTransform","percentage","imageContainer","imageContainer2","imageContainerTransform","imageContainer2Transform","imageContainerZIndex","imageContainer2ZIndex","width","style","transform","zIndex","observerOptions","threshold","from","_","i","IntersectionObserver","entries","forEach","entry","element","target","querySelector","rect","getBoundingClientRect","vc","innerHeight","Math","max","min","height","top","querySelectorAll","card","index","img1","img2","observe","createSsrAltObserver","minActiveRatio","onActivate","onDeactivate","Error","currentlyActiveAlt","highestVisibility","debounceTimeout","thresholds","handleEntries","sort","a","b","intersectionRatio","alt","cardEl","img","getAttribute","getImageAlt","visibility","_unused3","io","simplified","map","e","root","rootMargin","observeAll","el","triggerInitial","clearTimeout","setTimeout","cards","viewportHeight","synthetic","dispose","rearm","debugState","SEL","imgPref","imgFallback","normalizeForSort","s","normalize","replace","toLocaleLowerCase","compareAsc","localeCompare","sensitivity","numeric","ignorePunctuation","getAltFromCard","replaceAllCompat","h","n","r","split","join","applySortChromeColorFromDomOrder","listContainer","sortRoot","colors","colorMapping2","color","borderRgba","hex","alpha","m","exec","parseInt","g","concat","hexToRgba","border","boxShadow","upgradeVisibleImages","container","imgs","vh","_img$dataset","visible","bottom","full","dataset","srcFull","src","removeAttribute","preload","fullUrl","resolve","reject","ghost","Image","decoding","fetchPriority","onload","onerror","_bgHQStarted","_bgCancel","upgradeAllImagesInBackground","maxConcurrent","pool","Set","cancelled","allImgs","vhMid","scrollY","ra","rb","ya","yb","abs","pump","size","_el$dataset","task","isConnected","delete","add","cancel","enhanceDynamicThemeSSR","opts","onColorChange","host","getElementById","__enhanced","classList","remove","pointerEvents","snapshot","selectEl","arrowEl","selectedValueEl","optionsEl","createElement","className","display","innerHTML","appendChild","closeOptions","addEventListener","contains","setSelectedLabel","mode","textContent","setSelectedClass","o","toggle","prefersReduced","matchMedia","matches","setupIntersectionObserver","altObs","opt","closest","ordered","arr","j","floor","random","shuffleArray","A","B","compareDesc","frag","createDocumentFragment","newIndex","idxClass","find","c","test","oldIndex","pop","rewrite","node","cls","next","retagIndexClasses","afterReorder","_altObs","onResize","fn","t","ms","_len","args","_key","debounce","alt1","stripSvgPreamble","asInlineSvg","isInlineSvg","toImgHtml","String","normalizeIconMap","raw","out","k","v","Object","Navigation","loadable","resolved","chunkName","isReady","props","key","__webpack_modules__","importAsync","requireAsync","requireSync","id","__webpack_require__","ssr","FireworksDisplay","Footer","TitleDivider","PauseButton","DynamicTheme","NavigationPortal","_props$activeColor","setTarget","useState","useStyleInjection","miscCss","useEffect","createPortal","_jsx","items","customArrowIcon2","arrow1","customArrowIcon","arrow2","isInShadow","scrollLockContainer","FireworksPortal","lastKnownColor","onToggleFireworks","TitlePortal","svgIcon","logoSvg","movingTextColors","PausePortal","children","toggleP5Animation","onToggle","FooterPortal","linkArrowIcon","DynamicThemeRoute","_ssr$preloaded","useSsrData","preloaded","dynamicTheme","setItems","setIcons","setPauseAnimation","setActiveColor","setMovingTextColors","setLastKnownColor","fwToggleRef","useRef","primeFromSSR","w","boot","dead","ensureDynamicPreload","keys","catch","inline","toClientIconMap","prev","_alt","nextActive","nextTriplet","propsMemo","useMemo","logoSmall","_jsxs","_Fragment","current","isEnabled","_fwToggleRef$current","call","orderClause","query","sanityClient","fetch","error","console","hasDOM","hasConstructedSheets","globalThis","Document","prototype","CSSStyleSheet","isShadowRoot","ShadowRoot","ShadowRootContext","createContext","warnedOnce","useShadowRoot","ctx","useContext","warn","getShadowRoot","injectStyle","css","head","styleId","injectLink","href","selector","link","rel","removeStyle","_document$head$queryS","ShadowRootProvider","sheetCacheRef","Map","Provider","value","sheet","get","replaceSync","set","adoptedStyleSheets","includes","_root$querySelector","filter","_document$head$queryS2","globalStyleIds","__DYNAMIC_STYLE_IDS__","shadowRoot","has","styleEl","createClient","projectId","apiVersion","useCdn"],"sourceRoot":""}