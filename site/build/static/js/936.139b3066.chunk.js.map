{"version":3,"file":"static/js/936.139b3066.chunk.js","mappings":"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","sources":["components/rock-escapade/block-g-coin-counter.tsx","utils/loading/loading-hub.tsx","ssr/logic/game-input-guards.tsx","components/rock-escapade/game-viewport-overlay.tsx","utils/content-utility/real-mobile.ts","components/rock-escapade/block-g-game-over.tsx","ssr/logic/game-over-controller.tsx","components/rock-escapade/updateHighScore.ts","components/rock-escapade/block-g-exit.tsx","components/rock-escapade/useHighScoreSubscription.ts"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport lottie, { type AnimationItem, type AnimationSegment } from 'lottie-web';\r\nimport coin from '../../svg/coin.json';\r\n\r\ninterface CoinCounterProps {\r\n  coins: number;\r\n  highScore: number;\r\n  newHighScore: boolean;\r\n}\r\n\r\nconst CoinCounter: React.FC<CoinCounterProps> = ({ coins, highScore, newHighScore }) => {\r\n  const coinRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!coinRef.current) return;\r\n\r\n    const anim: AnimationItem = lottie.loadAnimation({\r\n      container: coinRef.current,\r\n      renderer: 'svg',\r\n      loop: false,          // we'll loop manually with segments\r\n      autoplay: false,\r\n      animationData: coin,\r\n    });\r\n\r\n    const onDomLoaded = () => {\r\n      const svg = coinRef.current?.querySelector('svg');\r\n      if (svg) svg.classList.add('coin-lottie');\r\n\r\n      // start the loop once we know totalFrames\r\n      const total = anim.totalFrames;\r\n      const segment: AnimationSegment = [41, total - 1];\r\n\r\n      const loopOnce = () => anim.playSegments(segment, true);\r\n      const onComplete = () => loopOnce();\r\n\r\n      // kick it off and keep looping\r\n      loopOnce();\r\n      anim.addEventListener('complete', onComplete);\r\n\r\n      // store cleanup that knows this handler\r\n      cleanupHandlers.complete = () => anim.removeEventListener('complete', onComplete);\r\n    };\r\n\r\n    // attach, and keep a way to remove it on unmount\r\n    anim.addEventListener('DOMLoaded', onDomLoaded);\r\n\r\n    const cleanupHandlers: { complete?: () => void } = {};\r\n\r\n    return () => {\r\n      cleanupHandlers.complete?.();\r\n      anim.removeEventListener('DOMLoaded', onDomLoaded);\r\n      anim.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coin-counter\">\r\n      <div className=\"coin-count\">\r\n        <div className=\"coin2\" ref={coinRef} />\r\n        <h3 className=\"coin-amount\">{coins}</h3>\r\n      </div>\r\n      <h3\r\n        className=\"high-score\"\r\n        style={{ background: newHighScore ? '#f6c44b38' : '#514068bd' }}\r\n      >\r\n        {newHighScore ? 'New High Score: ' : 'High Score: '}\r\n        {highScore}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinCounter;\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport '../../styles/loading-hub.css';\r\n\r\ntype LoadingHubProps = {\r\n  keyword?: string;\r\n  lines?: string[];\r\n  minHeight?: number | string;\r\n  className?: string;\r\n  ariaLabel?: string;\r\n  progress?: number | null;\r\n  cycleMs?: number;\r\n  animMs?: number;\r\n  /** Delay before showing loader (ms) */\r\n  delayMs?: number;\r\n};\r\n\r\nexport default function LoadingHub({\r\n  keyword,\r\n  lines = ['Loading…'],\r\n  minHeight = 160,\r\n  className = '',\r\n  ariaLabel = 'Loading',\r\n  progress = null,\r\n  cycleMs = 1400,\r\n  animMs = 900,\r\n  delayMs = 400,\r\n}: LoadingHubProps) {\r\n  const [lineIndex, setLineIndex] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // --- delay before showing loader ---\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setShow(true), delayMs);\r\n    return () => clearTimeout(t);\r\n  }, [delayMs]);\r\n\r\n  // rotate through provided lines\r\n  const hasMultiple = lines.length > 1;\r\n  useEffect(() => {\r\n    if (!hasMultiple) return;\r\n    const t = setInterval(() => {\r\n      setLineIndex((i) => (i + 1) % lines.length);\r\n    }, cycleMs);\r\n    return () => clearInterval(t);\r\n  }, [hasMultiple, lines.length, cycleMs]);\r\n\r\n  // Avoid reflow: lock container height\r\n  const style = useMemo<React.CSSProperties>(() => {\r\n    const h = typeof minHeight === 'number' ? `${minHeight}px` : (minHeight ?? 'auto');\r\n    return { minHeight: h };\r\n  }, [minHeight]);\r\n\r\n  // SR-only progressive percent\r\n  const srRef = useRef<HTMLSpanElement>(null);\r\n  useEffect(() => {\r\n    if (progress == null || !srRef.current) return;\r\n    srRef.current.textContent = `${Math.round(progress)}%`;\r\n  }, [progress]);\r\n\r\n  if (!show) {\r\n    // render an invisible placeholder with locked height\r\n    return <div style={style} aria-hidden=\"true\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`loading-hub loading-hub--text ${className || ''}`}\r\n      style={style}\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n      aria-label={ariaLabel}\r\n      data-keyword={keyword || undefined}\r\n      data-anim-ms={animMs}\r\n    >\r\n      <div className=\"loading-hub__copy\" aria-hidden={false}>\r\n        <h2 key={lineIndex} className=\"loading-hub__line\">\r\n          {lines[lineIndex]}\r\n        </h2>\r\n\r\n        {progress != null && (\r\n          <div className=\"loading-hub__progress\" aria-hidden=\"true\">\r\n            {Math.round(progress)}%\r\n          </div>\r\n        )}\r\n\r\n        <span className=\"sr-only\" ref={srRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// game-input-guards.tsx\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ntype Props = {\r\n  /** When true, guards are active */\r\n  active: boolean;\r\n  /** Hide body scroll while active (restores previous value on cleanup) */\r\n  lockBodyScroll?: boolean;\r\n  /** Also block wheel scrolling while active */\r\n  alsoBlockWheel?: boolean;\r\n  /** Also block touchmove scrolling while active */\r\n  alsoBlockTouch?: boolean;\r\n  /** Don’t block when typing in inputs/selects/textareas */\r\n  allowWhenTyping?: boolean;\r\n  /** Extra keyboard keys to block (in addition to scroll keys) */\r\n  extraKeysToBlock?: string[];\r\n};\r\n\r\nconst SCROLL_KEYS = new Set([\r\n  ' ', 'Spacebar',         // Space\r\n  'ArrowUp', 'ArrowDown',\r\n  'ArrowLeft', 'ArrowRight',\r\n  'PageUp', 'PageDown',\r\n  'Home', 'End',\r\n]);\r\n\r\nconst isFormField = (el: HTMLElement | null) => {\r\n  const tag = el?.tagName;\r\n  return !!tag && /^(INPUT|TEXTAREA|SELECT)$/.test(tag);\r\n};\r\n\r\nconst GameInputGuards: React.FC<Props> = ({\r\n  active,\r\n  lockBodyScroll = true,\r\n  alsoBlockWheel = true,\r\n  alsoBlockTouch = true,\r\n  allowWhenTyping = true,\r\n  extraKeysToBlock = [],\r\n}) => {\r\n  const prevOverflow = useRef<string | null>(null);\r\n  const prevOverscroll = useRef<string | null>(null);\r\n  const extra = new Set(extraKeysToBlock);\r\n\r\n  // Keyboard guard (block default scroll behavior)\r\n  useEffect(() => {\r\n    if (!active) return;\r\n\r\n    const onKey = (e: KeyboardEvent) => {\r\n      if (allowWhenTyping && isFormField(e.target as HTMLElement | null)) return;\r\n\r\n      const k = e.key;\r\n      if (SCROLL_KEYS.has(k) || extra.has(k)) {\r\n        // important: prevent default so page/scroll-controllers don’t react\r\n        e.preventDefault();\r\n        // do NOT stopPropagation, so the game can still read the event\r\n      }\r\n    };\r\n\r\n    // capture + passive:false to reliably intercept before site handlers\r\n    window.addEventListener('keydown', onKey, { capture: true, passive: false });\r\n    window.addEventListener('keypress', onKey as any, { capture: true, passive: false } as any);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', onKey as any, { capture: true } as any);\r\n      window.removeEventListener('keypress', onKey as any, { capture: true } as any);\r\n    };\r\n  }, [active, allowWhenTyping, extraKeysToBlock.join('|')]);\r\n\r\n  // Wheel / touch scroll guards\r\n  useEffect(() => {\r\n    if (!active) return;\r\n\r\n    const block = (e: Event) => { e.preventDefault(); };\r\n\r\n    if (alsoBlockWheel) window.addEventListener('wheel', block, { passive: false });\r\n    if (alsoBlockTouch) window.addEventListener('touchmove', block, { passive: false });\r\n\r\n    return () => {\r\n      if (alsoBlockWheel) window.removeEventListener('wheel', block as any);\r\n      if (alsoBlockTouch) window.removeEventListener('touchmove', block as any);\r\n    };\r\n  }, [active, alsoBlockWheel, alsoBlockTouch]);\r\n\r\n  // Body scroll lock (and overscroll containment to help iOS)\r\n  useEffect(() => {\r\n    if (!active || !lockBodyScroll) return;\r\n    const body = document.body;\r\n    prevOverflow.current = body.style.overflow;\r\n    prevOverscroll.current = (body.style as any).overscrollBehavior || null;\r\n\r\n    body.style.overflow = 'hidden';\r\n    (body.style as any).overscrollBehavior = 'contain';\r\n\r\n    return () => {\r\n      body.style.overflow = prevOverflow.current ?? '';\r\n      (body.style as any).overscrollBehavior = prevOverscroll.current ?? '';\r\n    };\r\n  }, [active, lockBodyScroll]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameInputGuards;\r\n","// src/components/rock-escapade/game-viewport-overlay.tsx\r\nimport React, { useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nconst APP_SCOPE_ID = 'efe-portfolio';\r\nconst PORTAL_ID = 'game-viewport-root';\r\n\r\nexport default function GameViewportOverlay({ children }: Props) {\r\n  const mountRef = useRef<HTMLElement | null>(null);\r\n\r\n  if (!mountRef.current && typeof document !== 'undefined') {\r\n    // 1) Find your app scope (so pre-scoped CSS matches)\r\n    const scope = document.getElementById(APP_SCOPE_ID) || document.body;\r\n\r\n    // 2) Create or reuse the portal root inside that scope\r\n    let root = scope.querySelector<HTMLElement>(`#${PORTAL_ID}`);\r\n    if (!root) {\r\n      root = document.createElement('div');\r\n      root.id = PORTAL_ID;\r\n      scope.appendChild(root);\r\n    }\r\n\r\n    mountRef.current = root;\r\n  }\r\n\r\n  if (!mountRef.current) return null;\r\n\r\n  // 3) Portal the in-game UI\r\n  return createPortal(\r\n    <div className=\"game-viewport-layer\" role=\"dialog\" aria-modal=\"true\">\r\n      {children}\r\n    </div>,\r\n    mountRef.current\r\n  );\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","// src/components/rock-escapade/block-g-game-over.tsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport gameOver from '../../svg/gameover.json';\r\nimport highScore from '../../svg/highscore.json';\r\n\r\ntype Props = {\r\n  onRestart?: () => void;\r\n  visibleTrigger?: number | boolean;\r\n  coins: number;\r\n  newHighScore: boolean;\r\n};\r\n\r\nconst BlockGGameOver: React.FC<Props> = ({ onRestart, visibleTrigger, coins, newHighScore }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const handleClick = () => {\r\n    onRestart?.();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  // fade-out -> unmount\r\n  useEffect(() => {\r\n    if (!isFadingOut) return;\r\n    const t = setTimeout(() => setVisible(false), 300);\r\n    return () => clearTimeout(t);\r\n  }, [isFadingOut]);\r\n\r\n  // external trigger to re-show\r\n  useEffect(() => {\r\n    if (visibleTrigger) {\r\n      setVisible(true);\r\n      setIsFadingOut(false);\r\n    }\r\n  }, [visibleTrigger]);\r\n\r\n  // disable background scroll while visible\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    const prevent = (e: Event) => e.preventDefault();\r\n\r\n    window.addEventListener('wheel', prevent, { passive: false });\r\n    window.addEventListener('touchmove', prevent, { passive: false });\r\n    window.addEventListener('keydown', prevent as any, { passive: false });\r\n\r\n    const prev = document.body.style.overflow;\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      window.removeEventListener('wheel', prevent as any);\r\n      window.removeEventListener('touchmove', prevent as any);\r\n      window.removeEventListener('keydown', prevent as any);\r\n      document.body.style.overflow = prev;\r\n    };\r\n  }, [visible]);\r\n\r\n  // lottie\r\n  useEffect(() => {\r\n    if (!lottieRef.current) return;\r\n    const anim = lottie.loadAnimation({\r\n      container: lottieRef.current,\r\n      renderer: 'svg',\r\n      loop: newHighScore ? true : false,\r\n      autoplay: true,\r\n      animationData: newHighScore ? highScore : gameOver,\r\n    });\r\n    return () => anim.destroy();\r\n  }, [newHighScore]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    // OPAQUE, FULL-SCREEN BACKDROP (covers canvas completely)\r\n    <div\r\n      className=\"gameover-overlay\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onClick={handleClick}\r\n      style={{\r\n        position: 'fixed',\r\n        inset: 0,\r\n        width: '100vw',\r\n        height: '100vh',              \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      {/* Keep your existing class for inner layout/typography */}\r\n      <div className=\"block-g-gameover\" style={{ position: 'relative' }}>\r\n        <div ref={lottieRef} className=\"gameover-lottie\" />\r\n        <div className=\"gameover-text-area\">\r\n          <h1\r\n            className=\"gameover-text\"\r\n            style={{ color: newHighScore ? 'rgb(255 230 203)' : 'rgb(222 202 250)' }}\r\n          >\r\n            {newHighScore ? 'New High Score!' : 'Game Over'}\r\n          </h1>\r\n          <div className=\"gameover-coin-count\">\r\n            <h2 style={{ color: 'rgb(255, 205, 55)' }}>{coins} Coins Collected</h2>\r\n          </div>\r\n\r\n          <h4 className=\"gameover-cta\">Click to Play Again</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockGGameOver;\r\n","// src/ssr/logic/game-over-controller.tsx\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport BlockGGameOver from '../../components/rock-escapade/block-g-game-over';\r\nimport { updateHighScore } from '../../components/rock-escapade/updateHighScore';\r\n\r\ntype Props = {\r\n  score: number | null;\r\n  highScore: number;\r\n  onRestart: () => void;\r\n  onHide: () => void;\r\n\r\n  /** Optional: latched \"new high\" flag from BlockGHost. */\r\n  newHighScore?: boolean;\r\n};\r\n\r\nconst GameOverController: React.FC<Props> = ({\r\n  score,\r\n  highScore,\r\n  onRestart,\r\n  onHide,\r\n  newHighScore,\r\n}) => {\r\n  const visible = score != null;\r\n\r\n  // Live comparison used only as a seed when host doesn't pass a latched flag.\r\n  const baseNewHigh = useMemo(\r\n    () => (score ?? -Infinity) > highScore,\r\n    [score, highScore]\r\n  );\r\n\r\n  // Latch for this overlay session when host doesn't provide one.\r\n  const [localLatch, setLocalLatch] = useState<boolean | null>(null);\r\n\r\n  // Reset latch when overlay hides; seed latch on first show (host flag absent).\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setLocalLatch(null);\r\n      return;\r\n    }\r\n    if (localLatch === null && typeof newHighScore !== 'boolean') {\r\n      setLocalLatch(baseNewHigh);\r\n    }\r\n  }, [visible, newHighScore, baseNewHigh, localLatch]);\r\n\r\n  // Final value we display/post: host-provided > local latch > base.\r\n  const effectiveNewHigh =\r\n    typeof newHighScore === 'boolean'\r\n      ? newHighScore\r\n      : (localLatch ?? baseNewHigh);\r\n\r\n  // Prevent duplicate Sanity writes per visible session.\r\n  const submittedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!visible || score == null) {\r\n      submittedRef.current = false;\r\n      return;\r\n    }\r\n    if (effectiveNewHigh && !submittedRef.current) {\r\n      submittedRef.current = true;\r\n      updateHighScore(score).catch((err) => console.error('[HS] update failed:', err));\r\n    }\r\n  }, [visible, score, effectiveNewHigh]);\r\n\r\n  if (!visible || score == null) return null;\r\n\r\n  const handleRestart = () => {\r\n    onRestart();\r\n    onHide();\r\n  };\r\n\r\n  return (\r\n    <BlockGGameOver\r\n      onRestart={handleRestart}\r\n      visibleTrigger={1}\r\n      coins={score}\r\n      newHighScore={effectiveNewHigh}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GameOverController;\r\n","export async function updateHighScore(score: number) {\r\n  try {\r\n    const res = await fetch('/api/highscore', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ score }),\r\n    });\r\n    if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n    const data = await res.json();\r\n    return data.highScore as number;\r\n  } catch (err) {\r\n    console.error('[HS] update failed:', err);\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ExitButton = ({ onExit }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (onExit) onExit();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFadingOut) {\r\n      const timeout = setTimeout(() => {\r\n        setVisible(false);\r\n      }, 300); // Match CSS transition duration\r\n\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [isFadingOut]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"block-g-exit\"\r\n      onClick={handleClick}\r\n      style={{\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease'\r\n    }} ><h4> Exit </h4> </div>\r\n  );\r\n};\r\n\r\nexport default ExitButton;\r\n","import {useEffect, useState} from 'react'\r\nimport client from '../../utils/sanity'\r\n\r\ntype Doc = { _id: string; score: number }\r\n\r\nconst QUERY = `*[_type == \"highScore\"] | order(score desc)[0]{ _id, score }`\r\n\r\nexport const useHighScoreSubscription = () => {\r\n  const [highScore, setHighScore] = useState<number>(0)\r\n\r\n  useEffect(() => {\r\n    // initial fetch\r\n    client.fetch<Doc | null>(QUERY).then((doc) => {\r\n      if (typeof doc?.score === 'number') setHighScore(doc.score)\r\n    })\r\n\r\n    // subscribe to live updates\r\n    const sub = client.listen(QUERY, {}, {includeResult: true, visibility: 'query'})\r\n      .subscribe((ev: any) => {\r\n        const next = ev?.result?.score\r\n        if (typeof next === 'number') setHighScore(next)\r\n      })\r\n\r\n    return () => sub.unsubscribe?.()\r\n  }, [])\r\n\r\n  return highScore\r\n}\r\n"],"names":["_ref","coins","highScore","newHighScore","coinRef","useRef","useEffect","current","anim","lottie","container","renderer","loop","autoplay","animationData","coin","onDomLoaded","_coinRef$current","svg","querySelector","classList","add","segment","totalFrames","loopOnce","playSegments","onComplete","addEventListener","cleanupHandlers","complete","removeEventListener","_cleanupHandlers$comp","call","destroy","_jsxs","className","children","_jsx","ref","style","background","LoadingHub","keyword","lines","minHeight","ariaLabel","progress","cycleMs","animMs","delayMs","lineIndex","setLineIndex","useState","show","setShow","t","setTimeout","clearTimeout","hasMultiple","length","setInterval","i","clearInterval","useMemo","concat","srRef","textContent","Math","round","role","undefined","SCROLL_KEYS","Set","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","extraKeysToBlock","prevOverflow","prevOverscroll","extra","onKey","e","el","tag","tagName","test","isFormField","target","k","key","has","preventDefault","window","capture","passive","join","block","body","document","overflow","overscrollBehavior","_prevOverflow$current","_prevOverscroll$curre","APP_SCOPE_ID","PORTAL_ID","GameViewportOverlay","mountRef","scope","getElementById","root","createElement","id","appendChild","createPortal","useRealMobileViewport","isRealMobile","setIsRealMobile","checkMobile","_window$matchMedia$ma","_window$matchMedia","_window","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","platform","isAndroid","onRestart","visibleTrigger","visible","setVisible","isFadingOut","setIsFadingOut","lottieRef","prevent","prev","gameOver","onClick","handleClick","position","inset","height","display","alignItems","justifyContent","opacity","transition","cursor","color","score","onHide","baseNewHigh","Infinity","localLatch","setLocalLatch","effectiveNewHigh","submittedRef","async","res","fetch","method","headers","JSON","stringify","ok","Error","status","json","err","console","error","updateHighScore","catch","BlockGGameOver","handleRestart","onExit","timeout","QUERY","useHighScoreSubscription","setHighScore","client","then","doc","sub","listen","includeResult","visibility","subscribe","ev","_ev$result","next","result","_sub$unsubscribe","unsubscribe"],"sourceRoot":""}