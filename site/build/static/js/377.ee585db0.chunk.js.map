{"version":3,"file":"static/js/377.ee585db0.chunk.js","mappings":"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","sources":["components/rock-escapade/block-g-onboarding-inner.tsx","ssr/projects/game.enhancer.tsx"],"sourcesContent":["// src/components/rock-escapade/block-g-onboarding-inner.tsx\r\nimport React, { useEffect, useRef } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport onboardingAnimation from '../../svg/coin.json';\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\ntype InnerProps = {\r\n  onClick?: () => void;\r\n  onMount?: () => void;\r\n  onUnmount?: () => void;\r\n  startAtFrame?: number;\r\n  loopFromFrame?: number;\r\n  debug?: boolean;\r\n  /** CTA label once stage is ready */\r\n  label?: string;\r\n  /** When false, we show LoadingHub + \"Loading…\" text instead of the CTA */\r\n  ctaEnabled?: boolean;\r\n  /** Optional per-game loading lines to rotate through */\r\n  loadingLines?: string[];\r\n};\r\n\r\ntype Phase = 'intro' | 'tail';\r\n\r\nconst BlockGOnboardingInner: React.FC<InnerProps> = ({\r\n  onClick,\r\n  onMount,\r\n  onUnmount,\r\n  startAtFrame = 0,\r\n  loopFromFrame = 41,\r\n  debug = false,\r\n  label = 'Click Here to Play!',\r\n  ctaEnabled = false,\r\n  loadingLines = [\r\n    \"Loading engine…\",\r\n    \"Creating game canvas…\",\r\n    \"Configuring frame loop…\",\r\n    \"Setting up input controls…\",\r\n    \"Applying display settings…\",\r\n    \"Initializing game state…\",\r\n    \"Spawning player…\",\r\n    \"Almost ready…\"\r\n  ],\r\n}) => {\r\n  const hostRef = useRef<HTMLDivElement | null>(null);\r\n  const animRef = useRef<ReturnType<typeof lottie.loadAnimation> | null>(null);\r\n  const phaseRef = useRef<Phase>('intro');\r\n  const introDoneRef = useRef(false);\r\n  const absEndRef = useRef<number>(0);\r\n\r\n  // keep callbacks stable for the effect\r\n  const mountRef = useRef(onMount);\r\n  const unmountRef = useRef(onUnmount);\r\n  useEffect(() => { mountRef.current = onMount; }, [onMount]);\r\n  useEffect(() => { unmountRef.current = onUnmount; }, [onUnmount]);\r\n\r\n  const log = (...a: any[]) => debug && console.log('[Coin]', ...a);\r\n\r\n  useEffect(() => {\r\n    mountRef.current?.();\r\n    const el = hostRef.current;\r\n    if (!el) return () => unmountRef.current?.();\r\n\r\n    // clean any prior\r\n    try { animRef.current?.destroy(); } catch {}\r\n    animRef.current = null;\r\n    phaseRef.current = 'intro';\r\n    introDoneRef.current = false;\r\n\r\n    const anim = lottie.loadAnimation({\r\n      container: el,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: onboardingAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid meet',\r\n        progressiveLoad: true,\r\n      },\r\n    });\r\n    animRef.current = anim;\r\n\r\n    const getAbsEnd = () => {\r\n      const frames = Math.max(1, Math.floor((anim as any).getDuration?.(true) ?? anim.totalFrames ?? 1));\r\n      return frames - 1;\r\n    };\r\n\r\n    const playIntroOnce = () => {\r\n      const absEnd = absEndRef.current;\r\n      const s = Math.max(0, Math.min(startAtFrame, absEnd));\r\n      log('intro start', { startAtFrame: s, absEnd });\r\n      anim.goToAndStop(s, true);\r\n      anim.playSegments([s, absEnd], true);\r\n    };\r\n\r\n    const startTailLoop = () => {\r\n      if (phaseRef.current === 'tail') return;\r\n      phaseRef.current = 'tail';\r\n      const absEnd = absEndRef.current;\r\n      const tailStart = Math.max(0, Math.min(loopFromFrame, absEnd));\r\n      anim.removeEventListener('complete', onCompleteIntro);\r\n      anim.loop = true;\r\n      anim.playSegments([tailStart, absEnd], true);\r\n      log('→ tail loop', { tailStart, absEnd });\r\n    };\r\n\r\n    const onDOMLoaded = () => {\r\n      absEndRef.current = getAbsEnd();\r\n      log('DOMLoaded', { absEnd: absEndRef.current });\r\n      playIntroOnce();\r\n    };\r\n\r\n    const onCompleteIntro = () => {\r\n      if (!introDoneRef.current) {\r\n        introDoneRef.current = true;\r\n        log('intro complete', { frame: Math.floor(anim.currentFrame || 0) });\r\n        startTailLoop();\r\n      }\r\n    };\r\n\r\n    const onLoopComplete = () => {\r\n      if (phaseRef.current === 'tail') {\r\n        log('loopComplete (tail)', { frame: Math.floor(anim.currentFrame || 0) });\r\n      }\r\n    };\r\n\r\n    anim.addEventListener('DOMLoaded', onDOMLoaded);\r\n    anim.addEventListener('complete', onCompleteIntro);\r\n    anim.addEventListener('loopComplete', onLoopComplete);\r\n\r\n    return () => {\r\n      log('destroy');\r\n      try {\r\n        anim.removeEventListener('DOMLoaded', onDOMLoaded);\r\n        anim.removeEventListener('complete', onCompleteIntro);\r\n        anim.removeEventListener('loopComplete', onLoopComplete);\r\n        anim.destroy();\r\n      } catch {}\r\n      animRef.current = null;\r\n      unmountRef.current?.();\r\n    };\r\n    // Only re-init when these truly need to change:\r\n  }, [startAtFrame, loopFromFrame, debug]);\r\n\r\n  return (\r\n    <>\r\n      {/* Coin lottie host (clickable only when the enhancer enables pointer events) */}\r\n      <div ref={hostRef} className=\"coin\" onClick={onClick} style={{ pointerEvents: 'auto' }} />\r\n\r\n      {/* Not ready → show LoadingHub + classic \"Loading…\" headline */}\r\n      {!ctaEnabled ? (\r\n        <>\r\n          <h1 className=\"onboarding-text loading-text\" style={{ pointerEvents: 'none' }}>\r\n            Loading Game…\r\n          </h1>\r\n          <LoadingHub\r\n            className=\"loading-hub--game loading-hub--left\"\r\n            keyword=\"game\"\r\n            minHeight={72}\r\n            lines={loadingLines}\r\n            ariaLabel=\"Loading game\"\r\n          />\r\n        </>\r\n      ) : (\r\n        // Ready → show CTA\r\n        <h1 className=\"onboarding-text\" onClick={onClick} style={{ pointerEvents: 'auto' }}>\r\n          {label}\r\n        </h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlockGOnboardingInner;\r\n","// src/ssr/projects/game.enhancer.tsx\r\nimport React, { useEffect, useMemo, useRef, useState, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport lottie from '../../utils/load-lottie';\r\n\r\nimport BlockGOnboarding from '../../components/rock-escapade/block-g-onboarding-inner';\r\nimport ExitButton from '../../components/rock-escapade/block-g-exit';\r\nimport CoinCounter from '../../components/rock-escapade/block-g-coin-counter';\r\nimport GameOverController from '../logic/game-over-controller';\r\n\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport LazyViewMount from '../../utils/content-utility/lazy-view-mount';\r\nimport { gameLoaders } from '../../utils/content-utility/component-loader';\r\nimport { useHighScoreSubscription } from '../../components/rock-escapade/useHighScoreSubscription';\r\nimport GameInputGuards from '../logic/game-input-guards';\r\n\r\nimport desktopOnboarding from '../../svg/desktop-onboarding.json';\r\nimport mobileOnboarding from '../../svg/mobile-onboarding.json';\r\n\r\n// ★ new\r\nimport GameViewportOverlay from '../../components/rock-escapade/game-viewport-overlay';\r\n\r\nconst GAME_MODE_CLASS = 'game-mode-active';\r\nconst activateGameMode = () => document.body.classList.add(GAME_MODE_CLASS);\r\nconst deactivateGameMode = () => document.body.classList.remove(GAME_MODE_CLASS);\r\n\r\nfunction scheduleIdle(cb: () => void, timeout = 2000) {\r\n  const w = window as any;\r\n  if (typeof w.requestIdleCallback === 'function') {\r\n    const id = w.requestIdleCallback(cb, { timeout });\r\n    return () => w.cancelIdleCallback?.(id);\r\n  }\r\n  const t = window.setTimeout(cb, timeout);\r\n  return () => window.clearTimeout(t);\r\n}\r\n\r\nconst GameEnhancer: React.FC = () => {\r\n  const [sec, setSec] = useState<HTMLElement | null>(null);\r\n  const [onboardingEl, setOnboardingEl] = useState<HTMLElement | null>(null);\r\n  const [rootEl, setRootEl] = useState<HTMLElement | null>(null);\r\n  const [shouldMount, setShouldMount] = useState(false);\r\n  const [stageReady, setStageReady] = useState(false);\r\n\r\n  const firstHydrationUsedRef = useRef(false);\r\n  const firstVisibilityCallbackSkippedRef = useRef(false);\r\n  const wasVisibleRef = useRef(false);\r\n\r\n  const [onboardingReset, setOnboardingReset] = useState(0);\r\n  const reapplyOnboarding = useCallback(() => setOnboardingReset(v => v + 1), []);\r\n\r\n  const stableStartAtForThisMount = useMemo(\r\n    () => (firstHydrationUsedRef.current ? 0 : 30),\r\n    [onboardingReset]\r\n  );\r\n  const handleInnerMount = useCallback(() => { firstHydrationUsedRef.current = true; }, []);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('block-game') as HTMLElement | null;\r\n    if (!container) return;\r\n    setSec(container);\r\n\r\n    const shell = container.querySelector('[data-ssr-shell=\"block-game\"]') as HTMLElement | null;\r\n    if (!shell) return;\r\n\r\n    let host = shell.querySelector('.block-g-onboarding') as HTMLElement | null;\r\n    if (!host) {\r\n      host = shell;\r\n      host.classList.add('block-g-onboarding', 'tooltip-block-g');\r\n      host.setAttribute('aria-live', 'polite');\r\n      host.style.display ||= 'flex';\r\n      host.style.alignItems ||= 'center';\r\n    }\r\n\r\n    host.replaceChildren();\r\n    setOnboardingEl(host);\r\n    setRootEl(shell);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!sec) return;\r\n    const cancelIdle = scheduleIdle(() => setShouldMount(true), 2000);\r\n    const io = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting) {\r\n        setShouldMount(true);\r\n        cancelIdle();\r\n        io.disconnect();\r\n      }\r\n    }, { threshold: [0, 0.3] });\r\n    io.observe(sec);\r\n    return () => { io.disconnect(); cancelIdle(); };\r\n  }, [sec]);\r\n\r\n  useEffect(() => {\r\n    if (!sec) return;\r\n    const io = new IntersectionObserver(([entry]) => {\r\n      const nowVisible = !!entry.isIntersecting;\r\n      if (!firstVisibilityCallbackSkippedRef.current) {\r\n        firstVisibilityCallbackSkippedRef.current = true;\r\n        wasVisibleRef.current = nowVisible;\r\n        return;\r\n      }\r\n      const wasVisible = wasVisibleRef.current;\r\n      wasVisibleRef.current = nowVisible;\r\n      if (nowVisible && !wasVisible && !sec.classList.contains('ingame')) {\r\n        setOnboardingReset(v => v + 1);\r\n      }\r\n    }, { threshold: 0.01 });\r\n    io.observe(sec);\r\n    return () => io.disconnect();\r\n  }, [sec]);\r\n\r\n  if (!sec || !onboardingEl || !rootEl || !shouldMount) return null;\r\n\r\n  return (\r\n    <>\r\n      {createPortal(\r\n        <OnboardingPortal\r\n          reset={onboardingReset}\r\n          startAtFrame={stableStartAtForThisMount}\r\n          onInnerMount={handleInnerMount}\r\n          label={stageReady ? 'Click Here to Play!' : 'Loading Game…'}\r\n          ctaEnabled={stageReady}\r\n        />,\r\n        onboardingEl\r\n      )}\r\n      {createPortal(\r\n        <GameStage\r\n          container={sec}\r\n          onboardingEl={onboardingEl}\r\n          reapplyOnboarding={reapplyOnboarding}\r\n          isStageReady={stageReady}\r\n          onStageReady={setStageReady}\r\n        />,\r\n        rootEl\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype OnboardingPortalProps = {\r\n  reset: number;\r\n  startAtFrame: number;\r\n  onInnerMount: () => void;\r\n  label: string;\r\n  ctaEnabled: boolean;\r\n  loadingLines?: string[];\r\n};\r\n\r\nconst OnboardingPortal: React.FC<OnboardingPortalProps> = ({\r\n  reset, startAtFrame, onInnerMount, label, ctaEnabled, loadingLines\r\n}) => (\r\n  <BlockGOnboarding\r\n    key={reset}\r\n    startAtFrame={startAtFrame}\r\n    onMount={onInnerMount}\r\n    label={label}\r\n    ctaEnabled={ctaEnabled}\r\n    loadingLines={loadingLines}\r\n  />\r\n);\r\n\r\nexport default GameEnhancer;\r\n\r\n/* ---------- Stage (mirrors client BlockGHost + portal overlay) ---------- */\r\nconst GameStage: React.FC<{\r\n  container: HTMLElement;\r\n  onboardingEl: HTMLElement;\r\n  reapplyOnboarding: () => void;\r\n  isStageReady: boolean;\r\n  onStageReady: (ready: boolean) => void;\r\n}> = ({ container, onboardingEl, reapplyOnboarding, isStageReady, onStageReady }) => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  const [started, setStarted] = useState(false);\r\n  const [coins, setCoins] = useState(0);\r\n  const [finalScore, setFinalScore] = useState<number | null>(null);\r\n\r\n  const remoteHighScore = useHighScoreSubscription();\r\n  const stableHigh = typeof remoteHighScore === 'number' ? remoteHighScore : 0;\r\n  const displayHigh = (finalScore == null ? coins : finalScore) > stableHigh\r\n    ? (finalScore == null ? coins : finalScore)\r\n    : stableHigh;\r\n  const beatingHighNow = finalScore == null && coins > stableHigh;\r\n\r\n  const [countdownPhase, setCountdownPhase] = useState<null | 'lottie' | 'begin'>(null);\r\n  const [showOverlayBg, setShowOverlayBg] = useState(false);\r\n  const [shouldRenderOverlayBg, setShouldRenderOverlayBg] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n  const restartApi = useRef<{ restart: () => void } | null>(null);\r\n\r\n  const onStart = useCallback(() => {\r\n    if (!isStageReady) return;\r\n    void gameLoaders.game();\r\n    container.classList.add('ingame');\r\n    activateGameMode();\r\n    setStarted(true);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    setCountdownPhase('lottie');\r\n    onboardingEl.style.transition = 'opacity 180ms ease';\r\n    onboardingEl.style.opacity = '0';\r\n    window.setTimeout(() => { onboardingEl.style.display = 'none'; }, 180);\r\n  }, [container, onboardingEl, isStageReady]);\r\n\r\n  // enable/disable CTA pointers\r\n  useEffect(() => {\r\n    const CLICK_TARGETS = '.coin, .onboarding-text, [data-start-hit]';\r\n    const armTargets = () => {\r\n      onboardingEl.querySelectorAll(CLICK_TARGETS).forEach((el) => {\r\n        const node = el as HTMLElement;\r\n        node.style.pointerEvents = isStageReady ? 'auto' : 'none';\r\n        node.style.cursor = isStageReady ? 'pointer' : 'default';\r\n        if (!node.hasAttribute('role')) node.setAttribute('role', 'button');\r\n        if (node.tabIndex < 0) node.tabIndex = 0;\r\n      });\r\n      onboardingEl.setAttribute('aria-busy', String(!isStageReady));\r\n    };\r\n    armTargets();\r\n    const mo = new MutationObserver(armTargets);\r\n    mo.observe(onboardingEl, { childList: true, subtree: true });\r\n\r\n    const onClick = (ev: Event) => {\r\n      if (!isStageReady) return;\r\n      const t = ev.target as HTMLElement | null;\r\n      if (t && t.closest(CLICK_TARGETS)) onStart();\r\n    };\r\n    const onKeyDown = (ev: KeyboardEvent) => {\r\n      if (!isStageReady) return;\r\n      if (ev.key === 'Enter' || ev.key === ' ') {\r\n        const t = ev.target as HTMLElement | null;\r\n        if (t && t.closest(CLICK_TARGETS)) {\r\n          ev.preventDefault();\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n\r\n    onboardingEl.addEventListener('click', onClick as EventListener, { passive: true });\r\n    onboardingEl.addEventListener('keydown', onKeyDown as EventListener);\r\n    return () => {\r\n      mo.disconnect();\r\n      onboardingEl.removeEventListener('click', onClick as EventListener);\r\n      onboardingEl.removeEventListener('keydown', onKeyDown as EventListener);\r\n    };\r\n  }, [onboardingEl, onStart, isStageReady]);\r\n\r\n  // countdown visuals\r\n  useEffect(() => {\r\n    if (countdownPhase !== 'lottie' || !lottieRef.current) return;\r\n    let anim: any; let mounted = true;\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: lottieRef.current!,\r\n        renderer: 'svg',\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: isRealMobile ? mobileOnboarding : desktopOnboarding,\r\n      });\r\n      if (!mounted || !anim) return;\r\n      const onComplete = () => setCountdownPhase('begin');\r\n      anim.addEventListener('complete', onComplete);\r\n      return () => anim?.removeEventListener?.('complete', onComplete);\r\n    })();\r\n    return () => { mounted = false; anim?.destroy?.(); };\r\n  }, [countdownPhase, isRealMobile]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'begin') {\r\n      const t = setTimeout(() => setCountdownPhase(null), 1000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'lottie') {\r\n      setShowOverlayBg(true);\r\n      setShouldRenderOverlayBg(true);\r\n    } else if (countdownPhase === null) {\r\n      setShowOverlayBg(false);\r\n      const t = setTimeout(() => setShouldRenderOverlayBg(false), 400);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  const handleReady = (api: { restart: () => void }) => {\r\n    restartApi.current = api;\r\n    onStageReady(true);\r\n  };\r\n  useEffect(() => () => onStageReady(false), [onStageReady]);\r\n\r\n  const handleRestart = () => {\r\n    container.classList.add('ingame');\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    restartApi.current?.restart();\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setStarted(false);\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    deactivateGameMode();\r\n    container.classList.remove('ingame');\r\n    onboardingEl.style.display = '';\r\n    reapplyOnboarding();\r\n    requestAnimationFrame(() => { onboardingEl.style.opacity = '1'; });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Keep a WARM-UP instance under the section until start so onReady can flip CTA */}\r\n      {!started && (\r\n        <LazyViewMount\r\n          load={() => import('../../components/rock-escapade/game-canvas')}\r\n          fallback={null}\r\n          preloadOnIdle\r\n          preloadIdleTimeout={2000}\r\n          preloadOnFirstIO\r\n          rootMargin=\"0px\"\r\n          placeholderMinHeight={360}\r\n          componentProps={{\r\n            onReady: handleReady,\r\n            onCoinsChange: (n: number) => setCoins(n),\r\n            onGameOver: (finalCoins: number) => setFinalScore(finalCoins),\r\n            highScore: stableHigh,\r\n            pauseWhenHidden: true,\r\n            demoMode: true, // preview only before game is started\r\n            overlayActive: false,\r\n            allowSpawns: true,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* When playing: portal everything under #efe-portfolio so the postconfig css prefixer still works with the portal */}\r\n      {started && (\r\n        <GameViewportOverlay>\r\n          <GameInputGuards active lockBodyScroll alsoBlockWheel alsoBlockTouch allowWhenTyping />\r\n          <ExitButton onExit={handleExit} />\r\n          <CoinCounter coins={coins} highScore={displayHigh} newHighScore={beatingHighNow} />\r\n\r\n          {shouldRenderOverlayBg && (\r\n            <div className={`countdown-bg-overlay ${!showOverlayBg ? 'hide' : ''}`} style={{ pointerEvents: 'none' }} />\r\n          )}\r\n          {(countdownPhase === 'lottie' || countdownPhase === 'begin') && (\r\n            <div ref={lottieRef} id=\"lottie-onboarding\" className=\"countdown-lottie\" style={{ pointerEvents: 'none' }} />\r\n          )}\r\n          <GameOverController\r\n            score={finalScore}\r\n            highScore={stableHigh}\r\n            onRestart={handleRestart}\r\n            onHide={() => setFinalScore(null)}\r\n          />\r\n\r\n          {/* Real gameplay instance pinned to viewport */}\r\n          <LazyViewMount\r\n            load={() => import('../../components/rock-escapade/game-canvas')}\r\n            fallback={null}\r\n            mountMode=\"io\"\r\n            observeTargetId=\"game-viewport-root\"\r\n            rootMargin=\"0px\"\r\n            enterThreshold={0.01}\r\n            exitThreshold={0}\r\n            unmountDelayMs={150}\r\n            preloadOnIdle\r\n            preloadIdleTimeout={2000}\r\n            preloadOnFirstIO\r\n            placeholderMinHeight={360}\r\n            componentProps={{\r\n              onReady: handleReady,\r\n              onCoinsChange: (n: number) => setCoins(n),\r\n              onGameOver: (finalCoins: number) => setFinalScore(finalCoins),\r\n              highScore: stableHigh,\r\n              pauseWhenHidden: true,\r\n              demoMode: false,\r\n              overlayActive: countdownPhase === 'lottie' || countdownPhase === 'begin',\r\n              allowSpawns: countdownPhase === 'begin' || countdownPhase === null,\r\n            }}\r\n          />\r\n        </GameViewportOverlay>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":["_ref","onClick","onMount","onUnmount","startAtFrame","loopFromFrame","debug","label","ctaEnabled","loadingLines","hostRef","useRef","animRef","phaseRef","introDoneRef","absEndRef","mountRef","unmountRef","useEffect","current","log","_len","arguments","length","a","Array","_key","console","_mountRef$current","call","el","_unmountRef$current","_animRef$current","destroy","_unused","anim","lottie","container","renderer","loop","autoplay","animationData","onboardingAnimation","rendererSettings","preserveAspectRatio","progressiveLoad","onDOMLoaded","getAbsEnd","_ref2","_getDuration","_getDuration2","_ref3","Math","max","floor","getDuration","totalFrames","absEnd","playIntroOnce","s","min","goToAndStop","playSegments","onCompleteIntro","frame","currentFrame","startTailLoop","tailStart","removeEventListener","onLoopComplete","addEventListener","_unmountRef$current2","_unused2","_jsxs","_Fragment","children","_jsx","ref","className","style","pointerEvents","LoadingHub","keyword","minHeight","lines","ariaLabel","GAME_MODE_CLASS","OnboardingPortal","reset","onInnerMount","BlockGOnboarding","GameEnhancer","sec","setSec","useState","onboardingEl","setOnboardingEl","rootEl","setRootEl","shouldMount","setShouldMount","stageReady","setStageReady","firstHydrationUsedRef","firstVisibilityCallbackSkippedRef","wasVisibleRef","onboardingReset","setOnboardingReset","reapplyOnboarding","useCallback","v","stableStartAtForThisMount","useMemo","handleInnerMount","document","getElementById","shell","querySelector","host","_host$style","_host$style2","classList","add","setAttribute","display","alignItems","replaceChildren","cancelIdle","cb","timeout","undefined","w","window","requestIdleCallback","id","_w$cancelIdleCallback","cancelIdleCallback","t","setTimeout","clearTimeout","scheduleIdle","io","IntersectionObserver","entry","isIntersecting","disconnect","threshold","observe","nowVisible","wasVisible","contains","createPortal","GameStage","isStageReady","onStageReady","_ref4","isRealMobile","useRealMobileViewport","started","setStarted","coins","setCoins","finalScore","setFinalScore","remoteHighScore","useHighScoreSubscription","stableHigh","displayHigh","beatingHighNow","countdownPhase","setCountdownPhase","showOverlayBg","setShowOverlayBg","shouldRenderOverlayBg","setShouldRenderOverlayBg","lottieRef","restartApi","onStart","gameLoaders","game","body","transition","opacity","CLICK_TARGETS","armTargets","querySelectorAll","forEach","node","cursor","hasAttribute","tabIndex","String","mo","MutationObserver","childList","subtree","ev","target","closest","onKeyDown","key","preventDefault","passive","mounted","loadAnimation","mobileOnboarding","desktopOnboarding","onComplete","_anim2","_anim2$destroy","handleReady","api","LazyViewMount","load","fallback","preloadOnIdle","preloadIdleTimeout","preloadOnFirstIO","rootMargin","placeholderMinHeight","componentProps","onReady","onCoinsChange","n","onGameOver","finalCoins","highScore","pauseWhenHidden","demoMode","overlayActive","allowSpawns","GameViewportOverlay","GameInputGuards","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","ExitButton","onExit","handleExit","remove","requestAnimationFrame","CoinCounter","newHighScore","concat","GameOverController","score","onRestart","handleRestart","_restartApi$current","restart","onHide","mountMode","observeTargetId","enterThreshold","exitThreshold","unmountDelayMs"],"sourceRoot":""}