{"version":3,"file":"static/js/592.21e1ec4a.chunk.js","mappings":"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","sources":["components/block-type-1/ice-cream-scoop.tsx","utils/media-providers/image-upgrade-manager.ts","utils/media-providers/media-loader.tsx","utils/media-providers/video-observer.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getProjectData } from '../../utils/get-project-data';\r\nimport SplitDragHandler from '../../utils/split+drag/split-controller';\r\nimport PannableViewport from '../../utils/split+drag/pannable-object-position';\r\nimport MediaLoader from '../../utils/media-providers/media-loader';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\nimport '../../styles/block-type-1.css';\r\n\r\ntype VideoSet = { webmUrl?: string; mp4Url?: string; poster?: any };\r\ntype MediaSlot = { alt?: string; image?: any; video?: VideoSet };\r\ntype IceData = { mediaOne: MediaSlot; mediaTwo: MediaSlot };\r\n\r\nconst MIN_PORTRAIT_SPLIT = 16;\r\nconst EPS = 0.25;\r\n\r\nexport default function IceCreamScoop() {\r\n  const [data, setData] = useState<IceData | null>(null);\r\n  const [split, setSplit] = useState(() => (window.innerWidth < 1024 ? 45 : 50));\r\n  const [isPortrait, setIsPortrait] = useState(window.innerHeight > window.innerWidth);\r\n\r\n  useTooltipInit();\r\n\r\n  useEffect(() => {\r\n    getProjectData<IceData>('ice-scoop').then((d) => setData(d));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => setIsPortrait(window.innerHeight > window.innerWidth);\r\n    window.addEventListener('resize', onResize, { passive: true });\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  if (!data) return null;\r\n\r\n  const media2IsVideo = Boolean(data.mediaTwo?.video?.webmUrl || data.mediaTwo?.video?.mp4Url);\r\n\r\n  const TOP = MIN_PORTRAIT_SPLIT;\r\n  const BOTTOM = 100 - MIN_PORTRAIT_SPLIT;\r\n  const nearTop = isPortrait && split <= TOP + EPS;\r\n  const nearBottom = isPortrait && split >= BOTTOM - EPS;\r\n\r\n  return (\r\n    <section className=\"block-type-1\" id=\"no-ssr\" style={{ position: 'relative' }}>\r\n      {/* LEFT / TOP */}\r\n      <div\r\n        className=\"media-content-1\"\r\n        style={\r\n          isPortrait\r\n            ? nearTop\r\n              ? { height: '0%', width: '100%', position: 'absolute', top: 0, transition: 'height 0.1s ease' }\r\n              : nearBottom\r\n              ? { height: '100%', width: '100%', position: 'absolute', top: 0, transition: 'height 0.1s ease' }\r\n              : { height: `${split}%`, width: '100%', position: 'absolute', top: 0 }\r\n            : { width: `${split}%`, height: '100%', position: 'absolute', left: 0 }\r\n        }\r\n      >\r\n        <PannableViewport sensitivity={2}>\r\n          <MediaLoader\r\n            type=\"image\"\r\n            src={data.mediaOne.image}\r\n            alt={data.mediaOne.alt || 'Ice Cream Scoop media'}\r\n            id=\"icecream-media-1\"\r\n            className=\"media-item-1 tooltip-ice-scoop\"\r\n            objectPosition=\"left center\"\r\n            style={{ width: '100%', height: '100%' }}\r\n          />\r\n        </PannableViewport>\r\n      </div>\r\n\r\n      <SplitDragHandler split={split} setSplit={setSplit} />\r\n\r\n      {/* RIGHT / BOTTOM */}\r\n      <div\r\n        className=\"media-content-2\"\r\n        style={\r\n          isPortrait\r\n            ? nearTop\r\n              ? {\r\n                  height: '100%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: '0%',\r\n                  transition: 'height 0.1s ease, top 0.1s ease',\r\n                }\r\n              : nearBottom\r\n              ? {\r\n                  height: '0%',\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: '100%',\r\n                  transition: 'height 0.1s ease, top 0.1s ease',\r\n                }\r\n              : {\r\n                  height: `${100 - split}%`,\r\n                  width: '100%',\r\n                  position: 'absolute',\r\n                  top: `${split}%`,\r\n                }\r\n            : {\r\n                width: `${100 - split}%`,\r\n                height: '100%',\r\n                position: 'absolute',\r\n                left: `${split}%`,\r\n              }\r\n        }\r\n      >\r\n        <PannableViewport>\r\n          <MediaLoader\r\n            type={media2IsVideo ? 'video' : 'image'}\r\n            src={media2IsVideo ? (data.mediaTwo.video as VideoSet) : (data.mediaTwo.image as any)}\r\n            alt={data.mediaTwo.alt || 'Ice Cream Scoop media'}\r\n            id=\"icecream-media-2\"\r\n            className=\"media-item-2 tooltip-ice-scoop\"\r\n            objectPosition=\"center bottom\"\r\n            style={{ width: '100%', height: '100%' }}\r\n          />\r\n        </PannableViewport>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","// src/utils/image-upgrade-manager.ts\r\nlet totalImages = 0;\r\nlet loadedLowRes = 0;\r\nlet listeners: (() => void)[] = [];\r\nlet upgradeTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const setUpgradeTimeout = (ms: number = 5000) => {\r\n  if (upgradeTimeout) return;\r\n  upgradeTimeout = setTimeout(() => {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }, ms);\r\n};\r\n\r\nexport const registerImage = () => {\r\n  totalImages++;\r\n  setUpgradeTimeout();\r\n};\r\n\r\nexport const notifyLowResLoaded = () => {\r\n  loadedLowRes++;\r\n  if (loadedLowRes >= totalImages) {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }\r\n};\r\n\r\nexport const onAllLowResLoaded = (callback: () => void) => {\r\n  listeners.push(callback);\r\n};\r\n","// src/utils/media-providers/media-loader.tsx\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { useVideoVisibility } from './video-observer';\r\nimport LoadingScreen from '../loading/loading';\r\nimport { SanityImageSource } from '@sanity/image-url/lib/types/types';\r\nimport {\r\n  getLowResImageUrl,\r\n  getMediumImageUrl,\r\n  getHighQualityImageUrl,\r\n  urlFor,\r\n} from './image-builder';\r\nimport {\r\n  registerImage,\r\n  notifyLowResLoaded,\r\n  onAllLowResLoaded,\r\n} from './image-upgrade-manager';\r\n\r\nfunction useNearViewport<T extends Element>(\r\n  ref: React.RefObject<T>,\r\n  { rootMargin = '900px 0px', threshold = 0, once = true } = {}\r\n) {\r\n  const [near, setNear] = useState(false);\r\n  useEffect(() => {\r\n    if (!ref.current || near) return;\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries.some((e) => e.isIntersecting)) {\r\n          setNear(true);\r\n          if (once) io.disconnect();\r\n        }\r\n      },\r\n      { rootMargin, threshold }\r\n    );\r\n    io.observe(ref.current);\r\n    return () => io.disconnect();\r\n  }, [ref, near, rootMargin, threshold, once]);\r\n  return near;\r\n}\r\n\r\ntype VideoSetSrc = {\r\n  webmUrl?: string;\r\n  mp4Url?: string;\r\n  poster?: SanityImageSource | string;\r\n};\r\n\r\ntype MediaLoaderProps = {\r\n  type: 'image' | 'video';\r\n  src: string | SanityImageSource | VideoSetSrc | null | undefined;\r\n  alt?: string;\r\n  id?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  objectPosition?: string;\r\n  loop?: boolean;\r\n  muted?: boolean;\r\n  playsInline?: boolean;\r\n  preload?: 'auto' | 'metadata' | 'none';\r\n  enableVisibilityControl?: boolean;\r\n  priority?: boolean;\r\n  controls?: boolean;\r\n};\r\n\r\nconst MediaLoader = ({\r\n  type,\r\n  src,\r\n  alt = '',\r\n  id,\r\n  className = '',\r\n  style = {},\r\n  objectPosition = 'center center',\r\n  loop = true,\r\n  muted = true,\r\n  playsInline = true,\r\n  preload = 'metadata',\r\n  enableVisibilityControl = true,\r\n  priority = false,\r\n  controls = false,\r\n}: MediaLoaderProps) => {\r\n  const isSSR = typeof window === 'undefined';\r\n\r\n  // Start as loaded in SSR to avoid fade-in on hydration\r\n  const [loaded, setLoaded] = useState(isSSR);\r\n  const [showMedium, setShowMedium] = useState(false);\r\n  const [showHigh, setShowHigh] = useState(false);\r\n\r\n  // Native poster control (no overlay)\r\n  const [posterRemoved, setPosterRemoved] = useState(false);\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const isNear = useNearViewport(containerRef);\r\n  const shouldStart = priority || isNear;\r\n\r\n  // If already cached, skip fade-in\r\n  useEffect(() => {\r\n    if (type === 'image' && imgRef.current?.complete) setLoaded(true);\r\n    if (type === 'video' && videoRef.current?.readyState >= 2) setLoaded(true);\r\n  }, [type]);\r\n\r\n  // IMAGE progressive upgrade\r\n  useEffect(() => {\r\n    if (type !== 'image') return;\r\n    registerImage();\r\n\r\n    const t1 = setTimeout(() => setShowMedium(true), shouldStart ? 0 : 2000);\r\n    if (shouldStart) setShowMedium(true);\r\n\r\n    const off = () => setTimeout(() => setShowHigh(true), 300);\r\n    onAllLowResLoaded(off);\r\n    const t2 = setTimeout(() => setShowHigh(true), 5000);\r\n\r\n    return () => {\r\n      clearTimeout(t1);\r\n      clearTimeout(t2);\r\n    };\r\n  }, [type, shouldStart]);\r\n\r\n  const onMediaLoaded = () => {\r\n    setLoaded(true);\r\n    if (type === 'image') notifyLowResLoaded();\r\n    if (id) {\r\n      const event = new CustomEvent('mediaReady', { detail: { id } });\r\n      window.dispatchEvent(event);\r\n    }\r\n  };\r\n\r\n  // ----- Video source parsing + poster URL -----\r\n  const isVideoSetObj =\r\n    typeof src === 'object' &&\r\n    src !== null &&\r\n    !('asset' in (src as any)) &&\r\n    (('webmUrl' in (src as any)) || ('mp4Url' in (src as any)));\r\n\r\n  const vs = (isVideoSetObj ? (src as VideoSetSrc) : undefined);\r\n  const legacyVideoUrl = typeof src === 'string' ? src : undefined;\r\n\r\n  const posterUrl =\r\n    vs?.poster\r\n      ? (typeof vs.poster === 'string'\r\n          ? vs.poster\r\n          : urlFor(vs.poster).width(1200).quality(80).auto('format').url())\r\n      : undefined;\r\n\r\n  // ✅ Keep native poster visible until the first *painted* frame, then remove it.\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n\r\n    const hidePoster = () => {\r\n      setPosterRemoved(true);\r\n      v.removeAttribute('poster');\r\n    };\r\n\r\n    const onPlay = () => {\r\n      const anyV = v as any;\r\n      if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n        anyV.requestVideoFrameCallback(() => hidePoster());\r\n      } else {\r\n        const onTime = () => {\r\n          if (v.currentTime > 0 && v.readyState >= 2) {\r\n            v.removeEventListener('timeupdate', onTime);\r\n            hidePoster();\r\n          }\r\n        };\r\n        v.addEventListener('timeupdate', onTime);\r\n        const timer = setTimeout(() => {\r\n          v.removeEventListener('timeupdate', onTime);\r\n          hidePoster();\r\n        }, 1200);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    };\r\n\r\n    v.addEventListener('play', onPlay, { once: true });\r\n    return () => v.removeEventListener('play', onPlay);\r\n  }, [type]);\r\n\r\n  // VIDEO visibility/autoplay (your existing hook takes care of play/pause)\r\n  useVideoVisibility(\r\n    videoRef,\r\n    containerRef,\r\n    type === 'video' && enableVisibilityControl ? 0.35 : (undefined as unknown as number)\r\n  );\r\n\r\n  // ─────────────────────────────────────────────────────────────\r\n  // VIDEO RELIABILITY PATCHES\r\n  // - Kick load when near\r\n  // - Retry once, then promote preload to 'auto'\r\n  // - Decode nudge for iOS Safari after loadedmetadata\r\n  // - Early \"loaded\" on loadedmetadata to remove spinner sooner\r\n  // - Gentle play kick when data is ready (muted+inline)\r\n  // ─────────────────────────────────────────────────────────────\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n\r\n    let retryTimer: number | null = null;\r\n    let promoteTimer: number | null = null;\r\n\r\n    const clearTimers = () => {\r\n      if (retryTimer) { window.clearTimeout(retryTimer); retryTimer = null; }\r\n      if (promoteTimer) { window.clearTimeout(promoteTimer); promoteTimer = null; }\r\n    };\r\n\r\n    // If we’re near (or priority), ensure the browser actually fetches metadata\r\n    const kickLoad = () => {\r\n      try {\r\n        // set the DOM property; the attribute React renders can be different and that's OK\r\n        v.preload = preload ?? 'metadata';\r\n        if (v.preload !== 'none') v.load(); // important: actually trigger the fetch\r\n      } catch {}\r\n    };\r\n\r\n    const nudgeDecode = () => {\r\n      // iOS Safari sometimes stalls after metadata; a tiny seek wakes decode\r\n      try {\r\n        if (v.readyState < 2) return;\r\n        const t = v.currentTime;\r\n        v.currentTime = t > 0 ? t : 0.001;\r\n      } catch {}\r\n    };\r\n\r\n    const tryPlay = async () => {\r\n      if (!enableVisibilityControl) return;\r\n      try {\r\n        if (v.muted && v.playsInline && v.paused && v.readyState >= 2) {\r\n          await v.play().catch(() => {});\r\n        }\r\n      } catch {}\r\n    };\r\n\r\n    const onLoadedMeta = () => {\r\n      // spinner can go away on metadata (poster is still covering until first frame)\r\n      setLoaded(true);\r\n      nudgeDecode();\r\n    };\r\n\r\n    const onLoadedData = () => { setLoaded(true); void tryPlay(); };\r\n    const onCanPlay = () => { setLoaded(true); void tryPlay(); };\r\n\r\n    if (shouldStart) {\r\n      kickLoad();\r\n\r\n      // If nothing after ~2.5s, try load() once more\r\n      retryTimer = window.setTimeout(() => {\r\n        if (v.readyState < 2) kickLoad();\r\n      }, 2500);\r\n\r\n      // Still nothing after ~5s? Promote preload to 'auto'\r\n      promoteTimer = window.setTimeout(() => {\r\n        if (v.readyState < 2) {\r\n          try { v.preload = 'auto'; v.load(); } catch {}\r\n        }\r\n      }, 5000);\r\n    }\r\n\r\n    v.addEventListener('loadedmetadata', onLoadedMeta);\r\n    v.addEventListener('loadeddata', onLoadedData);\r\n    v.addEventListener('canplay', onCanPlay);\r\n\r\n    // Optional: diagnostics for flaky networks\r\n    const onError = (e: Event) => console.warn('Video error', e);\r\n    const onStalled = () => console.warn('Video stalled');\r\n    const onSuspend = () => {/* benign on many browsers */};\r\n    v.addEventListener('error', onError);\r\n    v.addEventListener('stalled', onStalled);\r\n    v.addEventListener('suspend', onSuspend);\r\n\r\n    return () => {\r\n      clearTimers();\r\n      v.removeEventListener('loadedmetadata', onLoadedMeta);\r\n      v.removeEventListener('loadeddata', onLoadedData);\r\n      v.removeEventListener('canplay', onCanPlay);\r\n      v.removeEventListener('error', onError);\r\n      v.removeEventListener('stalled', onStalled);\r\n      v.removeEventListener('suspend', onSuspend);\r\n    };\r\n  }, [\r\n    type,\r\n    shouldStart,\r\n    preload,\r\n    enableVisibilityControl,\r\n    // if any URL changes, re-run the loader watchdog\r\n    isVideoSetObj,\r\n    (vs && vs.webmUrl) || '',\r\n    (vs && vs.mp4Url) || '',\r\n    legacyVideoUrl || '',\r\n  ]);\r\n\r\n  const hasVideoSource = Boolean(vs?.webmUrl || vs?.mp4Url || legacyVideoUrl);\r\n  if (!src || (type === 'video' && !hasVideoSource)) return null;\r\n\r\n  // ====== IMAGE ======\r\n  if (type === 'image') {\r\n    const ultraLowSrc = typeof src === 'string' ? src : getLowResImageUrl(src);\r\n    const mediumSrc   = typeof src === 'string' ? src : getMediumImageUrl(src);\r\n    const highResSrc  = typeof src === 'string' ? src : getHighQualityImageUrl(src);\r\n\r\n    const resolvedSrc = showHigh ? highResSrc : showMedium ? mediumSrc : ultraLowSrc;\r\n    if (!resolvedSrc) return null;\r\n\r\n    return (\r\n      <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n        {!loaded && (\r\n          <div className=\"absolute-inset\">\r\n            <LoadingScreen isFullScreen={false} />\r\n          </div>\r\n        )}\r\n        <img\r\n          ref={imgRef}\r\n          loading={priority ? 'eager' : undefined}\r\n          fetchPriority={showHigh || priority ? 'high' : showMedium ? 'auto' : 'low'}\r\n          id={id}\r\n          src={resolvedSrc || undefined}\r\n          alt={alt}\r\n          onLoad={onMediaLoaded}\r\n          onError={(e) => console.warn('Image failed', (e.target as HTMLImageElement).src)}\r\n          className={className}\r\n          draggable={false}\r\n          style={{\r\n            ...style,\r\n            objectFit: 'cover',\r\n            objectPosition,\r\n            opacity: loaded ? 1 : 0,\r\n            transition: isSSR ? 'none' : 'filter 0.5s ease, opacity 0.3s ease',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ====== VIDEO ======\r\n  const showSpinner = !loaded;\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      {showSpinner && (\r\n        <div className=\"absolute-inset\">\r\n          <LoadingScreen isFullScreen={false} />\r\n        </div>\r\n      )}\r\n\r\n      <video\r\n        id={id}\r\n        ref={videoRef}\r\n        // treat loadeddata & metadata as “ready enough” for UI\r\n        onLoadedData={onMediaLoaded}\r\n        onLoadedMetadata={() => setLoaded(true)}\r\n        onError={(e) => console.warn('Video failed', e)}\r\n        className={className}\r\n        style={{\r\n          ...style,\r\n          objectFit: 'cover',\r\n          objectPosition,\r\n          opacity: loaded ? 1 : 0,\r\n          transition: isSSR ? 'none' : 'opacity 0.3s ease',\r\n          pointerEvents: 'all',\r\n          zIndex: 1,\r\n        }}\r\n        loop={loop}\r\n        muted={muted}\r\n        playsInline={playsInline}\r\n        preload={preload ?? 'metadata'}\r\n        controls={controls}\r\n        // If you host poster/video on different origins and ever read pixels to <canvas>,\r\n        // uncomment next line and ensure CORS headers exist:\r\n        // crossOrigin=\"anonymous\"\r\n        poster={posterRemoved ? undefined : posterUrl}\r\n      >\r\n        {/* Order matters: prefer MP4 first for Safari reliability */}\r\n        {vs?.mp4Url  && <source src={vs.mp4Url  || undefined} type=\"video/mp4\"  />}\r\n        {vs?.webmUrl && <source src={vs.webmUrl || undefined} type=\"video/webm\" />}\r\n        {!vs?.webmUrl && !vs?.mp4Url && legacyVideoUrl && (\r\n          <source src={legacyVideoUrl || undefined} />\r\n        )}\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaLoader;\r\n","// video-observer.tsx\r\nimport { useEffect } from 'react';\r\n\r\nexport const useVideoVisibility = (\r\n  videoRef: React.RefObject<HTMLVideoElement> | null,\r\n  containerRef: React.RefObject<HTMLElement> | null,\r\n  threshold: number = 0.4\r\n) => {\r\n  useEffect(() => {\r\n    if (!videoRef?.current || !containerRef?.current) return;\r\n\r\n    const t = typeof threshold === 'number' && threshold >= 0 && threshold <= 1 ? threshold : 0.4;\r\n\r\n    let observer: IntersectionObserver | undefined;\r\n\r\n    const video = videoRef.current!;\r\n    const container = containerRef.current!;\r\n\r\n    // IMPORTANT: load even when using <source> children\r\n    // (video.src is empty in that case; currentSrc is set after load())\r\n    video.load();\r\n    video.muted = true;\r\n\r\n    observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          video.play().catch(() => setTimeout(() => video.play().catch(() => {}), 500));\r\n        } else {\r\n          video.pause();\r\n        }\r\n      },\r\n      { threshold: t }\r\n    );\r\n\r\n    observer.observe(container);\r\n\r\n    // kick once if already in view\r\n    const rect = container.getBoundingClientRect();\r\n    const ratio = Math.min(Math.max((window.innerHeight - rect.top) / window.innerHeight, 0), 1);\r\n    if (ratio >= t) video.play().catch(() => {});\r\n\r\n    return () => observer?.disconnect();\r\n  }, [videoRef, containerRef, threshold]);\r\n};\r\n"],"names":["MIN_PORTRAIT_SPLIT","EPS","IceCreamScoop","_data$mediaTwo","_data$mediaTwo$video","_data$mediaTwo2","_data$mediaTwo2$video","data","setData","useState","split","setSplit","window","innerWidth","isPortrait","setIsPortrait","innerHeight","useTooltipInit","useEffect","getProjectData","then","d","onResize","addEventListener","passive","removeEventListener","media2IsVideo","Boolean","mediaTwo","video","webmUrl","mp4Url","nearTop","nearBottom","_jsxs","className","id","style","position","children","_jsx","height","width","top","transition","concat","left","PannableViewport","sensitivity","MediaLoader","type","src","mediaOne","image","alt","objectPosition","SplitDragHandler","totalImages","loadedLowRes","listeners","upgradeTimeout","registerImage","setTimeout","forEach","fn","arguments","length","undefined","setUpgradeTimeout","_ref","loop","muted","playsInline","preload","enableVisibilityControl","priority","controls","isSSR","loaded","setLoaded","showMedium","setShowMedium","showHigh","setShowHigh","posterRemoved","setPosterRemoved","videoRef","useRef","imgRef","containerRef","isNear","ref","rootMargin","threshold","once","near","setNear","current","io","IntersectionObserver","entries","some","e","isIntersecting","disconnect","observe","useNearViewport","shouldStart","_imgRef$current","_videoRef$current","complete","readyState","t1","callback","off","push","t2","clearTimeout","onMediaLoaded","event","CustomEvent","detail","dispatchEvent","isVideoSetObj","vs","legacyVideoUrl","posterUrl","poster","urlFor","quality","auto","url","v","hidePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","timer","t","observer","container","load","entry","play","catch","pause","rect","getBoundingClientRect","Math","min","max","_observer","useVideoVisibility","retryTimer","promoteTimer","kickLoad","_unused","tryPlay","async","paused","_unused3","onLoadedMeta","nudgeDecode","_unused2","onLoadedData","onCanPlay","_unused4","onError","console","warn","onStalled","onSuspend","hasVideoSource","ultraLowSrc","getLowResImageUrl","mediumSrc","getMediumImageUrl","highResSrc","getHighQualityImageUrl","resolvedSrc","LoadingScreen","isFullScreen","loading","fetchPriority","onLoad","target","draggable","_objectSpread","objectFit","opacity","showSpinner","onLoadedMetadata","pointerEvents","zIndex"],"sourceRoot":""}