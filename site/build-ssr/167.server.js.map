{"version":3,"file":"167.server.js","mappings":"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","sources":["webpack://personal-site/./src/components/rock-escapade/block-g-onboarding-inner.tsx","webpack://personal-site/./src/ssr/projects/game.enhancer.tsx"],"sourcesContent":["// src/components/rock-escapade/block-g-onboarding-inner.tsx\r\nimport React, { useEffect, useRef } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport onboardingAnimation from '../../svg/coin.json';\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\ntype InnerProps = {\r\n  onClick?: () => void;\r\n  onMount?: () => void;\r\n  onUnmount?: () => void;\r\n  startAtFrame?: number;\r\n  loopFromFrame?: number;\r\n  debug?: boolean;\r\n  /** CTA label once stage is ready */\r\n  label?: string;\r\n  /** When false, we show LoadingHub + \"Loading…\" text instead of the CTA */\r\n  ctaEnabled?: boolean;\r\n  /** Optional per-game loading lines to rotate through */\r\n  loadingLines?: string[];\r\n};\r\n\r\ntype Phase = 'intro' | 'tail';\r\n\r\nconst BlockGOnboardingInner: React.FC<InnerProps> = ({\r\n  onClick,\r\n  onMount,\r\n  onUnmount,\r\n  startAtFrame = 0,\r\n  loopFromFrame = 41,\r\n  debug = false,\r\n  label = 'Click Here to Play!',\r\n  ctaEnabled = false,\r\n  loadingLines = [\r\n    \"Loading engine…\",\r\n    \"Creating game canvas…\",\r\n    \"Configuring frame loop…\",\r\n    \"Setting up input controls…\",\r\n    \"Applying display settings…\",\r\n    \"Initializing game state…\",\r\n    \"Spawning player…\",\r\n    \"Almost ready…\"\r\n  ],\r\n}) => {\r\n  const hostRef = useRef<HTMLDivElement | null>(null);\r\n  const animRef = useRef<ReturnType<typeof lottie.loadAnimation> | null>(null);\r\n  const phaseRef = useRef<Phase>('intro');\r\n  const introDoneRef = useRef(false);\r\n  const absEndRef = useRef<number>(0);\r\n\r\n  // keep callbacks stable for the effect\r\n  const mountRef = useRef(onMount);\r\n  const unmountRef = useRef(onUnmount);\r\n  useEffect(() => { mountRef.current = onMount; }, [onMount]);\r\n  useEffect(() => { unmountRef.current = onUnmount; }, [onUnmount]);\r\n\r\n  const log = (...a: any[]) => debug && console.log('[Coin]', ...a);\r\n\r\n  useEffect(() => {\r\n    mountRef.current?.();\r\n    const el = hostRef.current;\r\n    if (!el) return () => unmountRef.current?.();\r\n\r\n    // clean any prior\r\n    try { animRef.current?.destroy(); } catch {}\r\n    animRef.current = null;\r\n    phaseRef.current = 'intro';\r\n    introDoneRef.current = false;\r\n\r\n    const anim = lottie.loadAnimation({\r\n      container: el,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: onboardingAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid meet',\r\n        progressiveLoad: true,\r\n      },\r\n    });\r\n    animRef.current = anim;\r\n\r\n    const getAbsEnd = () => {\r\n      const frames = Math.max(1, Math.floor((anim as any).getDuration?.(true) ?? anim.totalFrames ?? 1));\r\n      return frames - 1;\r\n    };\r\n\r\n    const playIntroOnce = () => {\r\n      const absEnd = absEndRef.current;\r\n      const s = Math.max(0, Math.min(startAtFrame, absEnd));\r\n      log('intro start', { startAtFrame: s, absEnd });\r\n      anim.goToAndStop(s, true);\r\n      anim.playSegments([s, absEnd], true);\r\n    };\r\n\r\n    const startTailLoop = () => {\r\n      if (phaseRef.current === 'tail') return;\r\n      phaseRef.current = 'tail';\r\n      const absEnd = absEndRef.current;\r\n      const tailStart = Math.max(0, Math.min(loopFromFrame, absEnd));\r\n      anim.removeEventListener('complete', onCompleteIntro);\r\n      anim.loop = true;\r\n      anim.playSegments([tailStart, absEnd], true);\r\n      log('→ tail loop', { tailStart, absEnd });\r\n    };\r\n\r\n    const onDOMLoaded = () => {\r\n      absEndRef.current = getAbsEnd();\r\n      log('DOMLoaded', { absEnd: absEndRef.current });\r\n      playIntroOnce();\r\n    };\r\n\r\n    const onCompleteIntro = () => {\r\n      if (!introDoneRef.current) {\r\n        introDoneRef.current = true;\r\n        log('intro complete', { frame: Math.floor(anim.currentFrame || 0) });\r\n        startTailLoop();\r\n      }\r\n    };\r\n\r\n    const onLoopComplete = () => {\r\n      if (phaseRef.current === 'tail') {\r\n        log('loopComplete (tail)', { frame: Math.floor(anim.currentFrame || 0) });\r\n      }\r\n    };\r\n\r\n    anim.addEventListener('DOMLoaded', onDOMLoaded);\r\n    anim.addEventListener('complete', onCompleteIntro);\r\n    anim.addEventListener('loopComplete', onLoopComplete);\r\n\r\n    return () => {\r\n      log('destroy');\r\n      try {\r\n        anim.removeEventListener('DOMLoaded', onDOMLoaded);\r\n        anim.removeEventListener('complete', onCompleteIntro);\r\n        anim.removeEventListener('loopComplete', onLoopComplete);\r\n        anim.destroy();\r\n      } catch {}\r\n      animRef.current = null;\r\n      unmountRef.current?.();\r\n    };\r\n    // Only re-init when these truly need to change:\r\n  }, [startAtFrame, loopFromFrame, debug]);\r\n\r\n  return (\r\n    <>\r\n      {/* Coin lottie host (clickable only when the enhancer enables pointer events) */}\r\n      <div ref={hostRef} className=\"coin\" onClick={onClick} style={{ pointerEvents: 'auto' }} />\r\n\r\n      {/* Not ready → show LoadingHub + classic \"Loading…\" headline */}\r\n      {!ctaEnabled ? (\r\n        <>\r\n          <h1 className=\"onboarding-text loading-text\" style={{ pointerEvents: 'none' }}>\r\n            Loading Game…\r\n          </h1>\r\n          <LoadingHub\r\n            className=\"loading-hub--game loading-hub--left\"\r\n            keyword=\"game\"\r\n            minHeight={72}\r\n            lines={loadingLines}\r\n            ariaLabel=\"Loading game\"\r\n          />\r\n        </>\r\n      ) : (\r\n        // Ready → show CTA\r\n        <h1 className=\"onboarding-text\" onClick={onClick} style={{ pointerEvents: 'auto' }}>\r\n          {label}\r\n        </h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlockGOnboardingInner;\r\n","// src/ssr/projects/game.enhancer.tsx\r\nimport React, { useEffect, useMemo, useRef, useState, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport lottie from '../../utils/load-lottie';\r\n\r\nimport BlockGOnboarding from '../../components/rock-escapade/block-g-onboarding-inner';\r\nimport ExitButton from '../../components/rock-escapade/block-g-exit';\r\nimport CoinCounter from '../../components/rock-escapade/block-g-coin-counter';\r\nimport GameOverController from '../logic/game-over-controller';\r\n\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport LazyViewMount from '../../utils/content-utility/lazy-view-mount';\r\nimport { gameLoaders } from '../../utils/content-utility/component-loader';\r\nimport { useHighScoreSubscription } from '../../components/rock-escapade/useHighScoreSubscription';\r\nimport GameInputGuards from '../logic/game-input-guards';\r\n\r\nimport desktopOnboarding from '../../svg/desktop-onboarding.json';\r\nimport mobileOnboarding from '../../svg/mobile-onboarding.json';\r\n\r\n// ★ new\r\nimport GameViewportOverlay from '../../components/rock-escapade/game-viewport-overlay';\r\n\r\nconst GAME_MODE_CLASS = 'game-mode-active';\r\nconst activateGameMode = () => document.body.classList.add(GAME_MODE_CLASS);\r\nconst deactivateGameMode = () => document.body.classList.remove(GAME_MODE_CLASS);\r\n\r\nfunction scheduleIdle(cb: () => void, timeout = 2000) {\r\n  const w = window as any;\r\n  if (typeof w.requestIdleCallback === 'function') {\r\n    const id = w.requestIdleCallback(cb, { timeout });\r\n    return () => w.cancelIdleCallback?.(id);\r\n  }\r\n  const t = window.setTimeout(cb, timeout);\r\n  return () => window.clearTimeout(t);\r\n}\r\n\r\nconst GameEnhancer: React.FC = () => {\r\n  const [sec, setSec] = useState<HTMLElement | null>(null);\r\n  const [onboardingEl, setOnboardingEl] = useState<HTMLElement | null>(null);\r\n  const [rootEl, setRootEl] = useState<HTMLElement | null>(null);\r\n  const [shouldMount, setShouldMount] = useState(false);\r\n  const [stageReady, setStageReady] = useState(false);\r\n\r\n  const firstHydrationUsedRef = useRef(false);\r\n  const firstVisibilityCallbackSkippedRef = useRef(false);\r\n  const wasVisibleRef = useRef(false);\r\n\r\n  const [onboardingReset, setOnboardingReset] = useState(0);\r\n  const reapplyOnboarding = useCallback(() => setOnboardingReset(v => v + 1), []);\r\n\r\n  const stableStartAtForThisMount = useMemo(\r\n    () => (firstHydrationUsedRef.current ? 0 : 30),\r\n    [onboardingReset]\r\n  );\r\n  const handleInnerMount = useCallback(() => { firstHydrationUsedRef.current = true; }, []);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('block-game') as HTMLElement | null;\r\n    if (!container) return;\r\n    setSec(container);\r\n\r\n    const shell = container.querySelector('[data-ssr-shell=\"block-game\"]') as HTMLElement | null;\r\n    if (!shell) return;\r\n\r\n    let host = shell.querySelector('.block-g-onboarding') as HTMLElement | null;\r\n    if (!host) {\r\n      host = shell;\r\n      host.classList.add('block-g-onboarding', 'tooltip-block-g');\r\n      host.setAttribute('aria-live', 'polite');\r\n      host.style.display ||= 'flex';\r\n      host.style.alignItems ||= 'center';\r\n    }\r\n\r\n    host.replaceChildren();\r\n    setOnboardingEl(host);\r\n    setRootEl(shell);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!sec) return;\r\n    const cancelIdle = scheduleIdle(() => setShouldMount(true), 2000);\r\n    const io = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting) {\r\n        setShouldMount(true);\r\n        cancelIdle();\r\n        io.disconnect();\r\n      }\r\n    }, { threshold: [0, 0.3] });\r\n    io.observe(sec);\r\n    return () => { io.disconnect(); cancelIdle(); };\r\n  }, [sec]);\r\n\r\n  useEffect(() => {\r\n    if (!sec) return;\r\n    const io = new IntersectionObserver(([entry]) => {\r\n      const nowVisible = !!entry.isIntersecting;\r\n      if (!firstVisibilityCallbackSkippedRef.current) {\r\n        firstVisibilityCallbackSkippedRef.current = true;\r\n        wasVisibleRef.current = nowVisible;\r\n        return;\r\n      }\r\n      const wasVisible = wasVisibleRef.current;\r\n      wasVisibleRef.current = nowVisible;\r\n      if (nowVisible && !wasVisible && !sec.classList.contains('ingame')) {\r\n        setOnboardingReset(v => v + 1);\r\n      }\r\n    }, { threshold: 0.01 });\r\n    io.observe(sec);\r\n    return () => io.disconnect();\r\n  }, [sec]);\r\n\r\n  if (!sec || !onboardingEl || !rootEl || !shouldMount) return null;\r\n\r\n  return (\r\n    <>\r\n      {createPortal(\r\n        <OnboardingPortal\r\n          reset={onboardingReset}\r\n          startAtFrame={stableStartAtForThisMount}\r\n          onInnerMount={handleInnerMount}\r\n          label={stageReady ? 'Click Here to Play!' : 'Loading Game…'}\r\n          ctaEnabled={stageReady}\r\n        />,\r\n        onboardingEl\r\n      )}\r\n      {createPortal(\r\n        <GameStage\r\n          container={sec}\r\n          onboardingEl={onboardingEl}\r\n          reapplyOnboarding={reapplyOnboarding}\r\n          isStageReady={stageReady}\r\n          onStageReady={setStageReady}\r\n        />,\r\n        rootEl\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype OnboardingPortalProps = {\r\n  reset: number;\r\n  startAtFrame: number;\r\n  onInnerMount: () => void;\r\n  label: string;\r\n  ctaEnabled: boolean;\r\n  loadingLines?: string[];\r\n};\r\n\r\nconst OnboardingPortal: React.FC<OnboardingPortalProps> = ({\r\n  reset, startAtFrame, onInnerMount, label, ctaEnabled, loadingLines\r\n}) => (\r\n  <BlockGOnboarding\r\n    key={reset}\r\n    startAtFrame={startAtFrame}\r\n    onMount={onInnerMount}\r\n    label={label}\r\n    ctaEnabled={ctaEnabled}\r\n    loadingLines={loadingLines}\r\n  />\r\n);\r\n\r\nexport default GameEnhancer;\r\n\r\n/* ---------- Stage (mirrors client BlockGHost + portal overlay) ---------- */\r\nconst GameStage: React.FC<{\r\n  container: HTMLElement;\r\n  onboardingEl: HTMLElement;\r\n  reapplyOnboarding: () => void;\r\n  isStageReady: boolean;\r\n  onStageReady: (ready: boolean) => void;\r\n}> = ({ container, onboardingEl, reapplyOnboarding, isStageReady, onStageReady }) => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  const [started, setStarted] = useState(false);\r\n  const [coins, setCoins] = useState(0);\r\n  const [finalScore, setFinalScore] = useState<number | null>(null);\r\n\r\n  const remoteHighScore = useHighScoreSubscription();\r\n  const stableHigh = typeof remoteHighScore === 'number' ? remoteHighScore : 0;\r\n  const displayHigh = (finalScore == null ? coins : finalScore) > stableHigh\r\n    ? (finalScore == null ? coins : finalScore)\r\n    : stableHigh;\r\n  const beatingHighNow = finalScore == null && coins > stableHigh;\r\n\r\n  const [countdownPhase, setCountdownPhase] = useState<null | 'lottie' | 'begin'>(null);\r\n  const [showOverlayBg, setShowOverlayBg] = useState(false);\r\n  const [shouldRenderOverlayBg, setShouldRenderOverlayBg] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n  const restartApi = useRef<{ restart: () => void } | null>(null);\r\n\r\n  const onStart = useCallback(() => {\r\n    if (!isStageReady) return;\r\n    void gameLoaders.game();\r\n    container.classList.add('ingame');\r\n    activateGameMode();\r\n    setStarted(true);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    setCountdownPhase('lottie');\r\n    onboardingEl.style.transition = 'opacity 180ms ease';\r\n    onboardingEl.style.opacity = '0';\r\n    window.setTimeout(() => { onboardingEl.style.display = 'none'; }, 180);\r\n  }, [container, onboardingEl, isStageReady]);\r\n\r\n  // enable/disable CTA pointers\r\n  useEffect(() => {\r\n    const CLICK_TARGETS = '.coin, .onboarding-text, [data-start-hit]';\r\n    const armTargets = () => {\r\n      onboardingEl.querySelectorAll(CLICK_TARGETS).forEach((el) => {\r\n        const node = el as HTMLElement;\r\n        node.style.pointerEvents = isStageReady ? 'auto' : 'none';\r\n        node.style.cursor = isStageReady ? 'pointer' : 'default';\r\n        if (!node.hasAttribute('role')) node.setAttribute('role', 'button');\r\n        if (node.tabIndex < 0) node.tabIndex = 0;\r\n      });\r\n      onboardingEl.setAttribute('aria-busy', String(!isStageReady));\r\n    };\r\n    armTargets();\r\n    const mo = new MutationObserver(armTargets);\r\n    mo.observe(onboardingEl, { childList: true, subtree: true });\r\n\r\n    const onClick = (ev: Event) => {\r\n      if (!isStageReady) return;\r\n      const t = ev.target as HTMLElement | null;\r\n      if (t && t.closest(CLICK_TARGETS)) onStart();\r\n    };\r\n    const onKeyDown = (ev: KeyboardEvent) => {\r\n      if (!isStageReady) return;\r\n      if (ev.key === 'Enter' || ev.key === ' ') {\r\n        const t = ev.target as HTMLElement | null;\r\n        if (t && t.closest(CLICK_TARGETS)) {\r\n          ev.preventDefault();\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n\r\n    onboardingEl.addEventListener('click', onClick as EventListener, { passive: true });\r\n    onboardingEl.addEventListener('keydown', onKeyDown as EventListener);\r\n    return () => {\r\n      mo.disconnect();\r\n      onboardingEl.removeEventListener('click', onClick as EventListener);\r\n      onboardingEl.removeEventListener('keydown', onKeyDown as EventListener);\r\n    };\r\n  }, [onboardingEl, onStart, isStageReady]);\r\n\r\n  // countdown visuals\r\n  useEffect(() => {\r\n    if (countdownPhase !== 'lottie' || !lottieRef.current) return;\r\n    let anim: any; let mounted = true;\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: lottieRef.current!,\r\n        renderer: 'svg',\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: isRealMobile ? mobileOnboarding : desktopOnboarding,\r\n      });\r\n      if (!mounted || !anim) return;\r\n      const onComplete = () => setCountdownPhase('begin');\r\n      anim.addEventListener('complete', onComplete);\r\n      return () => anim?.removeEventListener?.('complete', onComplete);\r\n    })();\r\n    return () => { mounted = false; anim?.destroy?.(); };\r\n  }, [countdownPhase, isRealMobile]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'begin') {\r\n      const t = setTimeout(() => setCountdownPhase(null), 1000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'lottie') {\r\n      setShowOverlayBg(true);\r\n      setShouldRenderOverlayBg(true);\r\n    } else if (countdownPhase === null) {\r\n      setShowOverlayBg(false);\r\n      const t = setTimeout(() => setShouldRenderOverlayBg(false), 400);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  const handleReady = (api: { restart: () => void }) => {\r\n    restartApi.current = api;\r\n    onStageReady(true);\r\n  };\r\n  useEffect(() => () => onStageReady(false), [onStageReady]);\r\n\r\n  const handleRestart = () => {\r\n    container.classList.add('ingame');\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    restartApi.current?.restart();\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setStarted(false);\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    deactivateGameMode();\r\n    container.classList.remove('ingame');\r\n    onboardingEl.style.display = '';\r\n    reapplyOnboarding();\r\n    requestAnimationFrame(() => { onboardingEl.style.opacity = '1'; });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Keep a WARM-UP instance under the section until start so onReady can flip CTA */}\r\n      {!started && (\r\n        <LazyViewMount\r\n          load={() => import('../../components/rock-escapade/game-canvas')}\r\n          fallback={null}\r\n          preloadOnIdle\r\n          preloadIdleTimeout={2000}\r\n          preloadOnFirstIO\r\n          rootMargin=\"0px\"\r\n          placeholderMinHeight={360}\r\n          componentProps={{\r\n            onReady: handleReady,\r\n            onCoinsChange: (n: number) => setCoins(n),\r\n            onGameOver: (finalCoins: number) => setFinalScore(finalCoins),\r\n            highScore: stableHigh,\r\n            pauseWhenHidden: true,\r\n            demoMode: true, // preview only before game is started\r\n            overlayActive: false,\r\n            allowSpawns: true,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* When playing: portal everything under #efe-portfolio so the postconfig css prefixer still works with the portal */}\r\n      {started && (\r\n        <GameViewportOverlay>\r\n          <GameInputGuards active lockBodyScroll alsoBlockWheel alsoBlockTouch allowWhenTyping />\r\n          <ExitButton onExit={handleExit} />\r\n          <CoinCounter coins={coins} highScore={displayHigh} newHighScore={beatingHighNow} />\r\n\r\n          {shouldRenderOverlayBg && (\r\n            <div className={`countdown-bg-overlay ${!showOverlayBg ? 'hide' : ''}`} style={{ pointerEvents: 'none' }} />\r\n          )}\r\n          {(countdownPhase === 'lottie' || countdownPhase === 'begin') && (\r\n            <div ref={lottieRef} id=\"lottie-onboarding\" className=\"countdown-lottie\" style={{ pointerEvents: 'none' }} />\r\n          )}\r\n          <GameOverController\r\n            score={finalScore}\r\n            highScore={stableHigh}\r\n            onRestart={handleRestart}\r\n            onHide={() => setFinalScore(null)}\r\n          />\r\n\r\n          {/* Real gameplay instance pinned to viewport */}\r\n          <LazyViewMount\r\n            load={() => import('../../components/rock-escapade/game-canvas')}\r\n            fallback={null}\r\n            mountMode=\"io\"\r\n            observeTargetId=\"game-viewport-root\"\r\n            rootMargin=\"0px\"\r\n            enterThreshold={0.01}\r\n            exitThreshold={0}\r\n            unmountDelayMs={150}\r\n            preloadOnIdle\r\n            preloadIdleTimeout={2000}\r\n            preloadOnFirstIO\r\n            placeholderMinHeight={360}\r\n            componentProps={{\r\n              onReady: handleReady,\r\n              onCoinsChange: (n: number) => setCoins(n),\r\n              onGameOver: (finalCoins: number) => setFinalScore(finalCoins),\r\n              highScore: stableHigh,\r\n              pauseWhenHidden: true,\r\n              demoMode: false,\r\n              overlayActive: countdownPhase === 'lottie' || countdownPhase === 'begin',\r\n              allowSpawns: countdownPhase === 'begin' || countdownPhase === null,\r\n            }}\r\n          />\r\n        </GameViewportOverlay>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":["BlockGOnboardingInner","onClick","onMount","onUnmount","startAtFrame","loopFromFrame","debug","label","ctaEnabled","loadingLines","hostRef","useRef","animRef","phaseRef","introDoneRef","absEndRef","mountRef","unmountRef","useEffect","current","log","a","console","el","destroy","anim","lottie","container","renderer","loop","autoplay","animationData","onboardingAnimation","rendererSettings","preserveAspectRatio","progressiveLoad","onDOMLoaded","Math","max","floor","getDuration","totalFrames","absEnd","playIntroOnce","s","min","goToAndStop","playSegments","onCompleteIntro","frame","currentFrame","startTailLoop","tailStart","removeEventListener","onLoopComplete","addEventListener","_jsxs","_Fragment","children","_jsx","ref","className","style","pointerEvents","LoadingHub","keyword","minHeight","lines","ariaLabel","GAME_MODE_CLASS","OnboardingPortal","reset","onInnerMount","BlockGOnboarding","GameEnhancer","sec","setSec","useState","onboardingEl","setOnboardingEl","rootEl","setRootEl","shouldMount","setShouldMount","stageReady","setStageReady","firstHydrationUsedRef","firstVisibilityCallbackSkippedRef","wasVisibleRef","onboardingReset","setOnboardingReset","reapplyOnboarding","useCallback","v","stableStartAtForThisMount","useMemo","handleInnerMount","document","getElementById","shell","querySelector","host","classList","add","setAttribute","display","alignItems","replaceChildren","cancelIdle","cb","timeout","w","window","requestIdleCallback","id","cancelIdleCallback","t","setTimeout","clearTimeout","scheduleIdle","io","IntersectionObserver","entry","isIntersecting","disconnect","threshold","observe","nowVisible","wasVisible","contains","createPortal","GameStage","isStageReady","onStageReady","isRealMobile","useRealMobileViewport","started","setStarted","coins","setCoins","finalScore","setFinalScore","remoteHighScore","useHighScoreSubscription","stableHigh","displayHigh","beatingHighNow","countdownPhase","setCountdownPhase","showOverlayBg","setShowOverlayBg","shouldRenderOverlayBg","setShouldRenderOverlayBg","lottieRef","restartApi","onStart","gameLoaders","game","body","transition","opacity","CLICK_TARGETS","armTargets","querySelectorAll","forEach","node","cursor","hasAttribute","tabIndex","String","mo","MutationObserver","childList","subtree","ev","target","closest","onKeyDown","key","preventDefault","passive","mounted","loadAnimation","mobileOnboarding","desktopOnboarding","onComplete","handleReady","api","LazyViewMount","load","fallback","preloadOnIdle","preloadIdleTimeout","preloadOnFirstIO","rootMargin","placeholderMinHeight","componentProps","onReady","onCoinsChange","n","onGameOver","finalCoins","highScore","pauseWhenHidden","demoMode","overlayActive","allowSpawns","GameViewportOverlay","GameInputGuards","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","ExitButton","onExit","handleExit","remove","requestAnimationFrame","CoinCounter","newHighScore","GameOverController","score","onRestart","handleRestart","restart","onHide","mountMode","observeTargetId","enterThreshold","exitThreshold","unmountDelayMs"],"sourceRoot":""}