{"version":3,"file":"485.server.js","mappings":"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","sources":["webpack://personal-site/./src/components/rock-escapade/game-canvas.tsx","webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["// src/components/rock-escapade/GameCanvas.tsx\r\nimport { useEffect, useRef } from 'react';\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\n\r\ntype Props = {\r\n  onCoinsChange?: (coins: number) => void;\r\n  highScore?: number;\r\n  onGameOver?: (finalCoins: number, isNewHigh: boolean) => void;\r\n  onReady?: (api: { restart: () => void }) => void;\r\n  pauseWhenHidden?: boolean;\r\n  demoMode?: boolean;\r\n  overlayActive?: boolean;\r\n  allowSpawns?: boolean;\r\n};\r\n\r\nexport default function GameCanvas({\r\n  onCoinsChange,\r\n  highScore = 0,\r\n  onGameOver,\r\n  onReady,\r\n  pauseWhenHidden = true,\r\n  demoMode = false,\r\n  overlayActive = false,\r\n  allowSpawns = true,\r\n}: Props) {\r\n  const hostRef = useRef<HTMLDivElement>(null);\r\n  const q5Ref = useRef<any>(null);\r\n  const visibleRef = useRef(true);\r\n  const cleanupRef = useRef<(() => void) | null>(null);\r\n\r\n  // prop refs\r\n  const coinsChangeRef = useRef(onCoinsChange);\r\n  const gameOverRef = useRef(onGameOver);\r\n  const readyRef = useRef(onReady);\r\n  const highScoreRef = useRef(highScore);\r\n  const pauseHiddenRef = useRef(pauseWhenHidden);\r\n  const demoRef = useRef(!!demoMode);\r\n  const overlayRef = useRef(!!overlayActive);\r\n  const allowSpawnsRef = useRef(allowSpawns);\r\n\r\n  coinsChangeRef.current = onCoinsChange;\r\n  gameOverRef.current = onGameOver;\r\n  readyRef.current = onReady;\r\n  highScoreRef.current = highScore;\r\n  pauseHiddenRef.current = pauseWhenHidden;\r\n  demoRef.current = !!demoMode;\r\n  overlayRef.current = !!overlayActive;\r\n  allowSpawnsRef.current = !!allowSpawns;\r\n\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    let io: IntersectionObserver | null = null;\r\n    let onResize: (() => void) | null = null;\r\n\r\n    import('q5').then((q5mod) => {\r\n      if (!alive) return;\r\n      const q5 = (q5mod as any).default ?? (q5mod as any);\r\n\r\n      const el = hostRef.current;\r\n      if (!el || !el.isConnected) return;\r\n\r\n      // clear any old instance/canvas\r\n      el.replaceChildren();\r\n      if (q5Ref.current?.remove) {\r\n        try { q5Ref.current.remove(); } catch {}\r\n        q5Ref.current = null;\r\n      }\r\n\r\n      const sketch = (p: any) => {\r\n        // ---------------- Local state ----------------\r\n        let verticalMode = false;\r\n        let rectangles: any[] = [];\r\n        let octagons: any[] = [];\r\n        let particles: any[] = [];\r\n        let projectiles: any[] = [];\r\n        let circle: any;\r\n        let lastSpawnTime = 0;\r\n        let lastOctagonSpawnTime = 0;\r\n        let rectangleSpawnRate = 2;\r\n        let coins = 0;\r\n        let gameOver = false;\r\n        let prevGameOver = false;\r\n        let lastDemoFlag = true;\r\n\r\n        let lastFiredTime = -Infinity;\r\n        const cooldownDuration = 1500;\r\n        const cooldownRadiusMax = 48;\r\n\r\n        // perf caps\r\n        const MAX_PARTICLES = isRealMobile ? 600 : 1200;\r\n        const MAX_PROJECTILES = 140;\r\n        const MAX_RECTANGLES = 220;\r\n\r\n        // ---------- Pointer gesture state ----------\r\n        let dragPointerId: number | null = null;\r\n        let lastTouch: { x: number; y: number } | null = null;\r\n\r\n        let primaryCandidateId: number | null = null;\r\n        type TapInfo = { x0: number; y0: number; x: number; y: number; t0: number };\r\n        let primaryTapInfo: TapInfo | null = null;\r\n\r\n        const tapCandidates = new Map<number, TapInfo>();\r\n\r\n        // thresholds\r\n        const TAP_MS = 180;\r\n        const TAP_MOVE = 12;     // also used as drag promotion threshold\r\n        const DRAG_PROMOTE = TAP_MOVE;\r\n        const baseImpulse = isRealMobile ? 0.5 : 0.35;\r\n\r\n        let movingUp = false;\r\n        let movingDown = false;\r\n        let movingLeft = false;\r\n        let movingRight = false;\r\n\r\n        // cached colors\r\n        let GOLD_COLORS: any[] = [];\r\n\r\n        // small scratch object to avoid GC in getCanvasCoords\r\n        const scratchXY = { x: 0, y: 0 };\r\n\r\n        function canSpawn() {\r\n          return demoRef.current || allowSpawnsRef.current;\r\n        }\r\n\r\n        // ---------------- API ----------------\r\n        const restartGame = () => {\r\n          gameOver = false;\r\n          coins = 0;\r\n          coinsChangeRef.current?.(coins);\r\n          rectangles.length = 0;\r\n          octagons.length = 0;\r\n          particles.length = 0;\r\n          projectiles.length = 0;\r\n          circle = new Circle(p, 240, p.height / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n          lastOctagonSpawnTime = p.millis();\r\n        };\r\n        (p as any).restartGame = restartGame;\r\n\r\n        // ---------------- Setup ----------------\r\n        p.setup = () => {\r\n          const w = el.offsetWidth;\r\n          const h = el.offsetHeight;\r\n\r\n          if (isRealMobile && p.pixelDensity) p.pixelDensity(1);\r\n          p.frameRate?.(60);\r\n          p.createCanvas(w, h);\r\n\r\n          // keep the page from stealing gestures\r\n          (el as HTMLElement).style.touchAction = 'none';\r\n          (p as any).canvas.style.touchAction = 'none';\r\n          (el as HTMLElement).style.overscrollBehavior = 'none';\r\n          (el as HTMLElement).style.webkitUserSelect = 'none';\r\n          (el as HTMLElement).style.userSelect = 'none';\r\n\r\n          const canvas = (p as any).canvas as HTMLCanvasElement;\r\n\r\n          const getCanvasCoords = (e: PointerEvent) => {\r\n            const r = canvas.getBoundingClientRect();\r\n            scratchXY.x = (e.clientX - r.left) * (p.width / r.width);\r\n            scratchXY.y = (e.clientY - r.top) * (p.height / r.height);\r\n            return scratchXY;\r\n          };\r\n\r\n          const promoteToDrag = (pointerId: number, x: number, y: number) => {\r\n            dragPointerId = pointerId;\r\n            lastTouch = { x, y };\r\n            try { canvas.setPointerCapture(pointerId); } catch {}\r\n          };\r\n\r\n          // ----- handlers -----\r\n          const onDown = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            if (dragPointerId === null && primaryCandidateId === null) {\r\n              primaryCandidateId = e.pointerId;\r\n              primaryTapInfo = { x0: x, y0: y, x, y, t0: p.millis() };\r\n            } else {\r\n              tapCandidates.set(e.pointerId, { x0: x, y0: y, x, y, t0: p.millis() });\r\n            }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const onMove = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n            const { x, y } = getCanvasCoords(e);\r\n\r\n            // Candidate → promote to drag when moved enough\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              if (primaryTapInfo) { primaryTapInfo.x = x; primaryTapInfo.y = y; }\r\n              const dx0 = x - (primaryTapInfo?.x0 ?? x);\r\n              const dy0 = y - (primaryTapInfo?.y0 ?? y);\r\n              const moved = Math.hypot(dx0, dy0);\r\n              if (moved > DRAG_PROMOTE) {\r\n                promoteToDrag(e.pointerId, x, y);\r\n                primaryCandidateId = null;\r\n                primaryTapInfo = null;\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Active drag: only this pointer moves the ship\r\n            if (e.pointerId === dragPointerId) {\r\n              if (!lastTouch || !circle) { lastTouch = { x, y }; e.preventDefault(); return; }\r\n              const dx = x - lastTouch.x;\r\n              const dy = y - lastTouch.y;\r\n              const dist = Math.hypot(dx, dy) || 1;\r\n              const speedFactor = Math.log2(dist + 1);\r\n              const force = baseImpulse * speedFactor;\r\n              circle.vx += (dx / dist) * force;\r\n              circle.vy += (dy / dist) * force;\r\n              lastTouch = { x, y };\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidates: track movement for tap thresholding\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) { ti.x = x; ti.y = y; }\r\n            e.preventDefault();\r\n          };\r\n\r\n          const tryFire = () => {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n              const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n              projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n              if (projectiles.length > MAX_PROJECTILES) {\r\n                projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          };\r\n\r\n          const onUp = (e: PointerEvent) => {\r\n            if (demoRef.current || overlayRef.current) return;\r\n\r\n            // End drag only if the drag pointer lifted\r\n            if (e.pointerId === dragPointerId) {\r\n              try { canvas.releasePointerCapture(e.pointerId); } catch {}\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Primary candidate ended without being promoted → evaluate as tap\r\n            if (primaryCandidateId === e.pointerId && dragPointerId === null) {\r\n              const ti = primaryTapInfo;\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n              if (ti) {\r\n                const dt = p.millis() - ti.t0;\r\n                const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n                if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire();\r\n              }\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // Secondary tap candidate → evaluate as tap\r\n            const ti = tapCandidates.get(e.pointerId);\r\n            if (ti) {\r\n              tapCandidates.delete(e.pointerId);\r\n              const dt = p.millis() - ti.t0;\r\n              const moved = Math.hypot(ti.x - ti.x0, ti.y - ti.y0);\r\n              if (dt <= TAP_MS && moved <= TAP_MOVE) tryFire(); // does NOT affect drag\r\n              e.preventDefault();\r\n            }\r\n          };\r\n\r\n          const onCancel = (e: PointerEvent) => {\r\n            // Clean up states safely\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n            if (primaryCandidateId === e.pointerId) {\r\n              primaryCandidateId = null;\r\n              primaryTapInfo = null;\r\n            }\r\n            tapCandidates.delete(e.pointerId);\r\n          };\r\n\r\n          canvas.addEventListener('pointerdown', onDown, { passive: false });\r\n          canvas.addEventListener('pointermove', onMove, { passive: false });\r\n          canvas.addEventListener('pointerup', onUp, { passive: false });\r\n          canvas.addEventListener('pointercancel', onCancel as any, { passive: false });\r\n          canvas.addEventListener('lostpointercapture', (e: any) => {\r\n            if (e.pointerId === dragPointerId) {\r\n              dragPointerId = null;\r\n              lastTouch = null;\r\n            }\r\n          });\r\n\r\n          (p as any)._pointerCleanup = () => {\r\n            try {\r\n              canvas.removeEventListener('pointerdown', onDown as any);\r\n              canvas.removeEventListener('pointermove', onMove as any);\r\n              canvas.removeEventListener('pointerup', onUp as any);\r\n              canvas.removeEventListener('pointercancel', onCancel as any);\r\n            } catch {}\r\n          };\r\n\r\n          verticalMode = window.innerWidth <= 1024 && window.innerHeight > window.innerWidth;\r\n\r\n          GOLD_COLORS = [\r\n            p.color(255, 215, 0),\r\n            p.color(255, 223, 70),\r\n            p.color(255, 200, 0),\r\n            p.color(255, 170, 50),\r\n          ];\r\n\r\n          lastOctagonSpawnTime = p.millis();\r\n          circle = new Circle(p, 240, h / 2, 33);\r\n          (q5Ref.current as any).circle = circle;\r\n\r\n          readyRef.current?.({ restart: restartGame });\r\n        };\r\n\r\n        // ---------------- Draw loop ----------------\r\n        p.draw = () => {\r\n          const demo = demoRef.current;\r\n\r\n          // detect demo → live transition\r\n          if (!demo && lastDemoFlag) {\r\n            rectangles.length = 0;\r\n            octagons.length = 0;\r\n            particles.length = 0;\r\n            projectiles.length = 0;\r\n            coins = 0;\r\n            coinsChangeRef.current?.(0);\r\n\r\n            circle.x = 240;\r\n            circle.y = p.height / 2;\r\n            circle.vx = circle.vy = circle.ax = circle.ay = 0;\r\n\r\n            const now = p.millis();\r\n            lastOctagonSpawnTime = now;\r\n            lastSpawnTime = now;\r\n          }\r\n          lastDemoFlag = demo;\r\n\r\n          if (pauseHiddenRef.current && !visibleRef.current) {\r\n            p.background(28);\r\n            return;\r\n          }\r\n\r\n          const delta = p.deltaTime / 16.67;\r\n          const nowMillis = p.millis();\r\n          const vw = p.width;\r\n          const vh = p.height;\r\n\r\n          p.background(28);\r\n\r\n          if (!demo && overlayRef.current) {\r\n            movingUp = movingDown = movingLeft = movingRight = false;\r\n            circle.stopHorizontal();\r\n            circle.stopVertical();\r\n          }\r\n\r\n          if (demo) {\r\n            autoEvade();\r\n          } else {\r\n            if (movingUp) circle.moveUp(); else if (movingDown) circle.moveDown(); else circle.stopVertical();\r\n            if (movingLeft) circle.moveLeft(); else if (movingRight) circle.moveRight(); else circle.stopHorizontal();\r\n          }\r\n\r\n          circle.update(delta, vw, vh);\r\n          circle.display(p);\r\n\r\n          spawnRectangles(p, nowMillis, vw, vh);\r\n          updateRectangles(p, delta, nowMillis, vw, vh);\r\n\r\n          spawnOctagons(p, nowMillis);\r\n          updateOctagons(p, delta, vw, vh);\r\n\r\n          if (!isRealMobile) p.blendMode(p.ADD);\r\n          // update & draw particles\r\n          for (let i = particles.length - 1; i >= 0; i--) {\r\n            const part = particles[i];\r\n            part.update(delta);\r\n            part.display(p);\r\n            if (part.isDead()) particles.splice(i, 1);\r\n          }\r\n          if (!isRealMobile) p.blendMode(p.BLEND);\r\n\r\n          // projectiles\r\n          for (let i = projectiles.length - 1; i >= 0; i--) {\r\n            const proj = projectiles[i];\r\n            proj.update(delta, vw, vh);\r\n            proj.display(p);\r\n            if (proj.isDead(vw, vh)) projectiles.splice(i, 1);\r\n          }\r\n\r\n          // live-mode only HUD & game-over\r\n          if (!demo) {\r\n            if (!prevGameOver && gameOver) {\r\n              const isNewHigh = coins > (highScoreRef.current ?? 0);\r\n              gameOverRef.current?.(coins, isNewHigh);\r\n            }\r\n            prevGameOver = gameOver;\r\n\r\n            if (gameOver) { p.background(28, 180); return; }\r\n            drawCooldownRing(p, nowMillis);\r\n          } else {\r\n            gameOver = false; // demo never ends\r\n          }\r\n\r\n          // --- helpers (closed over locals) ---\r\n          function drawCooldownRing(pAny: any, now: number) {\r\n            const elapsed = now - lastFiredTime;\r\n            if (elapsed >= cooldownDuration) return;\r\n            const progress = 1 - (elapsed / cooldownDuration);\r\n            const radius = progress * cooldownRadiusMax;\r\n            pAny.noStroke();\r\n            pAny.fill(200, 150, 255, 100);\r\n            pAny.ellipse(circle.x, circle.y, radius * 2, radius * 2);\r\n          }\r\n        };\r\n\r\n        // --- Demo simple AI: evade rectangles, seek octagons\r\n        function autoEvade() {\r\n          let evadeX = 0, evadeY = 0, danger = 0;\r\n\r\n          for (const rect of rectangles) {\r\n            const cx = rect.x + rect.w / 2;\r\n            const cy = rect.y + rect.h / 2;\r\n            const dx = circle.x - cx;\r\n            const dy = circle.y - cy;\r\n            const distSq = dx * dx + dy * dy;\r\n            if (distSq < 20000) {\r\n              const dist = Math.sqrt(distSq) || 1;\r\n              const weight = 1 / (dist + 300);\r\n              const force = weight * 150;\r\n              evadeX += (dx / dist) * force;\r\n              evadeY += (dy / dist) * force;\r\n              danger += (1 / (dist + 1)) * 10;\r\n            }\r\n          }\r\n\r\n          let attractX = 0, attractY = 0;\r\n          if (octagons.length > 0 && danger < 50) {\r\n            const target = octagons.reduce((a, b) => {\r\n              const da = Math.hypot(circle.x - (a.x + a.size / 2), circle.y - (a.y + a.size / 2));\r\n              const db = Math.hypot(circle.x - (b.x + b.size / 2), circle.y - (b.y + b.size / 2));\r\n              return db < da ? b : a;\r\n            });\r\n            const dx = (target.x + target.size / 2) - circle.x;\r\n            const dy = (target.y + target.size / 2) - circle.y;\r\n            const d = Math.hypot(dx, dy) || 1;\r\n            attractX = (dx / d) * 0.45;\r\n            attractY = (dy / d) * 0.45;\r\n          }\r\n\r\n          circle.ax = evadeX + attractX;\r\n          circle.ay = evadeY + attractY;\r\n\r\n          if (circle.ax === 0 && circle.ay === 0) {\r\n            const cx = p.width / 2 - circle.x;\r\n            const cy = p.height / 2 - circle.y;\r\n            const d = Math.hypot(cx, cy) || 1;\r\n            circle.ax = (cx / d) * 0.1;\r\n            circle.ay = (cy / d) * 0.1;\r\n          }\r\n        }\r\n\r\n        // ---------------- Spawners/Updaters ----------------\r\n        function spawnRectangles(p: any, now: number, vw: number, vh: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n\r\n          const inView = rectangles.filter((r) =>\r\n            verticalMode ? r.y + r.h > 0 && r.y < vh : r.x + r.w > 0 && r.x < vw\r\n          ).length;\r\n\r\n          let maxRectangles: number;\r\n          const ww = window.innerWidth;\r\n          const wh = window.innerHeight;\r\n          if (ww >= 1025) {\r\n            maxRectangles = 50;\r\n            if (inView < 10) rectangleSpawnRate = 6;\r\n            else if (inView < 25) rectangleSpawnRate = 5;\r\n            else if (inView < 40) rectangleSpawnRate = 4;\r\n            else rectangleSpawnRate = 0;\r\n          } else if (ww >= 768) {\r\n            maxRectangles = 60;\r\n            if (inView < 8) rectangleSpawnRate = 5;\r\n            else if (inView < 20) rectangleSpawnRate = 4;\r\n            else if (inView < 40) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 0;\r\n          } else {\r\n            maxRectangles = 25;\r\n            if (inView < 10) rectangleSpawnRate = 4;\r\n            else if (inView < 20) rectangleSpawnRate = 3;\r\n            else rectangleSpawnRate = 1;\r\n          }\r\n\r\n          if (rectangleSpawnRate > 0 && now - lastSpawnTime > 2000 / rectangleSpawnRate && inView < maxRectangles) {\r\n            rectangles.push(new Shape(p, true, false, verticalMode, GOLD_COLORS));\r\n            lastSpawnTime = now;\r\n          }\r\n\r\n          if (rectangles.length > MAX_RECTANGLES) rectangles.splice(0, rectangles.length - MAX_RECTANGLES);\r\n\r\n          if (now % 5000 < 20) {\r\n            rectangles = rectangles.filter((r) => !isNaN(r.x) && !isNaN(r.y));\r\n          }\r\n        }\r\n\r\n        function updateRectangles(p: any, delta: number, now: number, vw: number, vh: number) {\r\n          for (let i = rectangles.length - 1; i >= 0; i--) {\r\n            const r = rectangles[i];\r\n            r.update(delta);\r\n            r.display(p);\r\n            if (!demoRef.current && circle.overlaps(r)) gameOver = true;\r\n\r\n            // projectile collision\r\n            for (let j = projectiles.length - 1; j >= 0; j--) {\r\n              const proj = projectiles[j];\r\n              const projSize = (proj.size ?? proj.radius * 2);\r\n              const projX = proj.x - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projY = proj.y - (proj.size ? proj.size / 2 : proj.radius);\r\n              const projW = projSize;\r\n              const projH = projSize;\r\n\r\n              if (\r\n                projX + projW > r.x &&\r\n                projX < r.x + r.w &&\r\n                projY + projH > r.y &&\r\n                projY < r.y + r.h\r\n              ) {\r\n                if (proj instanceof RectangleProjectile) {\r\n                  if (p.random() < 0.05) {\r\n                    rectangles.splice(i, 1);\r\n                    projectiles.splice(j, 1);\r\n                    burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                  } else {\r\n                    proj.vx *= -1;\r\n                    proj.vy *= -1;\r\n                    proj.x += proj.vx * delta * 2;\r\n                    proj.y += proj.vy * delta * 2;\r\n                  }\r\n                } else {\r\n                  rectangles.splice(i, 1);\r\n                  projectiles.splice(j, 1);\r\n                  burstRectangles(p, r.x + r.w / 2, r.y + r.h / 2);\r\n                }\r\n                break;\r\n              }\r\n            }\r\n\r\n            const off = verticalMode\r\n              ? r.y - r.h > vh + 100 || r.y + r.h < -100\r\n              : r.x + r.w < -100 || r.x - r.w > vw + 100;\r\n\r\n            if (off) {\r\n              rectangles.splice(i, 1);\r\n              continue;\r\n            }\r\n          }\r\n\r\n          // resolve collisions (unchanged logic)\r\n          for (let i = 0; i < rectangles.length; i++) {\r\n            const r1 = rectangles[i];\r\n            for (let j = i + 1; j < rectangles.length; j++) {\r\n              const r2 = rectangles[j];\r\n              if (r1.overlaps(r2)) r1.resolveCollision(r2);\r\n            }\r\n          }\r\n        }\r\n\r\n        function burstRectangles(p: any, cx: number, cy: number) {\r\n          for (let k = 0; k < 8; k++) {\r\n            const angle = (p.TWO_PI / 8) * k;\r\n            const speed = p.random(2, 4);\r\n            const vx = Math.cos(angle) * speed;\r\n            const vy = Math.sin(angle) * speed;\r\n            projectiles.push(new RectangleProjectile(p, cx, cy, vx, vy, '#c896ff'));\r\n          }\r\n          if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n        }\r\n\r\n        function spawnOctagons(p: any, now: number) {\r\n          if (!allowSpawnsRef.current) return;\r\n          if (!canSpawn()) return;\r\n          if (now - lastOctagonSpawnTime > 2000) {\r\n            if (octagons.length === 0) octagons.push(new Shape(p, true, true, verticalMode, GOLD_COLORS));\r\n            lastOctagonSpawnTime = now;\r\n          }\r\n        }\r\n\r\n        function updateOctagons(p: any, delta: number, vw: number, vh: number) {\r\n          const buffer = 150;\r\n\r\n          for (let i = octagons.length - 1; i >= 0; i--) {\r\n            const o = octagons[i];\r\n            o.update(delta);\r\n            o.display(p);\r\n\r\n            if (circle.overlaps(o)) {\r\n              if (!demoRef.current) {\r\n                coins += 20;\r\n                coinsChangeRef.current?.(coins);\r\n              }\r\n              for (let j = 0; j < 10; j++) {\r\n                particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c, 0, 0, 5));\r\n              }\r\n              if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n              octagons.splice(i, 1);\r\n              continue;\r\n            }\r\n\r\n            const speed = Math.abs(o.vx) + Math.abs(o.vy);\r\n            let numParticles: number;\r\n            if (speed < 1) numParticles = 0.05;\r\n            else if (speed < 3) numParticles = 0.1;\r\n            else if (speed < 6) numParticles = 0.2;\r\n            else numParticles = 0.3;\r\n\r\n            const whole = Math.floor(numParticles);\r\n            const frac = numParticles - whole;\r\n\r\n            for (let j = 0; j < whole; j++) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (p.random() < frac) particles.push(new Particle(p, o.x + o.size / 2, o.y + o.size / 2, 255, o.c));\r\n            if (particles.length > MAX_PARTICLES) particles.splice(0, particles.length - MAX_PARTICLES);\r\n\r\n            if (\r\n              o.x + o.size < -buffer ||\r\n              o.x - o.size > vw + buffer ||\r\n              o.y + o.size < -buffer ||\r\n              o.y - o.size > vh + buffer\r\n            ) {\r\n              octagons.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // ---------------- Keyboard ----------------\r\n        p.keyPressed = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === ' ' || p.key === 'Spacebar') {\r\n            const now = p.millis();\r\n            if (now - lastFiredTime >= cooldownDuration) {\r\n              lastFiredTime = now;\r\n              if (circle) {\r\n                const vx = (circle.vx !== 0 || circle.vy !== 0) ? circle.vx : 5;\r\n                const vy = (circle.vy !== 0 || circle.vx !== 0) ? circle.vy : 0;\r\n                projectiles.push(new Projectile(p, circle.x, circle.y, vx, vy));\r\n                if (projectiles.length > MAX_PROJECTILES) projectiles.splice(0, projectiles.length - MAX_PROJECTILES);\r\n              }\r\n            }\r\n          }\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = true;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = true;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = true;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = true;\r\n        };\r\n\r\n        p.keyReleased = () => {\r\n          if (demoRef.current || overlayRef.current) return;\r\n          if (p.key === 'w' || p.keyCode === p.UP_ARROW)    movingUp = false;\r\n          if (p.key === 's' || p.keyCode === p.DOWN_ARROW)  movingDown = false;\r\n          if (p.key === 'a' || p.keyCode === p.LEFT_ARROW)  movingLeft = false;\r\n          if (p.key === 'd' || p.keyCode === p.RIGHT_ARROW) movingRight = false;\r\n        };\r\n\r\n        // ---------------- Classes ----------------\r\n        class Circle {\r\n          p:any;x:number;y:number;vx:number;vy:number;ax:number;ay:number;radius:number;c:any;trail:{x:number;y:number}[];\r\n          constructor(p:any,x:number,y:number,r:number){\r\n            this.p=p;this.x=x;this.y=y;this.vx=0;this.vy=0;this.ax=0;this.ay=0;this.radius=r;this.c=p.color(200,150,255);this.trail=[];\r\n          }\r\n          update(delta:number, vw:number, vh:number){\r\n            this.vx+=this.ax*delta;this.vy+=this.ay*delta;\r\n            // damping\r\n            const damp = Math.pow(0.92,delta);\r\n            this.vx*=damp;this.vy*=damp;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;\r\n\r\n            // wrap\r\n            if(this.y+this.radius<0)this.y=vh+this.radius;else if(this.y-this.radius>vh)this.y=-this.radius;\r\n            if(this.x+this.radius<0)this.x=vw+this.radius;else if(this.x-this.radius>vw)this.x=-this.radius;\r\n\r\n            // cheap trail (no p.createVector allocs)\r\n            this.trail.push({x:this.x,y:this.y});\r\n            if(this.trail.length>8)this.trail.shift();\r\n\r\n            // clamp\r\n            const lim=10;\r\n            if(this.vx<-lim)this.vx=-lim; else if(this.vx>lim)this.vx=lim;\r\n            if(this.vy<-lim)this.vy=-lim; else if(this.vy>lim)this.vy=lim;\r\n          }\r\n          display(pAny:any){\r\n            const n=this.trail.length;\r\n            for(let i=0;i<n;i++){\r\n              const pos=this.trail[i];\r\n              const a=pAny.map(i,0,n-1,30,100);\r\n              const r=pAny.map(i,0,n-1,this.radius/2,this.radius);\r\n              pAny.fill(200,150,255,a);pAny.noStroke();pAny.ellipse(pos.x,pos.y,r,r);\r\n            }\r\n            pAny.fill(this.c);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius,this.radius);\r\n          }\r\n          moveUp(){this.ay=-0.5;}moveDown(){this.ay=0.5;}moveLeft(){this.ax=-0.5;}moveRight(){this.ax=0.5;}stopVertical(){this.ay=0;}stopHorizontal(){this.ax=0;}\r\n          overlaps(other:any){\r\n            if(other.isOctagon){\r\n              const dx=this.x-(other.x+other.size/2);\r\n              const dy=this.y-(other.y+other.size/2);\r\n              const sumR=this.radius+other.size/2;\r\n              return dx*dx+dy*dy < sumR*sumR;\r\n            }\r\n            const cx = Math.max(other.x, Math.min(this.x, other.x+other.w));\r\n            const cy = Math.max(other.y, Math.min(this.y, other.y+other.h));\r\n            const dx = this.x-cx, dy=this.y-cy;\r\n            const r = this.radius*0.3; // unchanged gameplay fudge\r\n            return dx*dx+dy*dy < r*r;\r\n          }\r\n        }\r\n\r\n        class Shape {\r\n          p:any;isOctagon:boolean;verticalMode:boolean;x=0;y=0;vx=0;vy=0;w=0;h=0;size=0;c:any;rotation=0;rotationSpeed=0;\r\n          private GOLD:any[];\r\n          constructor(p:any,startOff:boolean,isOct:boolean,vertical:boolean, GOLD:any[]){this.p=p;this.isOctagon=isOct;this.verticalMode=vertical;this.GOLD=GOLD;this.reset(startOff);}\r\n          reset(startOff:boolean){\r\n            const ww = window.innerWidth;\r\n            const wh = window.innerHeight;\r\n            if(this.verticalMode){\r\n              this.x=this.p.random(this.p.width);\r\n              if(this.isOctagon){\r\n                this.y=startOff?-this.p.random(30,60):this.p.random(this.p.height);this.vx=this.p.random(-1.2,1.2);\r\n                if(this.p.random()<0.1)this.vy=this.p.random(6,9);else if(this.p.random()<0.2)this.vy=this.p.random(0.5,1.5);else this.vy=this.p.random(2,5);\r\n                this.size=25;this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.y=startOff?-this.p.random(60,120):this.p.random(this.p.height);this.vx=this.p.random(-0.5,0.5);this.vy=this.p.random(1,3);\r\n                this.w=this.p.random(28,70);this.h=this.p.random(28,70);this.c=this.p.color(235,235,255);\r\n              }\r\n            } else {\r\n              this.x=startOff?this.p.width+this.p.random(10,40):this.p.random(this.p.width);this.y=this.p.random(this.p.height);\r\n              if(this.isOctagon){\r\n                let baseX=this.p.random(-2.5,-0.5);if(ww>=1025&&ww>wh)baseX*=4.5;\r\n                if(this.p.random()<0.1)baseX*=2;else if(this.p.random()<0.2)baseX*=0.5;this.vx=baseX;this.vy=this.p.random(-0.3,0.3);this.size=25;\r\n                this.c=this.p.random(this.GOLD);\r\n              } else {\r\n                this.vx=this.p.random(-3,-1);this.vy=this.p.random(-0.5,0.5);\r\n                if(ww>=1025&&ww>wh){this.w=this.p.random(33,105);this.h=this.p.random(33,105);}\r\n                else{this.w=this.p.random(30,75);this.h=this.p.random(30,75);}this.c=this.p.color(235,235,255);\r\n              }\r\n            }\r\n            this.rotation=0;this.rotationSpeed=this.p.random(-1,1);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();\r\n            pAny.translate(this.x+(this.isOctagon?this.size/2:this.w/2),this.y+(this.isOctagon?this.size/2:this.h/2));\r\n            pAny.rotate(pAny.radians(this.rotation));pAny.fill(this.c);pAny.noStroke();\r\n            if(this.isOctagon)this.drawOctagon(pAny,0,0,this.size);else{pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.w,this.h);}\r\n            pAny.pop();\r\n          }\r\n          drawOctagon(pAny:any,x:number,y:number,size:number){\r\n            const step=pAny.TWO_PI/8;pAny.beginShape();\r\n            for(let i=0;i<8;i++){const ang=i*step;const px=x+Math.cos(ang)*size/2;const py=y+Math.sin(ang)*size/2;pAny.vertex(px,py);}\r\n            pAny.endShape(pAny.CLOSE);\r\n          }\r\n          overlaps(o:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=o.isOctagon?o.size:o.w;const h2=o.isOctagon?o.size:o.h;\r\n            return !(this.x+w1<o.x||this.x>o.x+w2||this.y+h1<o.y||this.y>o.y+h2);\r\n          }\r\n          resolveCollision(other:any){\r\n            const w1=this.isOctagon?this.size:this.w;const h1=this.isOctagon?this.size:this.h;const w2=other.isOctagon?other.size:other.w;const h2=other.isOctagon?other.size:other.h;\r\n            const overlapX=Math.min(this.x+w1,other.x+w2)-Math.max(this.x,other.x);const overlapY=Math.min(this.y+h1,other.y+h2)-Math.max(this.y,other.y);\r\n            if(overlapX<overlapY){\r\n              if(this.x<other.x){this.x-=overlapX/2;other.x+=overlapX/2;}else{this.x+=overlapX/2;other.x-=overlapX/2;}this.vx*=-1;other.vx*=-1;\r\n            } else {\r\n              if(this.y<other.y){this.y-=overlapY/2;other.y+=overlapY/2;}else{this.y+=overlapY/2;other.y-=overlapY/2;}this.vy*=-1;other.vy*=-1;\r\n            }\r\n          }\r\n        }\r\n\r\n        class Particle {\r\n          p:any;x:number;y:number;vx:number;vy:number;lifespan:number;c:any;\r\n          constructor(p:any,x:number,y:number,lifespan=255,c=p.color(255,215,0),srcVx=0,srcVy=0,mul:number|null=null){\r\n            this.p=p;this.x=x;this.y=y;this.lifespan=lifespan;this.c=c;\r\n            const srcSpeed=Math.hypot(srcVx,srcVy);\r\n            let speed=p.map(srcSpeed,0,5,1,3);speed=p.constrain(speed,1.2,3.5);if(mul!=null)speed*=mul;\r\n            const ang=p.random(0,p.TWO_PI);this.vx=Math.cos(ang)*speed+srcVx*0.1;this.vy=Math.sin(ang)*speed+srcVy*0.1;\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;}\r\n          display(pAny:any){pAny.noStroke();pAny.fill(this.c.levels[0],this.c.levels[1],this.c.levels[2],this.lifespan);pAny.ellipse(this.x,this.y,4,4);}\r\n          isDead(){return this.lifespan<=0;}\r\n        }\r\n\r\n        class Projectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;ux:number;uy:number;radius:number;lifespan:number;trail:{x:number;y:number;alpha:number}[];color:any;\r\n          minSpeed=0.6;maxSpeed=12;speed=this.minSpeed;targetSpeed=8;acceleration=3;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number){\r\n            this.p=p;this.x=x;this.y=y;\r\n            const mag=Math.hypot(vx,vy)||1;\r\n            this.ux=vx/mag;this.uy=vy/mag;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;this.radius=6;this.lifespan=500;this.trail=[];this.color=p.color(200,150,255);\r\n          }\r\n          update(delta:number){\r\n            // accelerate speed toward target, direction unchanged\r\n            this.speed+=(this.targetSpeed-this.speed)*this.acceleration*delta;\r\n            if(this.speed<this.minSpeed)this.speed=this.minSpeed;if(this.speed>this.maxSpeed)this.speed=this.maxSpeed;\r\n            this.vx=this.ux*this.speed;this.vy=this.uy*this.speed;\r\n            this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;\r\n            this.trail.push({x:this.x,y:this.y,alpha:160});if(this.trail.length>20)this.trail.shift();\r\n            for(let i=0;i<this.trail.length;i++)this.trail[i].alpha*=0.8;\r\n          }\r\n          display(pAny:any){\r\n            for(let i=0;i<this.trail.length;i++){const t=this.trail[i];pAny.fill(200,150,255,t.alpha);pAny.noStroke();pAny.ellipse(t.x,t.y,this.radius*2,this.radius*2);}\r\n            pAny.fill(this.color);pAny.noStroke();pAny.ellipse(this.x,this.y,this.radius*2,this.radius*2);\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<0||this.x>vw||this.y<0||this.y>vh;}\r\n        }\r\n\r\n        class RectangleProjectile {\r\n          p:any;x:number;y:number;vx:number;vy:number;size:number;lifespan:number;maxLifespan:number;color:any;rotation:number;rotationSpeed:number;\r\n          constructor(p:any,x:number,y:number,vx:number,vy:number,color:string){\r\n            this.p=p;this.x=x;this.y=y;this.size=p.random(8,20);const factor=this.p.map(this.size,8,20,1,2);this.vx=vx*factor;this.vy=vy*factor;\r\n            this.lifespan=80;this.maxLifespan=this.lifespan;this.color=p.color(color);this.rotation=p.random(360);this.rotationSpeed=p.random(-20,20);\r\n          }\r\n          update(delta:number){this.x+=this.vx*delta;this.y+=this.vy*delta;this.lifespan-=1*delta;this.rotation+=this.rotationSpeed*delta;}\r\n          display(pAny:any){\r\n            pAny.push();pAny.translate(this.x,this.y);pAny.rotate(pAny.radians(this.rotation));\r\n            const a=pAny.map(this.lifespan,0,this.maxLifespan,0,255);pAny.fill(this.color.levels[0],this.color.levels[1],this.color.levels[2],a);\r\n            pAny.noStroke();pAny.rectMode(pAny.CENTER);pAny.rect(0,0,this.size,this.size);pAny.pop();\r\n          }\r\n          isDead(vw:number,vh:number){return this.lifespan<=0||this.x<-50||this.x>vw+50||this.y<-50||this.y>vh+50;}\r\n        }\r\n      }; // end sketch\r\n\r\n      // ----- mount / resize / cleanup -----\r\n      requestAnimationFrame(() => {\r\n        if (!alive || !el.isConnected) return;\r\n\r\n        if (q5Ref.current) {\r\n          try { q5Ref.current.remove?.(); } catch {}\r\n          q5Ref.current = null;\r\n        }\r\n        let instance: any;\r\n        try { instance = new q5(sketch, el); }\r\n        catch (err) { console.error('[GameCanvas] q5 init error', err); return; }\r\n        q5Ref.current = instance;\r\n\r\n        if (pauseHiddenRef.current && 'IntersectionObserver' in window) {\r\n          io = new IntersectionObserver(([entry]) => {\r\n            visibleRef.current = entry.isIntersecting;\r\n            try {\r\n              if (entry.isIntersecting) q5Ref.current?.loop?.();\r\n              else q5Ref.current?.noLoop?.();\r\n            } catch {}\r\n          }, { threshold: 0.01 });\r\n          io.observe(el);\r\n        }\r\n\r\n        let ro: ResizeObserver | null = null;\r\n        const vv: VisualViewport | undefined = (window as any).visualViewport;\r\n        let lastW = 0, lastH = 0;\r\n\r\n        const resizeToHost = () => {\r\n          const host = hostRef.current;\r\n          const inst = q5Ref.current;\r\n          if (!host || !host.isConnected || !inst?.resizeCanvas) return;\r\n          const w = Math.max(1, Math.round(host.offsetWidth));\r\n          const h = Math.max(1, Math.round(host.offsetHeight));\r\n          if (w === lastW && h === lastH) return;\r\n          lastW = w; lastH = h;\r\n          try { inst.resizeCanvas(w, h); } catch (e) { console.warn('[GameCanvas] resize skipped', e); }\r\n        };\r\n\r\n        onResize = () => requestAnimationFrame(resizeToHost);\r\n        window.addEventListener('resize', onResize);\r\n\r\n        if ('ResizeObserver' in window) {\r\n          ro = new ResizeObserver(() => requestAnimationFrame(resizeToHost));\r\n          ro.observe(el);\r\n        }\r\n\r\n        window.addEventListener('orientationchange', onResize);\r\n        vv?.addEventListener('resize', onResize);\r\n        vv?.addEventListener('scroll', onResize);\r\n\r\n        const onFs = () => requestAnimationFrame(resizeToHost);\r\n        document.addEventListener('fullscreenchange', onFs);\r\n\r\n        requestAnimationFrame(resizeToHost);\r\n\r\n        cleanupRef.current = () => {\r\n          const instAny = q5Ref.current as any;\r\n          if (instAny && typeof instAny._pointerCleanup === 'function') {\r\n            try { instAny._pointerCleanup(); } catch {}\r\n          }\r\n          if (io) io.disconnect();\r\n          if (onResize) window.removeEventListener('resize', onResize);\r\n          document.removeEventListener('fullscreenchange', onFs);\r\n          ro?.disconnect();\r\n          vv?.removeEventListener('resize', onResize);\r\n          vv?.removeEventListener('scroll', onResize);\r\n          if (q5Ref.current?.remove) q5Ref.current.remove();\r\n          q5Ref.current = null;\r\n          el.replaceChildren();\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      alive = false;\r\n      cleanupRef.current?.();\r\n      cleanupRef.current = null;\r\n    };\r\n  }, []); // run once\r\n\r\n  return <div className=\"evade-the-rock\" ref={hostRef} style={{ width: '100vw', height: '100dvh' }} />;\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["GameCanvas","onCoinsChange","highScore","onGameOver","onReady","pauseWhenHidden","demoMode","overlayActive","allowSpawns","hostRef","useRef","q5Ref","visibleRef","cleanupRef","coinsChangeRef","gameOverRef","readyRef","highScoreRef","pauseHiddenRef","demoRef","overlayRef","allowSpawnsRef","current","isRealMobile","useRealMobileViewport","useEffect","alive","io","onResize","then","q5mod","q5","default","el","isConnected","replaceChildren","remove","sketch","p","circle","verticalMode","rectangles","octagons","particles","projectiles","lastSpawnTime","lastOctagonSpawnTime","rectangleSpawnRate","coins","gameOver","prevGameOver","lastDemoFlag","lastFiredTime","cooldownDuration","MAX_PARTICLES","MAX_PROJECTILES","dragPointerId","lastTouch","primaryCandidateId","primaryTapInfo","tapCandidates","Map","baseImpulse","movingUp","movingDown","movingLeft","movingRight","GOLD_COLORS","scratchXY","x","y","canSpawn","restartGame","length","Circle","height","millis","burstRectangles","cx","cy","k","angle","TWO_PI","speed","random","vx","Math","cos","vy","sin","push","RectangleProjectile","splice","setup","w","offsetWidth","h","offsetHeight","pixelDensity","frameRate","createCanvas","style","touchAction","canvas","overscrollBehavior","webkitUserSelect","userSelect","getCanvasCoords","e","r","getBoundingClientRect","clientX","left","width","clientY","top","onDown","pointerId","x0","y0","t0","set","preventDefault","onMove","dx0","dy0","hypot","promoteToDrag","setPointerCapture","dx","dy","dist","speedFactor","log2","force","ti","get","tryFire","now","Projectile","onUp","releasePointerCapture","dt","moved","delete","onCancel","addEventListener","passive","_pointerCleanup","removeEventListener","window","innerWidth","innerHeight","color","restart","draw","demo","ax","ay","background","delta","deltaTime","nowMillis","vw","vh","stopHorizontal","stopVertical","evadeX","evadeY","danger","rect","distSq","sqrt","attractX","attractY","target","reduce","a","b","da","size","d","autoEvade","moveUp","moveDown","moveLeft","moveRight","update","display","inView","filter","maxRectangles","ww","Shape","isNaN","spawnRectangles","i","overlaps","j","proj","projSize","radius","projX","projY","projH","r1","r2","resolveCollision","updateRectangles","spawnOctagons","buffer","o","Particle","c","abs","numParticles","whole","floor","frac","updateOctagons","blendMode","ADD","part","isDead","BLEND","isNewHigh","pAny","elapsed","noStroke","fill","ellipse","drawCooldownRing","keyPressed","key","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","keyReleased","constructor","this","trail","damp","pow","shift","n","pos","map","other","isOctagon","sumR","max","min","rotation","rotationSpeed","startOff","isOct","vertical","GOLD","reset","wh","baseX","translate","rotate","radians","drawOctagon","rectMode","CENTER","pop","step","beginShape","ang","px","py","vertex","endShape","CLOSE","w1","h1","w2","h2","overlapX","overlapY","lifespan","srcVx","srcVy","mul","srcSpeed","constrain","levels","minSpeed","maxSpeed","targetSpeed","acceleration","mag","ux","uy","alpha","t","factor","maxLifespan","requestAnimationFrame","instance","err","console","error","IntersectionObserver","entry","isIntersecting","loop","noLoop","threshold","observe","ro","vv","visualViewport","lastW","lastH","resizeToHost","host","inst","resizeCanvas","round","warn","ResizeObserver","onFs","document","instAny","disconnect","_jsx","className","ref","setIsRealMobile","useState","checkMobile","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid"],"sourceRoot":""}