{"version":3,"file":"951.server.js","mappings":"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","sources":["webpack://personal-site/./src/dynamic-app/lib/palette-controller.ts","webpack://personal-site/./src/utils/context-providers/shadow-root-context.tsx","webpack://personal-site/./src/dynamic-app/preload-dynamic-app-route.ts","webpack://personal-site/./src/dynamic-app/lib/documentObserver.ts","webpack://personal-site/./src/ssr/dynamic-app/UIcards+sort.tsx","webpack://personal-site/./src/ssr/logic/dynamic-alt-observer.ts","webpack://personal-site/./src/dynamic-app/lib/svg-icon-map.ts","webpack://personal-site/./src/dynamic-app/ssr-app/dynamic-theme.route.tsx","webpack://personal-site/./src/dynamic-app/lib/colorString.ts","webpack://personal-site/./src/utils/context-providers/style-injector.ts"],"sourcesContent":["// src/dynamic-app/lib/palette-controller.ts\r\n\r\nexport type Quartet = [string, string, string, string];\r\nexport type Triplet = [string, string, string];\r\n\r\nconst WHITE = '#FFFFFF';\r\n\r\n// resolve alt → palette (handles trailing spaces too)\r\nexport function resolvePalette(\r\n  altRaw: string | null | undefined,\r\n  colorMapping: Record<string, Quartet | undefined>\r\n): Quartet | null {\r\n  if (!altRaw) return null;\r\n  const exact = colorMapping[altRaw];\r\n  if (Array.isArray(exact)) return exact as Quartet;\r\n  const trimmed = colorMapping[altRaw.trim()];\r\n  if (Array.isArray(trimmed)) return trimmed as Quartet;\r\n  return null;\r\n}\r\n\r\n// compute state from a quartet\r\nexport function computeStateFromPalette(\r\n  q: Quartet | null,\r\n  win: Window = window\r\n): { activeColor: string; movingText: Triplet; lastKnown: string } {\r\n  const palette: Quartet = q ?? [WHITE, WHITE, WHITE, WHITE];\r\n  const [c0, c1, c2, c3] = palette;\r\n\r\n  // desktop/mobile branching for first slot\r\n  const isDesktop = win.innerWidth >= 1024;\r\n  const first = isDesktop ? (c1 ?? WHITE) : (c0 ?? WHITE);\r\n\r\n  const movingText: Triplet = [first, c1 ?? WHITE, c3 ?? c2 ?? WHITE];\r\n  const activeColor = c2 ?? WHITE;\r\n\r\n  return { activeColor, movingText, lastKnown: activeColor };\r\n}\r\n","// src/utils/context-providers/shadow-root-context.tsx\r\nimport React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n\r\ntype ShadowRootFn = () => ShadowRoot | null;\r\ntype StyleSheetRaw = string;\r\n\r\nconst hasDOM = typeof document !== 'undefined';\r\nconst hasConstructedSheets =\r\n  hasDOM &&\r\n  typeof (globalThis as any).Document !== 'undefined' &&\r\n  'adoptedStyleSheets' in (Document.prototype as any) &&\r\n  typeof (globalThis as any).CSSStyleSheet !== 'undefined' &&\r\n  'replaceSync' in (CSSStyleSheet.prototype as any);\r\n\r\nconst isShadowRoot = (node: any): node is ShadowRoot =>\r\n  typeof (globalThis as any).ShadowRoot !== 'undefined' && node instanceof (globalThis as any).ShadowRoot;\r\n\r\ntype Ctx = {\r\n  getShadowRoot: ShadowRootFn;\r\n  injectStyle: (css: StyleSheetRaw, id: string) => void;\r\n  injectLink: (href: string, id?: string) => void;\r\n  removeStyle?: (id: string) => void;\r\n} | null;\r\n\r\nconst ShadowRootContext = createContext<Ctx>(null);\r\n\r\nlet warnedOnce = false;\r\n\r\nexport const useShadowRoot = () => {\r\n  const ctx = useContext(ShadowRootContext);\r\n  if (!ctx) {\r\n    if (!warnedOnce) {\r\n      // Dev-friendly, harmless in prod too; only once.\r\n      console.warn('useShadowRoot called outside provider; falling back to document.');\r\n      warnedOnce = true;\r\n    }\r\n\r\n    const injectStyle = (css: string, id: string) => {\r\n      if (!hasDOM) return;\r\n      const existing = document.head.querySelector<HTMLStyleElement>(`style[data-style-id=\"${id}\"]`);\r\n      if (existing) return;\r\n      const style = document.createElement('style');\r\n      style.dataset.styleId = id;\r\n      style.textContent = css;\r\n      document.head.appendChild(style);\r\n    };\r\n\r\n    const injectLink = (href: string, id?: string) => {\r\n      if (!hasDOM) return;\r\n      const selector = id\r\n        ? `link[data-style-id=\"${id}\"]`\r\n        : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n      if (document.head.querySelector(selector)) return;\r\n      const link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = href;\r\n      if (id) link.dataset.styleId = id;\r\n      document.head.appendChild(link);\r\n    };\r\n\r\n    const removeStyle = (id: string) => {\r\n      if (!hasDOM) return;\r\n      document.head.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n    };\r\n\r\n    return {\r\n      getShadowRoot: () => null,\r\n      injectStyle,\r\n      injectLink,\r\n      removeStyle,\r\n    };\r\n  }\r\n  return ctx;\r\n};\r\n\r\nexport function ShadowRootProvider({\r\n  getShadowRoot,\r\n  children,\r\n}: {\r\n  getShadowRoot: ShadowRootFn;\r\n  children: ReactNode;\r\n}) {\r\n  // Cache constructed sheets per ID (per provider)\r\n  const sheetCacheRef = useRef<Map<string, CSSStyleSheet>>(new Map());\r\n\r\n  const injectStyle = (css: string, id: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // If no shadow root, gracefully inject into document.head\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      const existing = document.head.querySelector<HTMLStyleElement>(`style[data-style-id=\"${id}\"]`);\r\n      if (existing) return;\r\n      const style = document.createElement('style');\r\n      style.dataset.styleId = id;\r\n      style.textContent = css;\r\n      document.head.appendChild(style);\r\n      return;\r\n    }\r\n\r\n    // Shadow root path\r\n    if (hasConstructedSheets) {\r\n      let sheet = sheetCacheRef.current.get(id);\r\n      if (!sheet) {\r\n        sheet = new (CSSStyleSheet as any)();\r\n        sheet.replaceSync(css);\r\n        sheetCacheRef.current.set(id, sheet);\r\n      }\r\n      if (!root.adoptedStyleSheets.includes(sheet)) {\r\n        root.adoptedStyleSheets = [...root.adoptedStyleSheets, sheet];\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Fallback <style> in shadow root\r\n    if (root.querySelector(`style[data-style-id=\"${id}\"]`)) return;\r\n    const style = document.createElement('style');\r\n    style.textContent = css;\r\n    (style as any).dataset.styleId = id;\r\n    root.appendChild(style);\r\n  };\r\n\r\n  const injectLink = (href: string, id?: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // If no shadow root, use document.head\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      const selector = id\r\n        ? `link[data-style-id=\"${id}\"]`\r\n        : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n      if (document.head.querySelector(selector)) return;\r\n      const link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = href;\r\n      if (id) (link as any).dataset.styleId = id;\r\n      document.head.appendChild(link);\r\n      return;\r\n    }\r\n\r\n    // Shadow root link injection\r\n    const selector = id ? `link[data-style-id=\"${id}\"]` : `link[rel=\"stylesheet\"][href=\"${href}\"]`;\r\n    if (root.querySelector(selector)) return;\r\n    const link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = href;\r\n    if (id) (link as any).dataset.styleId = id;\r\n    root.appendChild(link);\r\n  };\r\n\r\n  const removeStyle = (id: string) => {\r\n    const root = getShadowRoot();\r\n\r\n    // Remove from doc head if no shadow root\r\n    if (!isShadowRoot(root)) {\r\n      if (!hasDOM) return;\r\n      document.head.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n      return;\r\n    }\r\n\r\n    if (hasConstructedSheets) {\r\n      const sheet = sheetCacheRef.current.get(id);\r\n      if (sheet) {\r\n        root.adoptedStyleSheets = root.adoptedStyleSheets.filter((s) => s !== sheet);\r\n      }\r\n      return;\r\n    }\r\n    root.querySelector(`style[data-style-id=\"${id}\"]`)?.remove();\r\n  };\r\n\r\n  return (\r\n    <ShadowRootContext.Provider value={{ getShadowRoot, injectStyle, injectLink, removeStyle }}>\r\n      {children}\r\n    </ShadowRootContext.Provider>\r\n  );\r\n}\r\n","import fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type DynThemeCache = {\r\n  icons?: Record<string, string>;\r\n  images?: any[];\r\n  seed?: number; // informational only\r\n};\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: DynThemeCache = {};\r\nlet inFlight: Promise<DynThemeCache> | null = null;\r\n\r\nexport function getPreloadedDynamicTheme(): DynThemeCache {\r\n  return cache;\r\n}\r\n\r\nexport function primeDynamicThemeFromSSR(data?: Partial<DynThemeCache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nexport async function whenDynamicThemePreloadReady(): Promise<DynThemeCache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return (list || []).reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url;\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\nexport async function ensureDynamicThemeIcons(): Promise<Record<string, string>> {\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown = [];\r\n  try { iconsRaw = await fetchSVGIcons(); } catch {}\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\n/**\r\n * IMPORTANT: no seeding/reshuffle here.\r\n * If SSR provided images, we keep them as-is.\r\n * If not, we fetch and keep the API order.\r\n */\r\nexport async function ensureDynamicThemeImages(): Promise<any[]> {\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown = [];\r\n  try { imagesRaw = await fetchImages(); } catch {}\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return cache.images;\r\n}\r\n\r\nexport async function ensureDynamicThemePreload(): Promise<DynThemeCache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise\r\n    .all([ensureDynamicThemeIcons(), ensureDynamicThemeImages()])\r\n    .then(([icons, images]) => {\r\n      cache = { ...cache, icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => { inFlight = null; });\r\n\r\n  return inFlight;\r\n}\r\n\r\n/* ---- hydrate from SSR bootstrap (window.__DYNAMIC_THEME_PRELOAD__) ---- */\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_THEME_PRELOAD__?: DynThemeCache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_THEME_PRELOAD__) {\r\n  primeDynamicThemeFromSSR((window as any).__DYNAMIC_THEME_PRELOAD__);\r\n}\r\n","// setupIntersectionObserver.ts\r\nlet observer: IntersectionObserver | null = null;\r\n\r\nconst setupIntersectionObserver = (pauseAnimation: boolean, rootElement: Document | ShadowRoot = document) => {\r\n  if (observer) {\r\n    observer.disconnect();\r\n    observer = null;\r\n  }\r\n\r\n  if (pauseAnimation) return;\r\n\r\n  const applyTransform = (percentage: number, imageContainer: HTMLElement, imageContainer2: HTMLElement) => {\r\n    if (!imageContainer || !imageContainer2) return;\r\n\r\n    let imageContainerTransform = 'translate(0em, 0em)';\r\n    let imageContainer2Transform = 'translate(1em, -27.8em)';\r\n    let imageContainerZIndex = '5';\r\n    let imageContainer2ZIndex = '1';\r\n\r\n    const width = window.innerWidth;\r\n\r\n    if (width <= 767) {\r\n      if (percentage > 0.35) {\r\n        imageContainerTransform = 'translate(1em, 1.5em)';\r\n        imageContainer2Transform = 'translate(-1em, -29.5em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.15) {\r\n        imageContainerTransform = 'translate(0.5em, 0.75em)';\r\n        imageContainer2Transform = 'translate(-0.5em, -28.9em)';\r\n      } else {\r\n        imageContainer2Transform = 'translate(0em, -28.4em)';\r\n      }\r\n    } else if (width <= 1024) {\r\n      if (percentage > 0.3) {\r\n        imageContainerTransform = 'translate(-1em, 0em)';\r\n        imageContainer2Transform = 'translate(0em, -29em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.15) {\r\n        imageContainerTransform = 'translate(0em, 1em)';\r\n        imageContainer2Transform = 'translate(-1em, -28em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      } else if (percentage <= 0.15) {\r\n        imageContainerTransform = 'translate(-1em, 0em)';\r\n        imageContainer2Transform = 'translate(0em, -29em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      }\r\n    } else if (width > 1025) {\r\n      if (percentage > 0.5) {\r\n        imageContainerTransform = 'translate(0em, 0em)';\r\n        imageContainer2Transform = 'translate(1em, -27.2em)';\r\n        imageContainerZIndex = '1';\r\n        imageContainer2ZIndex = '5';\r\n      } else if (percentage > 0.25) {\r\n        imageContainerTransform = 'translate(1em, 1em)';\r\n        imageContainer2Transform = 'translate(0em, -26em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      } else if (percentage >= 0) {\r\n        imageContainerTransform = 'translate(0em, 0em)';\r\n        imageContainer2Transform = 'translate(1em, -27em)';\r\n        imageContainerZIndex = '5';\r\n        imageContainer2ZIndex = '1';\r\n      }\r\n    }\r\n\r\n    imageContainer.style.transform = imageContainerTransform;\r\n    imageContainer.style.zIndex = imageContainerZIndex;\r\n    imageContainer2.style.transform = imageContainer2Transform;\r\n    imageContainer2.style.zIndex = imageContainer2ZIndex;\r\n  };\r\n\r\n  const observerCallback: IntersectionObserverCallback = (entries) => {\r\n    entries.forEach((entry) => {\r\n      const element = entry.target as HTMLElement;\r\n      const imageContainer = element.querySelector('.image-container') as HTMLElement;\r\n      const imageContainer2 = element.querySelector('.image-container2') as HTMLElement;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const vh = window.innerHeight;\r\n      const vc = vh / 1.6;\r\n      const percentage = Math.max(0, Math.min(rect.height, vc - rect.top)) / rect.height;\r\n\r\n      applyTransform(percentage, imageContainer, imageContainer2);\r\n    });\r\n  };\r\n\r\n  const observerOptions: IntersectionObserverInit = {\r\n    threshold: Array.from({ length: 101 }, (_, i) => i / 100),\r\n  };\r\n\r\n  observer = new IntersectionObserver(observerCallback, observerOptions);\r\n\r\n  const cards = rootElement.querySelectorAll('.card-container');\r\n  cards.forEach((card, index) => {\r\n    if (index < 3) {\r\n      const rect = card.getBoundingClientRect();\r\n      const vh = window.innerHeight;\r\n      const vc = vh / 2;\r\n      const percentage = Math.max(0, Math.min(rect.height, vc - rect.top)) / rect.height;\r\n\r\n      const img1 = card.querySelector('.image-container') as HTMLElement;\r\n      const img2 = card.querySelector('.image-container2') as HTMLElement;\r\n      applyTransform(percentage, img1, img2);\r\n    }\r\n\r\n    observer.observe(card);\r\n  });\r\n};\r\n\r\nexport default setupIntersectionObserver;\r\n","import { ensureDynamicThemePreload } from '../../dynamic-app/preload-dynamic-app-route';\r\nimport setupIntersectionObserver from '../../dynamic-app/lib/documentObserver';\r\nimport { createSsrAltObserver } from '../logic/dynamic-alt-observer';\r\nimport { colorMapping2 } from '../../dynamic-app/lib/colorString';\r\n\r\n/* =========================\r\n   Config / selectors\r\n   ========================= */\r\nconst SEL = {\r\n  list: '.UI-card-divider',\r\n  card: '.card-container',\r\n  imgPref: '.ui-image2',    // prefer this image\r\n  imgFallback: '.ui-image1' // fallback image\r\n};\r\n\r\n/* =========================\r\n   Helpers\r\n   ========================= */\r\n\r\n// normalize for safer alphabetic sorting (accent/case/numeric)\r\nfunction normalizeForSort(s?: string | null) {\r\n  return (s || '')\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .toLocaleLowerCase('en');\r\n}\r\nfunction compareAsc(a: string, b: string) {\r\n  return normalizeForSort(a).localeCompare(normalizeForSort(b), 'en', {\r\n    sensitivity: 'base',\r\n    numeric: true,\r\n    ignorePunctuation: true,\r\n  });\r\n}\r\nfunction compareDesc(a: string, b: string) {\r\n  return -compareAsc(a, b);\r\n}\r\n\r\n// fresh shuffle each call (seedless)\r\nfunction shuffleArray<T>(arr: T[]): T[] {\r\n  const a = [...arr];\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n\r\n// get <img alt> from a card; prefer .ui-image2 then .ui-image1\r\nfunction getAltFromCard(cardEl: HTMLElement): string {\r\n  const img =\r\n    (cardEl.querySelector(SEL.imgPref) as HTMLImageElement | null) ||\r\n    (cardEl.querySelector(SEL.imgFallback) as HTMLImageElement | null);\r\n  return (img?.getAttribute('alt') || '').trim();\r\n}\r\n\r\n// ES2019-safe replaceAll via split/join\r\nfunction replaceAllCompat(h: string, n: string, r: string) {\r\n  return h.split(n).join(r);\r\n}\r\n\r\n// Retag index-based classes if you rely on them for styling\r\nfunction retagIndexClasses(cardEl: HTMLElement, oldIndex: number, newIndex: number) {\r\n  const rewrite = (el: Element) => {\r\n    const node = el as HTMLElement;\r\n    const cls = node.className;\r\n    if (typeof cls === 'string' && cls) {\r\n      let next = cls;\r\n      next = replaceAllCompat(next, `custom-card-${oldIndex}-2`, `custom-card-${newIndex}-2`);\r\n      next = replaceAllCompat(next, `custom-card-${oldIndex}`, `custom-card-${newIndex}`);\r\n      node.className = next;\r\n    }\r\n  };\r\n  rewrite(cardEl);\r\n  cardEl.querySelectorAll('*').forEach(rewrite);\r\n}\r\n\r\n// tiny debounce\r\nfunction debounce<F extends (...args: any[]) => void>(fn: F, ms = 120) {\r\n  let t: any;\r\n  return (...args: Parameters<F>) => {\r\n    clearTimeout(t);\r\n    t = setTimeout(() => fn(...args), ms);\r\n  };\r\n}\r\n\r\n// hex (#rrggbb) -> rgba(r,g,b,a) with fallback to original if parse fails\r\nfunction hexToRgba(hex: string, alpha = 0.65): string {\r\n  const m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec((hex || '').trim());\r\n  if (!m) return hex;\r\n  const r = parseInt(m[1], 16);\r\n  const g = parseInt(m[2], 16);\r\n  const b = parseInt(m[3], 16);\r\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n}\r\n\r\n/* =========================\r\n   SortBy chrome color from current DOM order\r\n   ========================= */\r\n\r\n// Rule: ≥1025px → 3rd card, 768–1024 → 2nd card, <768 → 1st card.\r\n// Use that card’s alt → colorMapping[alt][1].\r\nfunction computeViewportIndex(width: number) {\r\n  return width >= 1025 ? 2 : width >= 768 ? 1 : 0;\r\n}\r\n\r\nfunction applySortChromeColorFromDomOrder(listContainer: HTMLElement, sortRoot: HTMLElement | null) {\r\n  if (!sortRoot || !listContainer) return;\r\n\r\n  const cards = Array.from(listContainer.querySelectorAll(SEL.card)) as HTMLElement[];\r\n  if (cards.length === 0) return;\r\n\r\n  const idx = computeViewportIndex(window.innerWidth);\r\n  const target = cards[idx];\r\n  if (!target) return;\r\n\r\n  const alt = getAltFromCard(target);\r\n  if (!alt) return;\r\n\r\n  const colors = (colorMapping2 as any)?.[alt];\r\n  const color = Array.isArray(colors) ? (colors[1] || null) : null;\r\n  if (!color) return;\r\n\r\n  const borderRgba = hexToRgba(color, 0.3);\r\n\r\n  (sortRoot as HTMLElement).style.border = `solid 1.6px ${borderRgba}`;\r\n  (sortRoot as HTMLElement).style.boxShadow = `\r\n    0 1px 8px rgba(0,0,0,0.1),\r\n    0 22px 8px rgba(0,0,0,0.08),\r\n    12px 12px ${color}\r\n  `;\r\n}\r\n\r\n/* =========================\r\n   Progressive HQ upgrade (visible first + background queue)\r\n   ========================= */\r\n\r\n// Quick pass: upgrade any images currently visible on screen\r\nfunction upgradeVisibleImages(container: HTMLElement | Document) {\r\n  const imgs = Array.from(container.querySelectorAll('img[data-src-full]')) as HTMLImageElement[];\r\n  const vh = window.innerHeight;\r\n  for (const img of imgs) {\r\n    const rect = img.getBoundingClientRect();\r\n    const visible = rect.bottom > 0 && rect.top < vh;\r\n    const full = (img.dataset as any)?.srcFull;\r\n    if (visible && full && img.src !== full) {\r\n      img.src = full;\r\n      img.removeAttribute('data-src-full');\r\n    }\r\n  }\r\n}\r\n\r\n// Preload a URL with low priority then resolve (no swap here)\r\nfunction preload(fullUrl: string) {\r\n  return new Promise<void>((resolve, reject) => {\r\n    const ghost = new Image();\r\n    try { (ghost as any).decoding = 'async'; } catch {}\r\n    try { (ghost as any).fetchPriority = 'low'; } catch {}\r\n    ghost.onload = () => resolve();\r\n    ghost.onerror = () => resolve(); // tolerate failures; keep LQ\r\n    ghost.src = fullUrl;\r\n  });\r\n}\r\n\r\n// Background queue that eventually swaps every remaining image\r\nlet _bgHQStarted = false;\r\nlet _bgCancel: (() => void) | null = null;\r\n\r\nfunction upgradeAllImagesInBackground(root: Document | HTMLElement, maxConcurrent = 3) {\r\n  if (_bgHQStarted) return _bgCancel || null;\r\n  _bgHQStarted = true;\r\n\r\n  const pool = new Set<Promise<any>>();\r\n  let cancelled = false;\r\n\r\n  const allImgs = Array.from(root.querySelectorAll('img[data-src-full]')) as HTMLImageElement[];\r\n\r\n  // Optional: prioritize by distance from viewport top (still “all”, just nicer order)\r\n  const vhMid = window.scrollY + window.innerHeight / 2;\r\n  allImgs.sort((a, b) => {\r\n    const ra = a.getBoundingClientRect(); const rb = b.getBoundingClientRect();\r\n    const ya = ra.top + window.scrollY; const yb = rb.top + window.scrollY;\r\n    return Math.abs(ya - vhMid) - Math.abs(yb - vhMid);\r\n  });\r\n\r\n  let index = 0;\r\n\r\n  const pump = () => {\r\n    if (cancelled) return;\r\n    while (pool.size < maxConcurrent && index < allImgs.length) {\r\n      const el = allImgs[index++];\r\n      const full = (el.dataset as any)?.srcFull;\r\n      if (!full) continue;\r\n\r\n      const task = preload(full).then(() => {\r\n        if (cancelled) return;\r\n        // If still pointing to LQ and not already swapped, replace\r\n        if (el.isConnected && el.getAttribute('data-src-full') === full) {\r\n          // keep lazy decoding; just change the source\r\n          el.src = full;\r\n          el.removeAttribute('data-src-full');\r\n        }\r\n      }).finally(() => {\r\n        pool.delete(task);\r\n        pump();\r\n      });\r\n\r\n      pool.add(task);\r\n    }\r\n  };\r\n\r\n  pump();\r\n\r\n  const cancel = () => { cancelled = true; };\r\n  _bgCancel = cancel;\r\n  return cancel;\r\n}\r\n\r\n/* =========================\r\n   Main enhancer (DOM-driven, seed-proof for A↔Z)\r\n   ========================= */\r\n\r\nexport function enhanceDynamicThemeSSR(opts: { onColorChange?: (alt: string, colors: string[]) => void } = {}) {\r\n  const { onColorChange } = opts;\r\n\r\n  const host = document.getElementById('dynamic-theme-ssr');\r\n  if (!host || (host as any).__enhanced) return;\r\n  (host as any).__enhanced = true;\r\n\r\n  // make the SSR section interactive now\r\n  host.classList.remove('ssr-initial');\r\n  (host as HTMLElement).style.pointerEvents = 'auto';\r\n\r\n  // If your CSS was disabling pointer events on the snapshot, force-enable:\r\n  const snapshot = (document.getElementById('dynamic-snapshot') as HTMLElement | null) || host;\r\n  if (snapshot) snapshot.style.pointerEvents = 'auto';\r\n\r\n  const listContainer = snapshot?.querySelector(SEL.list) as HTMLElement | null;\r\n  if (!listContainer) return;\r\n\r\n  // Sort UI bits\r\n  const sortRoot = document.querySelector('#dynamic-sortby-mount .custom-dropdown') as HTMLElement | null;\r\n  const selectEl = sortRoot?.querySelector('.custom-select');\r\n  const arrowEl = sortRoot?.querySelector('.custom-arrow');\r\n  const selectedValueEl = sortRoot?.querySelector('.selected-value h5');\r\n\r\n  let optionsEl = sortRoot?.querySelector('.options-container') as HTMLElement | null;\r\n  if (!optionsEl) {\r\n    optionsEl = document.createElement('div');\r\n    optionsEl.className = 'options-container';\r\n    optionsEl.style.display = 'none';\r\n    optionsEl.innerHTML = `\r\n      <div class=\"option selected\" data-value=\"random\">Randomized</div>\r\n      <div class=\"option\" data-value=\"titleAsc\">A to Z</div>\r\n      <div class=\"option\" data-value=\"titleDesc\">Z to A</div>\r\n    `;\r\n    sortRoot?.appendChild(optionsEl);\r\n  }\r\n\r\n  const openOptions = () => { optionsEl!.style.display = ''; arrowEl?.classList.add('open'); };\r\n  const closeOptions = () => { optionsEl!.style.display = 'none'; arrowEl?.classList.remove('open'); };\r\n  document.addEventListener('mousedown', (e) => { if (!sortRoot?.contains(e.target as Node)) closeOptions(); });\r\n  selectEl?.addEventListener('click', () => {\r\n    const isOpen = optionsEl!.style.display !== 'none';\r\n    isOpen ? closeOptions() : openOptions();\r\n  });\r\n\r\n  const setSelectedLabel = (mode: string) => {\r\n    if (!selectedValueEl) return;\r\n    selectedValueEl.textContent =\r\n      mode === 'titleAsc' ? 'A to Z' :\r\n      mode === 'titleDesc' ? 'Z to A' : 'Randomized';\r\n  };\r\n  const setSelectedClass = (mode: string) => {\r\n    optionsEl!.querySelectorAll('.option').forEach((o) => {\r\n      o.classList.toggle('selected', (o as HTMLElement).getAttribute('data-value') === mode);\r\n    });\r\n  };\r\n\r\n  // Base SSR enhancements (always root = document)\r\n  const prefersReduced = !!(window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches);\r\n  setupIntersectionObserver(prefersReduced, document);\r\n\r\n  // Observer for color dynamics\r\n  let altObs: ReturnType<typeof createSsrAltObserver> | null = null;\r\n  const rearmAlt = () => {\r\n    if (altObs) altObs.dispose();\r\n    altObs = createSsrAltObserver({\r\n      rootElement: document,\r\n      onActivate: (alt1: string) => {\r\n        const colors = (colorMapping2 as any)?.[alt1];\r\n        if (typeof onColorChange === 'function' && colors) onColorChange(alt1, colors);\r\n      },\r\n      onDeactivate: () => { /* no-op */ },\r\n    });\r\n  };\r\n\r\n  const afterReorder = () => {\r\n    // keep your transforms/images work\r\n    setupIntersectionObserver(true, document);\r\n    setupIntersectionObserver(false, document);\r\n\r\n    // ensure observer tracks current nodes\r\n    altObs?.rearm();\r\n\r\n    // apply SortBy color from current DOM order according to viewport rule\r\n    applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n\r\n    // visible first\r\n    upgradeVisibleImages(document);\r\n    // and make sure the background queue is running for the rest\r\n    upgradeAllImagesInBackground(document, 3);\r\n  };\r\n\r\n  // DOM-driven sort (seed-proof): use <img alt> from each card\r\n  optionsEl!.addEventListener('click', (e) => {\r\n    const opt = (e.target as HTMLElement).closest('.option');\r\n    if (!opt) return;\r\n\r\n    const mode = (opt.getAttribute('data-value') as 'random' | 'titleAsc' | 'titleDesc') || 'random';\r\n    const cards = Array.from(listContainer.querySelectorAll(SEL.card)) as HTMLElement[];\r\n\r\n    let ordered: HTMLElement[];\r\n    if (mode === 'random') {\r\n      ordered = shuffleArray(cards);\r\n    } else {\r\n      ordered = [...cards].sort((a, b) => {\r\n        const A = getAltFromCard(a);\r\n        const B = getAltFromCard(b);\r\n        return mode === 'titleAsc' ? compareAsc(A, B) : compareDesc(A, B);\r\n      });\r\n    }\r\n\r\n    // apply to DOM + keep index-based classes in sync\r\n    const frag = document.createDocumentFragment();\r\n    ordered.forEach((el, newIndex) => {\r\n      const idxClass = [...el.classList].find((c) => /^custom-card-\\d+$/.test(c));\r\n      const oldIndex = idxClass ? parseInt(idxClass.split('-').pop()!, 10) : -1;\r\n      if (oldIndex !== -1 && oldIndex !== newIndex) retagIndexClasses(el, oldIndex, newIndex);\r\n      frag.appendChild(el);\r\n    });\r\n    listContainer.appendChild(frag);\r\n\r\n    setSelectedLabel(mode);\r\n    setSelectedClass(mode);\r\n\r\n    closeOptions();\r\n    afterReorder();\r\n  });\r\n\r\n  // Recompute SortBy color on viewport resize (debounced)\r\n  const onResize = debounce(() => {\r\n    applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n    upgradeVisibleImages(document);\r\n    upgradeAllImagesInBackground(document, 3);\r\n  }, 150);\r\n  window.addEventListener('resize', onResize);\r\n\r\n  // Preload only to finish bootstrapping; color is from DOM order (not preload)\r\n  ensureDynamicThemePreload()\r\n    .finally(() => {\r\n      rearmAlt();\r\n      setSelectedLabel('random');\r\n      setSelectedClass('random');\r\n      // initial color from current DOM order\r\n      applySortChromeColorFromDomOrder(listContainer, sortRoot);\r\n      // visible images first\r\n      upgradeVisibleImages(document);\r\n      // then *everything else* via background queue\r\n      upgradeAllImagesInBackground(document, 3);\r\n    });\r\n\r\n  // optional cleanup (enable if your route unmounts)\r\n  // return () => { window.removeEventListener('resize', onResize); altObs?.dispose(); _bgCancel?.(); };\r\n}\r\n","// src/ssr/logic/dynamic-alt-observer.ts\r\n// Instance-scoped alt observer (mirrors your working setupAltObserver)\r\n\r\ntype AltObserverOpts = {\r\n  rootElement?: Document | HTMLElement;        // default: document\r\n  minActiveRatio?: number;                     // default: 0.10\r\n  onActivate: (altRaw: string) => void;        // REQUIRED\r\n  onDeactivate?: (altRaw: string) => void;\r\n};\r\n\r\ntype EntryLike = { target: Element; intersectionRatio: number };\r\n\r\nexport function createSsrAltObserver({\r\n  rootElement = document,\r\n  minActiveRatio = 0.10,\r\n  onActivate,\r\n  onDeactivate,\r\n}: AltObserverOpts) {\r\n  if (typeof onActivate !== 'function') {\r\n    throw new Error('createSsrAltObserver: onActivate callback is required');\r\n  }\r\n\r\n  // keep RAW alt (including trailing spaces), like the working version\r\n  let currentlyActiveAlt: string | null = null;\r\n  let highestVisibility = 0;\r\n  let debounceTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  // 0..1 with 0.01 steps\r\n  const thresholds: number[] = Array.from({ length: 101 }, (_, i) => i / 100);\r\n\r\n  const getImageAlt = (cardEl: Element): string | null => {\r\n    const img =\r\n      (cardEl.querySelector('.ui-image2') as HTMLImageElement | null) ||\r\n      (cardEl.querySelector('.ui-image1') as HTMLImageElement | null);\r\n    return img ? img.getAttribute('alt') : null; // DO NOT trim\r\n  };\r\n\r\n  // Core logic operates on a simplified EntryLike[] so we can reuse it\r\n  const handleEntries = (entries: EntryLike[]) => {\r\n    // most-visible first\r\n    entries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\r\n\r\n    entries.forEach((entry) => {\r\n      const element = entry.target as HTMLElement;\r\n      const alt = getImageAlt(element);\r\n      if (alt == null) return;\r\n\r\n      const visibility = entry.intersectionRatio;\r\n\r\n      if (visibility > minActiveRatio && visibility > highestVisibility) {\r\n        if (currentlyActiveAlt !== alt) {\r\n          if (currentlyActiveAlt && typeof onDeactivate === 'function') {\r\n            try { onDeactivate(currentlyActiveAlt); } catch {}\r\n          }\r\n          try { onActivate(alt); } catch {}\r\n          currentlyActiveAlt = alt;\r\n          highestVisibility = visibility;\r\n        }\r\n      } else if (visibility <= minActiveRatio && currentlyActiveAlt === alt) {\r\n        if (typeof onDeactivate === 'function') {\r\n          try { onDeactivate(alt); } catch {}\r\n        }\r\n        currentlyActiveAlt = null;\r\n        highestVisibility = 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Real IO -> adapt to EntryLike\r\n  const io = new IntersectionObserver(\r\n    (entries) => {\r\n      const simplified: EntryLike[] = entries.map((e) => ({\r\n        target: e.target,\r\n        intersectionRatio: e.intersectionRatio,\r\n      }));\r\n      handleEntries(simplified);\r\n    },\r\n    {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: thresholds,\r\n    }\r\n  );\r\n\r\n  const observeAll = () => {\r\n    const cards = rootElement.querySelectorAll('.card-container');\r\n    cards.forEach((el) => io.observe(el));\r\n  };\r\n\r\n  const triggerInitial = () => {\r\n    if (debounceTimeout) clearTimeout(debounceTimeout);\r\n    debounceTimeout = setTimeout(() => {\r\n      const cards = Array.from(rootElement.querySelectorAll('.card-container'));\r\n      const viewportHeight = window.innerHeight;\r\n\r\n      // Synthetic first-pass, like your working code\r\n      const synthetic: EntryLike[] = cards.map((card) => {\r\n        const rect = (card as HTMLElement).getBoundingClientRect();\r\n        const visibility = Math.max(0, Math.min(rect.height, viewportHeight - rect.top) / rect.height);\r\n        return { target: card, intersectionRatio: visibility };\r\n      });\r\n\r\n      handleEntries(synthetic);\r\n    }, 50);\r\n  };\r\n\r\n  // bootstrap\r\n  observeAll();\r\n  triggerInitial();\r\n\r\n  return {\r\n    dispose() {\r\n      if (debounceTimeout) clearTimeout(debounceTimeout);\r\n      io.disconnect();\r\n      currentlyActiveAlt = null;\r\n      highestVisibility = 0;\r\n    },\r\n    rearm() {\r\n      io.disconnect();\r\n      observeAll();\r\n      triggerInitial();\r\n    },\r\n    debugState() {\r\n      return { currentlyActiveAlt, highestVisibility };\r\n    },\r\n  };\r\n}\r\n\r\nexport default createSsrAltObserver;\r\n","// Reusable helpers for turning icon payloads into safe HTML strings\r\n\r\nexport type IconLike = { title?: string; icon?: string; url?: string };\r\n\r\n/** remove BOM, <?xml …?>, <!DOCTYPE …> so innerHTML gets a clean <svg> root */\r\nexport const stripSvgPreamble = (s = '') =>\r\n  s\r\n    .replace(/^\\uFEFF/, '')\r\n    .replace(/^\\s*<\\?xml[\\s\\S]*?\\?>\\s*/i, '')\r\n    .replace(/^\\s*<!DOCTYPE[\\s\\S]*?>\\s*/i, '')\r\n    .trim();\r\n\r\nexport const isInlineSvg = (s?: string) => {\r\n  if (typeof s !== 'string') return false;\r\n  const t = stripSvgPreamble(s);\r\n  return /^\\s*<svg[\\s\\S]*<\\/svg>\\s*$/i.test(t);\r\n};\r\n\r\nexport const asInlineSvg = (s?: string) => (isInlineSvg(s) ? stripSvgPreamble(s!) : '');\r\n\r\nexport const escapeAttr = (s: string) => String(s).replace(/\"/g, '&quot;');\r\n\r\nexport const toImgHtml = (src?: string) =>\r\n  typeof src === 'string' && src.trim()\r\n    ? `<img src=\"${escapeAttr(src)}\" alt=\"\" aria-hidden=\"true\" />`\r\n    : '';\r\n\r\n/** normalize a plain { name: value } map (from SSR/window) to safe HTML strings */\r\nexport function normalizeIconMap(raw?: Record<string, string>): Record<string, string> {\r\n  const out: Record<string, string> = {};\r\n  for (const [k, v] of Object.entries(raw || {})) {\r\n    out[k] = asInlineSvg(v) || toImgHtml(v);\r\n  }\r\n  return out;\r\n}\r\n\r\n/** build a client icon map from Sanity rows (prefer inline; else URL→<img>) */\r\nexport function toClientIconMap(list: IconLike[] = []): Record<string, string> {\r\n  const out: Record<string, string> = {};\r\n  for (const it of list) {\r\n    if (!it?.title) continue;\r\n    const inline = asInlineSvg(it.icon);\r\n    out[it.title] = inline || toImgHtml(it.url) || toImgHtml(it.icon);\r\n  }\r\n  return out;\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport loadable from '@loadable/component';\r\nimport { createPortal } from 'react-dom';\r\nimport { useSsrData } from '../../utils/context-providers/ssr-data-context';\r\nimport { useStyleInjection } from '../../utils/context-providers/style-injector';\r\n\r\nimport {\r\n  primeDynamicThemeFromSSR as primeFromSSR,\r\n  ensureDynamicThemePreload as ensureDynamicPreload,\r\n} from '../preload-dynamic-app-route';\r\nimport { enhanceDynamicThemeSSR } from '../../ssr/dynamic-app/UIcards+sort';\r\nimport { colorMapping } from '../../dynamic-app/lib/colorString';\r\nimport fetchSVGIcons from '../../dynamic-app/lib/fetchSVGIcons';\r\nimport miscCss from '../../styles/dynamic-app/misc.css?raw';\r\n\r\nimport {\r\n  normalizeIconMap,\r\n  toClientIconMap,\r\n} from '../../dynamic-app/lib/svg-icon-map';\r\nimport type { IconLike } from '../../dynamic-app/lib/svg-icon-map';\r\n\r\n// use the actual export you have\r\nimport { computeStateFromPalette } from '../lib/palette-controller';\r\n\r\n// local types to satisfy TS based on your controller’s API\r\ntype Quartet = [string, string, string, string];\r\ntype Triplet = [string, string, string];\r\n\r\n// client-only chunks\r\nconst Navigation = loadable(() => import('../../dynamic-app/components/navigation'), { ssr: false });\r\nconst FireworksDisplay = loadable(() => import('../../dynamic-app/components/fireworksDisplay'), { ssr: false });\r\nconst Footer = loadable(() => import('../../dynamic-app/components/footer'), { ssr: false });\r\nconst TitleDivider = loadable(() => import('../../dynamic-app/components/title'), { ssr: false });\r\nconst PauseButton = loadable(() => import('../../dynamic-app/components/pauseButton'), { ssr: false });\r\n\r\n// SSR shell (UI cards + sort stub)\r\nconst DynamicTheme = loadable(() => import('../../DynamicTheme.jsx'), { ssr: true });\r\n\r\n/* ---------- portals ---------- */\r\nfunction NavigationPortal(props: {\r\n  items: any[];\r\n  arrow1?: string;\r\n  arrow2?: string;\r\n  activeColor?: string;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useStyleInjection(miscCss, 'dynamic-app-style-misc');\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-nav-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <Navigation\r\n      items={props.items}\r\n      customArrowIcon2={props.arrow1}\r\n      customArrowIcon={props.arrow2}\r\n      activeColor={props.activeColor ?? '#FFFFFF'}\r\n      isInShadow={false}\r\n      scrollLockContainer={undefined}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction FireworksPortal(props: {\r\n  items: any[];\r\n  activeColor: string;\r\n  lastKnownColor: string;\r\n  onToggleFireworks?: (fn: (enabled: boolean) => void) => void;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-fireworks-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <FireworksDisplay\r\n      colorMapping={colorMapping}\r\n      items={props.items}\r\n      activeColor={props.activeColor}\r\n      lastKnownColor={props.lastKnownColor}\r\n      onToggleFireworks={props.onToggleFireworks || (() => {})}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction TitlePortal(props: {\r\n  logoSvg?: string;\r\n  movingTextColors?: Triplet;\r\n  pauseAnimation?: boolean;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-title-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <TitleDivider\r\n      svgIcon={props.logoSvg || ''}\r\n      movingTextColors={props.movingTextColors || ['#FFFFFF', '#FFFFFF', '#FFFFFF']}\r\n      pauseAnimation={!!props.pauseAnimation}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\nfunction PausePortal(props: { onToggle: (isEnabled: boolean) => void }) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-pause-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <div className=\"pause-button-wrapper\">\r\n      <PauseButton toggleP5Animation={props.onToggle} />\r\n    </div>,\r\n    target\r\n  );\r\n}\r\n\r\nfunction FooterPortal(props: {\r\n  arrow1?: string;\r\n  linkArrowIcon?: string;\r\n}) {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  useEffect(() => { setTarget(document.getElementById('dynamic-footer-mount')); }, []);\r\n  if (!target) return null;\r\n  return createPortal(\r\n    <Footer\r\n      customArrowIcon2={props.arrow1}\r\n      linkArrowIcon={props.linkArrowIcon}\r\n    />,\r\n    target\r\n  );\r\n}\r\n\r\n/* ---------- route ---------- */\r\nexport default function DynamicThemeRoute() {\r\n  const ssr = useSsrData();\r\n  const preload = ssr?.preloaded?.dynamicTheme;\r\n\r\n  const [items, setItems] = useState<any[]>(Array.isArray(preload?.images) ? preload!.images : []);\r\n  const [icons, setIcons] = useState<Record<string, string>>(normalizeIconMap(preload?.icons || {}));\r\n  const [pauseAnimation, setPauseAnimation] = useState(false);\r\n\r\n  const [activeColor, setActiveColor] = useState('#FFFFFF');\r\n  const [movingTextColors, setMovingTextColors] = useState<Triplet>(['#FFFFFF', '#FFFFFF', '#FFFFFF']);\r\n  const [lastKnownColor, setLastKnownColor] = useState('#FFFFFF');\r\n\r\n  const fwToggleRef = useRef<((enabled: boolean) => void) | null>(null);\r\n  const handleSetToggleFireworks = (fn: (enabled: boolean) => void) => { fwToggleRef.current = fn; };\r\n  const handlePauseToggle = (isEnabled: boolean) => {\r\n    setPauseAnimation(!isEnabled);\r\n    try { fwToggleRef.current?.(isEnabled); } catch {}\r\n  };\r\n\r\n  useEffect(() => { if (preload) primeFromSSR(preload); }, [preload]);\r\n\r\n  useEffect(() => {\r\n    const w = typeof window !== 'undefined' ? (window as any) : null;\r\n    const boot = w?.__DYNAMIC_THEME_PRELOAD__;\r\n    if (boot) {\r\n      if (Array.isArray(boot.images)) setItems(boot.images);\r\n      if (boot.icons) setIcons(normalizeIconMap(boot.icons));\r\n      primeFromSSR(boot);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let dead = false;\r\n    (async () => {\r\n      try {\r\n        const cache = await ensureDynamicPreload();\r\n        if (!dead && cache) {\r\n          if (!items.length && Array.isArray(cache.images)) setItems(cache.images);\r\n          if (!Object.keys(icons).length && cache.icons) setIcons(normalizeIconMap(cache.icons));\r\n        }\r\n      } catch {}\r\n    })();\r\n    return () => { dead = true; };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let dead = false;\r\n    (async () => {\r\n      if (icons && (icons['arrow1'] || icons['arrow2'] || icons['link-icon'] || icons['logo-small-1'])) return;\r\n      try {\r\n        const raw = (await fetchSVGIcons().catch(() => [])) as IconLike[];\r\n        if (!dead && Array.isArray(raw)) {\r\n          const map = toClientIconMap(raw);\r\n          if (Object.keys(map).length) setIcons(prev => ({ ...map, ...prev }));\r\n        }\r\n      } catch {}\r\n    })();\r\n    return () => { dead = true; };\r\n  }, [icons]);\r\n\r\n  // compute palette-driven state from the enhancer (which gives a Quartet)\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined')\r\n      enhanceDynamicThemeSSR({\r\n        onColorChange: (_alt: string, palette?: string[] | null) => {\r\n          // only accept quartets\r\n          if (!Array.isArray(palette) || palette.length < 4) return;\r\n          const { activeColor: nextActive, movingText: nextTriplet, lastKnown } =\r\n            computeStateFromPalette(palette as Quartet);\r\n\r\n          if (nextActive !== activeColor) {\r\n            setActiveColor(nextActive);\r\n            setLastKnownColor(lastKnown ?? nextActive);\r\n          }\r\n          setMovingTextColors(nextTriplet as Triplet);\r\n        },\r\n      });\r\n  }, [activeColor]);\r\n\r\n  const propsMemo = useMemo(() => ({\r\n    items,\r\n    arrow1: icons['arrow1'] || '',\r\n    arrow2: icons['arrow2'] || '',\r\n    linkArrowIcon: icons['link-icon'] || '',\r\n    logoSmall: icons['logo-small-1'] || '',\r\n  }), [items, icons]);\r\n\r\n  return (\r\n    <>\r\n      <DynamicTheme />\r\n\r\n      <NavigationPortal\r\n        items={propsMemo.items}\r\n        arrow1={propsMemo.arrow1}\r\n        arrow2={propsMemo.arrow2}\r\n        activeColor={activeColor}\r\n      />\r\n\r\n      <FireworksPortal\r\n        items={propsMemo.items}\r\n        activeColor={activeColor}\r\n        lastKnownColor={lastKnownColor}\r\n        onToggleFireworks={handleSetToggleFireworks}\r\n      />\r\n\r\n      <TitlePortal\r\n        logoSvg={propsMemo.logoSmall}\r\n        movingTextColors={movingTextColors}\r\n        pauseAnimation={pauseAnimation}\r\n      />\r\n\r\n      <PausePortal onToggle={handlePauseToggle} />\r\n\r\n      <FooterPortal\r\n        arrow1={propsMemo.arrow1}\r\n        linkArrowIcon={propsMemo.linkArrowIcon}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// Student → color set mapping\r\nexport const colorMapping: Record<string, [string, string, string, string]> = {\r\n  'Yiner Xu ': ['#e9b2c2', '#ffc3d4', '#5f4f53', '#ffc9d8'],\r\n  'Simone Schwartz': ['#d2b098', '#f0be9b', '#5b4e44', '#f2c5a5'],\r\n  'Seth Abrahamson ': ['#a9a9a9', '#b9b9b9', '#292929', '#c0c0c0'],\r\n  'Sanna Anwar': ['#e9d0a0', '#ffe4af', '#2f2d28', '#ffe7b7'],\r\n  'Javi Ortiz': ['#e9afbd', '#ffbfcf', '#2f2a2b', '#ffc5d4'],\r\n  'Janhvi Gokalgandhi': ['#a0e1e9', '#aff7ff', '#282e2f', '#b7f8ff'],\r\n  'Andrew Adamides': ['#bef9da', '#7ca08d', '#262a28', '#9dccb4'],\r\n  'Shozab Raza': ['#e9e0a7', '#fff6b6', '#2f2e29', '#fff7bd'],\r\n  'Baopu Wang': ['#b3c2e9', '#c4d4ff', '#4f535f', '#cad8ff'],\r\n  'Efe Ozalp': ['#6fc1e9', '#78d3ff', '#242b2f', '#85d7ff'],\r\n  'Harry Liao ': ['#abcdb2', '#b5e7be', '#292d2a', '#bceac5'],\r\n  'Jawad Naik': ['#97cfac', '#9bedb9', '#272d29', '#a5efc0'],\r\n};\r\n\r\nexport const colorMapping2: Record<string, [string, string, string, string]> = {\r\n  'Yiner Xu': ['#e9b2c2', '#ffc3d4', '#5f4f53', '#ffc9d8'],\r\n  'Simone Schwartz': ['#d2b098', '#f0be9b', '#5b4e44', '#f2c5a5'],\r\n  'Seth Abrahamson': ['#a9a9a9', '#b9b9b9', '#292929', '#c0c0c0'],\r\n  'Sanna Anwar': ['#e9d0a0', '#ffe4af', '#2f2d28', '#ffe7b7'],\r\n  'Javi Ortiz': ['#e9afbd', '#ffbfcf', '#2f2a2b', '#ffc5d4'],\r\n  'Janhvi Gokalgandhi': ['#a0e1e9', '#aff7ff', '#282e2f', '#b7f8ff'],\r\n  'Andrew Adamides': ['#bef9da', '#7ca08d', '#262a28', '#9dccb4'],\r\n  'Shozab Raza': ['#e9e0a7', '#fff6b6', '#2f2e29', '#fff7bd'],\r\n  'Baopu Wang': ['#b3c2e9', '#c4d4ff', '#4f535f', '#cad8ff'],\r\n  'Efe Ozalp': ['#6fc1e9', '#78d3ff', '#242b2f', '#85d7ff'],\r\n  'Harry Liao': ['#abcdb2', '#b5e7be', '#292d2a', '#bceac5'],\r\n  'Jawad Naik': ['#97cfac', '#9bedb9', '#272d29', '#a5efc0'],\r\n};\r\n\r\n","// src/utils/context-providers/style-injector.ts\r\nimport { useEffect } from 'react';\r\nimport { useShadowRoot } from './shadow-root-context';\r\n\r\n// Augment Window locally so TS always sees the field here\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_STYLE_IDS__?: Set<string>;\r\n  }\r\n}\r\n\r\n// Safe handle to window (SSR-friendly)\r\nconst win: (Window & { __DYNAMIC_STYLE_IDS__?: Set<string> }) | undefined =\r\n  typeof window !== 'undefined' ? window : undefined;\r\n\r\n// Global dedupe set (persisted on window between renders)\r\nconst globalStyleIds: Set<string> = (() => {\r\n  if (!win) return new Set<string>();\r\n  if (!win.__DYNAMIC_STYLE_IDS__) win.__DYNAMIC_STYLE_IDS__ = new Set<string>();\r\n  return win.__DYNAMIC_STYLE_IDS__;\r\n})();\r\n\r\nexport const useStyleInjection = (css: string, id: string) => {\r\n  const { injectStyle, getShadowRoot } = useShadowRoot() || {};\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn('useStyleInjection: id is required for dedupe');\r\n      }\r\n      return;\r\n    }\r\n\r\n    const shadowRoot = getShadowRoot?.();\r\n    const isInShadow = shadowRoot && shadowRoot !== document;\r\n\r\n    if (isInShadow && injectStyle) {\r\n      // Shadow DOM dedupe by ID\r\n      if (!shadowRoot.querySelector(`style[data-style-id=\"${id}\"]`)) {\r\n        injectStyle(css, id); // provider handles DOM append\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Global dedupe (memo + DOM check as a safety)\r\n    if (!globalStyleIds.has(id)) {\r\n      const existing = document.head.querySelector(`style[data-style-id=\"${id}\"]`);\r\n      if (!existing) {\r\n        const styleEl = document.createElement('style');\r\n        styleEl.textContent = css;\r\n        styleEl.dataset.styleId = id;\r\n        document.head.appendChild(styleEl);\r\n      }\r\n      globalStyleIds.add(id);\r\n    }\r\n  }, [css, id, injectStyle, getShadowRoot]);\r\n};\r\n"],"names":["WHITE","resolvePalette","altRaw","colorMapping","exact","Array","isArray","trimmed","trim","computeStateFromPalette","q","win","window","palette","c0","c1","c2","c3","isDesktop","innerWidth","activeColor","movingText","lastKnown","hasDOM","document","hasConstructedSheets","globalThis","Document","prototype","CSSStyleSheet","isShadowRoot","node","ShadowRoot","ShadowRootContext","createContext","warnedOnce","useShadowRoot","ctx","useContext","console","warn","getShadowRoot","injectStyle","css","id","head","querySelector","style","createElement","dataset","styleId","textContent","appendChild","injectLink","href","selector","link","rel","removeStyle","remove","ShadowRootProvider","children","sheetCacheRef","useRef","Map","_jsx","Provider","value","root","sheet","current","get","replaceSync","set","adoptedStyleSheets","includes","filter","s","cache","inFlight","primeDynamicThemeFromSSR","data","async","ensureDynamicThemeIcons","icons","iconsRaw","fetchSVGIcons","reduce","acc","it","title","val","icon","url","length","ensureDynamicThemeImages","images","imagesRaw","fetchImages","ensureDynamicThemePreload","Promise","all","then","finally","__DYNAMIC_THEME_PRELOAD__","observer","setupIntersectionObserver","pauseAnimation","rootElement","disconnect","applyTransform","percentage","imageContainer","imageContainer2","imageContainerTransform","imageContainer2Transform","imageContainerZIndex","imageContainer2ZIndex","width","transform","zIndex","observerOptions","threshold","from","_","i","IntersectionObserver","entries","forEach","entry","element","target","rect","getBoundingClientRect","vc","innerHeight","Math","max","min","height","top","querySelectorAll","card","index","img1","img2","observe","SEL","list","imgPref","imgFallback","normalizeForSort","normalize","replace","toLocaleLowerCase","compareAsc","a","b","localeCompare","sensitivity","numeric","ignorePunctuation","getAltFromCard","cardEl","img","getAttribute","replaceAllCompat","h","n","r","split","join","applySortChromeColorFromDomOrder","listContainer","sortRoot","cards","alt","colors","colorMapping2","color","borderRgba","hex","alpha","m","exec","parseInt","hexToRgba","border","boxShadow","upgradeVisibleImages","container","imgs","vh","visible","bottom","full","srcFull","src","removeAttribute","preload","fullUrl","resolve","reject","ghost","Image","decoding","fetchPriority","onload","onerror","_bgHQStarted","_bgCancel","upgradeAllImagesInBackground","maxConcurrent","pool","Set","cancelled","allImgs","vhMid","scrollY","sort","ra","rb","ya","yb","abs","pump","size","el","task","isConnected","delete","add","cancel","enhanceDynamicThemeSSR","opts","onColorChange","host","getElementById","__enhanced","classList","pointerEvents","snapshot","selectEl","arrowEl","selectedValueEl","optionsEl","className","display","innerHTML","closeOptions","addEventListener","e","contains","setSelectedLabel","mode","setSelectedClass","o","toggle","prefersReduced","matchMedia","matches","altObs","opt","closest","ordered","arr","j","floor","random","shuffleArray","A","B","compareDesc","frag","createDocumentFragment","newIndex","idxClass","find","c","test","oldIndex","pop","rewrite","cls","next","retagIndexClasses","rearm","onResize","fn","ms","t","args","clearTimeout","setTimeout","debounce","dispose","minActiveRatio","onActivate","onDeactivate","Error","currentlyActiveAlt","highestVisibility","debounceTimeout","thresholds","handleEntries","intersectionRatio","getImageAlt","visibility","io","simplified","map","rootMargin","observeAll","triggerInitial","viewportHeight","synthetic","debugState","createSsrAltObserver","alt1","stripSvgPreamble","asInlineSvg","isInlineSvg","toImgHtml","String","normalizeIconMap","raw","out","k","v","Object","Navigation","loadable","resolved","chunkName","isReady","props","key","__webpack_modules__","importAsync","requireAsync","requireSync","__webpack_require__","ssr","FireworksDisplay","Footer","TitleDivider","PauseButton","DynamicTheme","NavigationPortal","setTarget","useState","useStyleInjection","miscCss","useEffect","createPortal","items","customArrowIcon2","arrow1","customArrowIcon","arrow2","isInShadow","scrollLockContainer","undefined","FireworksPortal","lastKnownColor","onToggleFireworks","TitlePortal","svgIcon","logoSvg","movingTextColors","PausePortal","toggleP5Animation","onToggle","FooterPortal","linkArrowIcon","DynamicThemeRoute","useSsrData","preloaded","dynamicTheme","setItems","setIcons","setPauseAnimation","setActiveColor","setMovingTextColors","setLastKnownColor","fwToggleRef","primeFromSSR","w","boot","dead","ensureDynamicPreload","keys","catch","inline","toClientIconMap","prev","_alt","nextActive","nextTriplet","propsMemo","useMemo","logoSmall","_jsxs","_Fragment","isEnabled","globalStyleIds","__DYNAMIC_STYLE_IDS__","shadowRoot","has","styleEl"],"sourceRoot":""}