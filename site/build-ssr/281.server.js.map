{"version":3,"file":"281.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/navigation/nav-menu.tsx"],"sourcesContent":["// src/components/NavMenu.tsx\r\nimport { useEffect, useRef } from \"react\";\r\nimport lottie from \"../load-lottie\"; // proxy that lazy-loads lottie-web (svg build if you configured it)\r\nimport titleData from \"../../svg/efeozalp.json\";\r\nimport githubData from \"../../svg/github.json\";\r\nimport linkedinData from \"../../svg/linkedin.json\";\r\n\r\nconst NavMenu = () => {\r\n  const lottieContainer = useRef<HTMLDivElement>(null);\r\n  const githubContainer = useRef<HTMLDivElement>(null);\r\n  const linkedinContainer = useRef<HTMLDivElement>(null);\r\n\r\n  // Title animation (hover scrubs between frames)\r\n  useEffect(() => {\r\n    const el = lottieContainer.current;\r\n    if (!el) return;\r\n\r\n    let anim: any;\r\n    let mounted = true;\r\n\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: el,\r\n        renderer: \"svg\",\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: titleData,\r\n      });\r\n      if (!mounted) return;\r\n\r\n      const stopAt = 175;\r\n      const startHold = 80;\r\n\r\n      const stepToFrame = (target: number) => {\r\n        const step = () => {\r\n          if (!anim) return;\r\n          const cur = anim.currentFrame;\r\n          if (Math.abs(cur - target) <= 1) {\r\n            anim.goToAndStop(target, true);\r\n            return;\r\n          }\r\n          anim.goToAndStop(cur + (cur < target ? 1 : -1), true);\r\n          requestAnimationFrame(step);\r\n        };\r\n        requestAnimationFrame(step);\r\n      };\r\n\r\n      const onEnterFrame = () => {\r\n        if (anim.currentFrame >= stopAt) {\r\n          anim.removeEventListener(\"enterFrame\", onEnterFrame);\r\n          anim.goToAndStop(stopAt, true);\r\n        }\r\n      };\r\n      const onEnter = () => stepToFrame(startHold);\r\n      const onLeave = () => stepToFrame(stopAt);\r\n\r\n      el.addEventListener(\"mouseenter\", onEnter);\r\n      el.addEventListener(\"mouseleave\", onLeave);\r\n      anim.addEventListener(\"enterFrame\", onEnterFrame);\r\n\r\n      // cleanup listeners on effect re-run (component unmount cleanup below)\r\n      return () => {\r\n        el.removeEventListener(\"mouseenter\", onEnter);\r\n        el.removeEventListener(\"mouseleave\", onLeave);\r\n        anim?.removeEventListener(\"enterFrame\", onEnterFrame);\r\n      };\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      anim?.destroy?.();\r\n      anim = null as any;\r\n    };\r\n  }, []);\r\n\r\n  // GitHub animation (auto plays to a frame, then holds)\r\n  useEffect(() => {\r\n    const el = githubContainer.current;\r\n    if (!el) return;\r\n\r\n    let anim: any;\r\n    let mounted = true;\r\n    let timer: number | null = null;\r\n\r\n    const onEnterFrame = () => {\r\n      if (anim.currentFrame >= 26) {\r\n        anim.removeEventListener(\"enterFrame\", onEnterFrame);\r\n        anim.goToAndStop(26, true);\r\n      }\r\n    };\r\n\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: el,\r\n        renderer: \"svg\",\r\n        loop: false,\r\n        autoplay: false,\r\n        animationData: githubData,\r\n      });\r\n      if (!mounted) return;\r\n\r\n      anim.goToAndStop(0, true);\r\n      timer = window.setTimeout(() => {\r\n        anim.play();\r\n        anim.addEventListener(\"enterFrame\", onEnterFrame);\r\n      }, 1600);\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      if (timer != null) window.clearTimeout(timer);\r\n      anim?.removeEventListener?.(\"enterFrame\", onEnterFrame);\r\n      anim?.destroy?.();\r\n      anim = null as any;\r\n    };\r\n  }, []);\r\n\r\n  // LinkedIn animation (auto plays to a frame, then holds)\r\n  useEffect(() => {\r\n    const el = linkedinContainer.current;\r\n    if (!el) return;\r\n\r\n    let anim: any;\r\n    let mounted = true;\r\n    let timer: number | null = null;\r\n\r\n    const onEnterFrame = () => {\r\n      if (anim.currentFrame >= 20) {\r\n        anim.removeEventListener(\"enterFrame\", onEnterFrame);\r\n        anim.goToAndStop(20, true);\r\n      }\r\n    };\r\n\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: el,\r\n        renderer: \"svg\",\r\n        loop: false,\r\n        autoplay: false,\r\n        animationData: linkedinData,\r\n      });\r\n      if (!mounted) return;\r\n\r\n      anim.goToAndStop(0, true);\r\n      timer = window.setTimeout(() => {\r\n        anim.play();\r\n        anim.addEventListener(\"enterFrame\", onEnterFrame);\r\n      }, 1200);\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      if (timer != null) window.clearTimeout(timer);\r\n      anim?.removeEventListener?.(\"enterFrame\", onEnterFrame);\r\n      anim?.destroy?.();\r\n      anim = null as any;\r\n    };\r\n  }, []);\r\n\r\n  const handleHomeClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav-menu\">\r\n      <div className=\"nav-left\">\r\n        <a\r\n          href=\"/\"\r\n          className=\"home-link\"\r\n          draggable=\"false\"\r\n          onClick={handleHomeClick}\r\n          aria-label=\"Home\"\r\n        >\r\n          <div ref={lottieContainer} className=\"title-lottie\" />\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"nav-right\">\r\n        <a\r\n          href=\"https://github.com/EfeOzalpp\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"github-link\"\r\n          draggable=\"false\"\r\n          aria-label=\"GitHub\"\r\n        >\r\n          <div ref={githubContainer} className=\"github-lottie\" />\r\n        </a>\r\n\r\n        <a\r\n          href=\"https://www.linkedin.com/in/efe-ozalp/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"linkedin-link\"\r\n          draggable=\"false\"\r\n          aria-label=\"LinkedIn\"\r\n        >\r\n          <div ref={linkedinContainer} className=\"linkedin-lottie\" />\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n"],"names":["NavMenu","lottieContainer","useRef","githubContainer","linkedinContainer","useEffect","el","current","anim","mounted","lottie","loadAnimation","container","renderer","loop","autoplay","animationData","titleData","stepToFrame","target","step","cur","currentFrame","Math","abs","goToAndStop","requestAnimationFrame","onEnterFrame","removeEventListener","addEventListener","onEnter","onLeave","destroy","timer","githubData","window","setTimeout","play","clearTimeout","linkedinData","_jsxs","className","children","_jsx","href","draggable","onClick","e","preventDefault","location","reload","ref","rel"],"sourceRoot":""}