{"version":3,"file":"613.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/tooltip/tooltip.ts","webpack://personal-site/./src/utils/tooltip/tooltipInit.ts","webpack://personal-site/./src/ssr/projects/dataviz.enhancer.tsx","webpack://personal-site/./src/utils/content-utility/color-map.ts","webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["// utils/tooltip/global-tooltip.ts\r\nimport '../../styles/tooltip.css';\r\nimport { projectColors } from '../content-utility/color-map';\r\n\r\ntype TooltipInfo = { tags: string[]; backgroundColor: string };\r\nconst tooltipDataCache: Record<string, TooltipInfo> = {};\r\n\r\nconst LOCAL_FALLBACK_TAGS: Record<string, string[]> = {\r\n  'block-g': ['#q5.js Canvas', '#Gamification', '#Lottie Animation'],\r\n};\r\n\r\nconst TITLE_BY_KEY: Record<string, string> = {\r\n  'rotary-lamp': 'Rotary Lamp',\r\n  'ice-scoop': 'Ice Cream Scoop',\r\n  'data-viz': 'Data Visualization',\r\n  'block-g': 'Evade the Rock',\r\n  'dynamic': 'Dynamic App',\r\n};\r\n\r\nfunction bgForKey(key: string) {\r\n  const colorInfo = projectColors[TITLE_BY_KEY[key]];\r\n  const alpha = colorInfo?.tooltipAlpha ?? 0.6;\r\n  return colorInfo ? `rgba(${colorInfo.rgb}, ${alpha})` : 'rgba(85,95,90,0.6)';\r\n}\r\n\r\nfunction createTooltipDOM() {\r\n  const el = document.createElement('div');\r\n  el.id = 'custom-global-tooltip';\r\n  el.style.position = 'fixed';\r\n  el.style.pointerEvents = 'none';\r\n  el.style.zIndex = '9999';\r\n  el.style.opacity = '0';\r\n  el.style.visibility = 'hidden';\r\n  el.style.backdropFilter = 'blur(8px)';\r\n  el.style.color = '#fff';\r\n  el.style.transition = 'opacity 0.3s ease, visibility 0.3s ease';\r\n  el.className = 'custom-tooltip-blur';\r\n  const root = document.getElementById('efe-portfolio') || document.body;\r\n  root.appendChild(el);\r\n  return el as HTMLDivElement;\r\n}\r\n\r\nlet tooltipEl: HTMLDivElement | null = null;\r\nlet currentKey = '';\r\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const fetchTooltipDataForKey = async (key: string): Promise<TooltipInfo> => {\r\n  if (tooltipDataCache[key]) return tooltipDataCache[key];\r\n\r\n  const bg = bgForKey(key);\r\n\r\n  // local fallback\r\n  if (LOCAL_FALLBACK_TAGS[key]) {\r\n    const info = { tags: LOCAL_FALLBACK_TAGS[key], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n\r\n  // CMS fetch by slug\r\n  try {\r\n    const client = (await import('../sanity')).default;\r\n    const res = await client.fetch<{ tags?: string[] } | null>(\r\n      `*[_type==\"mediaBlock\" && slug.current == $key][0]{ tags }`,\r\n      { key }\r\n    );\r\n    const info: TooltipInfo = { tags: res?.tags ?? [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  } catch {\r\n    const info: TooltipInfo = { tags: [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n};\r\n\r\nconst showTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '1';\r\n  tooltipEl.style.visibility = 'visible';\r\n  hideTimeout = setTimeout(() => hideTooltip(), 1_500);\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '0';\r\n  tooltipEl.style.visibility = 'hidden';\r\n  currentKey = '';\r\n};\r\n\r\nfunction positionTooltip(x: number, y: number) {\r\n  if (!tooltipEl) return;\r\n  const rect = tooltipEl.getBoundingClientRect();\r\n  const padding = 0;\r\n  const vw = window.innerWidth;\r\n  const vh = window.innerHeight;\r\n\r\n  const nearTop = y < rect.height + padding + 20;\r\n  const nearBottom = y + rect.height + padding > vh - 20;\r\n  const nearRight = x + rect.width + padding > vw - 20;\r\n  const nearLeft = x < rect.width + padding + 20;\r\n\r\n  let left: number, top: number;\r\n  if (nearBottom) { top = y - rect.height - padding - 8; left = x - rect.width * 0; }\r\n  else if (nearTop) { top = y + padding - 14; left = x - rect.width * 0; }\r\n  else if (nearRight) { top = y - rect.height / 2; left = x - rect.width - padding - 24; }\r\n  else if (nearLeft) { top = y - rect.height / 2; left = x + padding - 4; }\r\n  else { top = y - rect.height / 1.6; left = x + padding - 2; }\r\n\r\n  left = Math.max(padding, Math.min(left, vw - rect.width - padding));\r\n  top  = Math.max(padding, Math.min(top,  vh - rect.height - padding));\r\n\r\n  tooltipEl.style.left = `${left}px`;\r\n  tooltipEl.style.top  = `${top}px`;\r\n}\r\n\r\nexport function initGlobalTooltip(isRealMobile: boolean) {\r\n  if (tooltipEl) return () => {};\r\n  tooltipEl = createTooltipDOM();\r\n\r\n  let lastMouseX = -1;\r\n  let lastMouseY = -1;\r\n  let ticking = false;\r\n  let scrollCheckTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  const updateForElement = async (el: Element | null) => {\r\n    if (!(el instanceof HTMLElement)) { hideTooltip(); return; }\r\n    const tooltipClass = [...el.classList].find(c => c.startsWith('tooltip-'));\r\n    if (!tooltipClass) { hideTooltip(); return; }\r\n\r\n    const key = tooltipClass.replace('tooltip-', '');\r\n    if (key !== currentKey) {\r\n      currentKey = key;\r\n      const info = await fetchTooltipDataForKey(key);\r\n\r\n      if (!info.tags.length) { hideTooltip(); return; }\r\n      tooltipEl!.innerHTML = info.tags.map(t => `<p class=\"tooltip-tag\">${t}</p>`).join('');\r\n      tooltipEl!.style.backgroundColor = info.backgroundColor;\r\n      showTooltip();\r\n    } else if (tooltipEl!.style.opacity === '0' || tooltipEl!.style.visibility === 'hidden') {\r\n      showTooltip();\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    lastMouseX = e.clientX;\r\n    lastMouseY = e.clientY;\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n    updateForElement(e.target as Element);\r\n  };\r\n\r\n  const checkHoveredElementOnScroll = () => {\r\n    const el = document.elementFromPoint(lastMouseX, lastMouseY);\r\n    updateForElement(el);\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => { checkHoveredElementOnScroll(); ticking = false; });\r\n      ticking = true;\r\n    }\r\n    if (scrollCheckTimeout) clearTimeout(scrollCheckTimeout);\r\n    scrollCheckTimeout = setTimeout(() => {}, 120);\r\n  };\r\n\r\n  const onMouseOut = (e: MouseEvent) => {\r\n    if (!e.relatedTarget) hideTooltip();\r\n  };\r\n\r\n  // only attach scroll observer for non-mobile real viewports\r\n  if (!isRealMobile) window.addEventListener('scroll', onScroll, true);\r\n  document.addEventListener('mousemove', onMouseMove, { passive: true });\r\n  document.addEventListener('mouseout', onMouseOut, { passive: true });\r\n\r\n  return () => {\r\n    if (!tooltipEl) return;\r\n    if (!isRealMobile) window.removeEventListener('scroll', onScroll, true);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseout', onMouseOut);\r\n    tooltipEl.remove();\r\n    tooltipEl = null;\r\n    if (hideTimeout) clearTimeout(hideTimeout);\r\n  };\r\n}","// utils/tooltip/tooltipInit.ts\r\nimport { useEffect } from 'react';\r\nimport { initGlobalTooltip } from './tooltip';\r\nimport { useRealMobileViewport } from '../content-utility/real-mobile';\r\n\r\nexport const useTooltipInit = () => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    const dispose = initGlobalTooltip(isRealMobile);\r\n    return () => dispose?.();\r\n  }, [isRealMobile]);\r\n};\r\n","// src/components/dataviz/DataVizEnhancer.tsx\r\nimport { useEffect } from 'react';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\n\r\nexport default function DataVizEnhancer() {\r\n  useTooltipInit();\r\n\r\n  useEffect(() => {\r\n    const vid = document.getElementById('dataviz-media-video') as HTMLVideoElement | null;\r\n    if (!vid) return;\r\n\r\n    const cleanupFns: Array<() => void> = [];\r\n\r\n    // 1) Upgrade poster to high-res if provided by SSR\r\n    const fullPoster = vid.dataset?.srcFull;\r\n    if (fullPoster && vid.poster !== fullPoster) {\r\n      vid.poster = fullPoster;\r\n    }\r\n\r\n    // 2) Load eagerly if needed\r\n    if (vid.readyState === 0) {\r\n      vid.preload = 'auto'; // can also use 'metadata' if lighter load desired\r\n      try { vid.load(); } catch {}\r\n    }\r\n\r\n    // 3) Hide poster after first painted frame\r\n    const hidePoster = () => {\r\n      vid.removeAttribute('poster');\r\n    };\r\n\r\n    const onPlay = () => {\r\n      const anyV = vid as any;\r\n      if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n        anyV.requestVideoFrameCallback(() => hidePoster());\r\n      } else {\r\n        const onTime = () => {\r\n          if (vid.currentTime > 0 && vid.readyState >= 2) {\r\n            vid.removeEventListener('timeupdate', onTime);\r\n            hidePoster();\r\n          }\r\n        };\r\n        vid.addEventListener('timeupdate', onTime, { once: true });\r\n        cleanupFns.push(() => vid.removeEventListener('timeupdate', onTime));\r\n\r\n        // Safety backstop\r\n        const timer = setTimeout(() => {\r\n          vid.removeEventListener('timeupdate', onTime);\r\n          hidePoster();\r\n        }, 1200);\r\n        cleanupFns.push(() => clearTimeout(timer));\r\n      }\r\n    };\r\n\r\n    vid.addEventListener('play', onPlay, { once: true });\r\n    cleanupFns.push(() => vid.removeEventListener('play', onPlay));\r\n\r\n    // 4) Try autoplay (muted/inline usually works)\r\n    vid.play().catch(() => {\r\n      // If blocked, poster will remain until user interacts\r\n    });\r\n\r\n    // 5) Optional: pause when tab hidden\r\n    const onVis = () => { if (document.hidden) vid.pause(); };\r\n    document.addEventListener('visibilitychange', onVis);\r\n    cleanupFns.push(() => document.removeEventListener('visibilitychange', onVis));\r\n\r\n    return () => cleanupFns.forEach(fn => fn());\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","// Master color config\r\nexport interface ProjectColor {\r\n  rgb: string;         // \"204, 85, 41\"\r\n  tooltipAlpha?: number;\r\n  defaultAlpha?: number;\r\n  darkThemeTop?: string; // optional override for theme-color\r\n}\r\n\r\nexport const projectColors: Record<string, ProjectColor> = {\r\n  'Rotary Lamp': {\r\n    rgb: '204, 85, 41',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(72, 161, 161, 1)'\r\n  },\r\n  'Ice Cream Scoop': {\r\n    rgb: '234, 103, 97',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(23, 27, 24, 1)'\r\n  },\r\n  'Data Visualization': {\r\n    rgb: '153, 199, 7',\r\n    tooltipAlpha: 0.8,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(28, 30, 31, 1)'\r\n  },\r\n  'Evade the Rock': {\r\n    rgb: '101, 86, 175',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgb(25, 25, 25)'\r\n  },\r\n  'Dynamic App': {\r\n    rgb: '120, 211, 255',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(17, 17, 17, 1)'\r\n  }\r\n};\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["tooltipDataCache","LOCAL_FALLBACK_TAGS","TITLE_BY_KEY","tooltipEl","currentKey","hideTimeout","showTooltip","clearTimeout","style","opacity","visibility","setTimeout","hideTooltip","positionTooltip","x","y","rect","getBoundingClientRect","vw","window","innerWidth","vh","innerHeight","nearTop","height","nearBottom","nearRight","width","nearLeft","left","top","Math","max","min","initGlobalTooltip","isRealMobile","el","document","createElement","id","position","pointerEvents","zIndex","backdropFilter","color","transition","className","getElementById","body","appendChild","createTooltipDOM","lastMouseX","lastMouseY","ticking","scrollCheckTimeout","updateForElement","async","HTMLElement","tooltipClass","classList","find","c","startsWith","key","replace","info","bg","colorInfo","projectColors","alpha","tooltipAlpha","rgb","bgForKey","tags","backgroundColor","client","default","res","fetch","fetchTooltipDataForKey","length","innerHTML","map","t","join","onMouseMove","e","clientX","clientY","requestAnimationFrame","target","onScroll","checkHoveredElementOnScroll","elementFromPoint","onMouseOut","relatedTarget","addEventListener","passive","removeEventListener","remove","useTooltipInit","useRealMobileViewport","useEffect","dispose","DataVizEnhancer","vid","cleanupFns","fullPoster","dataset","srcFull","poster","readyState","preload","load","hidePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","once","push","timer","play","catch","onVis","hidden","pause","forEach","fn","defaultAlpha","darkThemeTop","setIsRealMobile","useState","checkMobile","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid"],"sourceRoot":""}