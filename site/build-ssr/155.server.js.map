{"version":3,"file":"155.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/content-utility/lazy-view-mount.tsx","webpack://personal-site/./src/components/rock-escapade/useHighScoreSubscription.ts","webpack://personal-site/./src/components/rock-escapade/block-g-coin-counter.tsx","webpack://personal-site/./src/utils/content-utility/real-mobile.ts","webpack://personal-site/./src/components/rock-escapade/game-viewport-overlay.tsx","webpack://personal-site/./src/components/rock-escapade/block-g-exit.tsx","webpack://personal-site/./src/ssr/logic/game-input-guards.tsx","webpack://personal-site/./src/components/rock-escapade/block-g-game-over.tsx","webpack://personal-site/./src/ssr/logic/game-over-controller.tsx","webpack://personal-site/./src/components/rock-escapade/updateHighScore.ts","webpack://personal-site/./src/utils/loading/loading-hub.tsx"],"sourcesContent":["// src/utils/content-utility/lazy-view-mount.tsx\r\nimport { useEffect, useRef, useState, Suspense, type ComponentType, lazy } from 'react';\r\n\r\ntype MountMode = 'io' | 'idle' | 'immediate';\r\n\r\ntype Props = {\r\n  load: () => Promise<{ default: ComponentType<any> }>;\r\n  fallback?: React.ReactNode;\r\n\r\n  /** Mount strategy */\r\n  mountMode?: MountMode;            // 'io' | 'idle' | 'immediate' (default 'io')\r\n\r\n  /** IO config (only when mountMode === 'io') */\r\n  enterThreshold?: number;          // default 0.2   -> start showing at/after this ratio\r\n  exitThreshold?: number;           // default 0.05  -> consider out-of-view at/below\r\n  unmountDelayMs?: number;          // default 150ms -> delay before unmounting after exit\r\n  root?: Element | null;            // viewport by default\r\n  rootMargin?: string;              // default '0px'\r\n  observeTargetId?: string;         // observe specific element; else our own wrapper\r\n\r\n  /** Preloading */\r\n  preloadOnIdle?: boolean;          // default true\r\n  preloadIdleTimeout?: number;      // default 2000\r\n  preloadOnFirstIO?: boolean;       // default true\r\n\r\n  /** Layout/UX */\r\n  placeholderMinHeight?: number;    // default 360\r\n  fadeMs?: number;                  // default 300\r\n  fadeEasing?: string;              // default 'ease'\r\n\r\n  /** Forward child props */\r\n  componentProps?: Record<string, any>;\r\n};\r\n\r\nconst hasWindow = typeof window !== 'undefined';\r\nconst hasRIC = hasWindow && 'requestIdleCallback' in (window as any);\r\nconst hasCIC = hasWindow && 'cancelIdleCallback' in (window as any);\r\nconst ric = (cb: any, opts?: any) =>\r\n  hasRIC ? (window as any).requestIdleCallback(cb, opts) : setTimeout(cb, opts?.timeout ?? 0);\r\nconst cic = (id: any) =>\r\n  hasCIC ? (window as any).cancelIdleCallback(id) : clearTimeout(id);\r\n\r\nexport default function LazyViewMount({\r\n  load,\r\n  fallback = null,\r\n\r\n  // strategy\r\n  mountMode = 'io',\r\n\r\n  // IO\r\n  enterThreshold = 0.2,\r\n  exitThreshold = 0.05,\r\n  unmountDelayMs = 150,\r\n  root = null,\r\n  rootMargin = '0px',\r\n  observeTargetId,\r\n\r\n  // preload\r\n  preloadOnIdle = true,\r\n  preloadIdleTimeout = 2000,\r\n  preloadOnFirstIO = true,\r\n\r\n  // layout/UX\r\n  placeholderMinHeight = 360,\r\n  fadeMs = 300,\r\n  fadeEasing = 'ease',\r\n\r\n  componentProps,\r\n}: Props) {\r\n  const isServer = !hasWindow;\r\n\r\n  const selfRef = useRef<HTMLDivElement | null>(null);\r\n  const [Comp, setComp] = useState<ComponentType | null>(null);\r\n\r\n  // mount/visibility\r\n  const mountedRef = useRef(false);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // timers\r\n  const unmountTimer = useRef<number | null>(null);\r\n  const fadeTimer = useRef<number | null>(null);\r\n  const idleId = useRef<any>(null);\r\n\r\n  // preload promise cache\r\n  const preloadPromiseRef = useRef<Promise<{ default: ComponentType<any> }> | null>(null);\r\n\r\n  // IO edge tracking\r\n  const lastRatio = useRef<number>(0);\r\n  const lastIntersecting = useRef<boolean>(false);\r\n  const firstIOSeen = useRef(false);\r\n\r\n  /** Preload once */\r\n  const ensurePreloaded = () => {\r\n    if (!preloadPromiseRef.current) {\r\n      preloadPromiseRef.current = load();\r\n    }\r\n    return preloadPromiseRef.current;\r\n  };\r\n\r\n  const clearTimers = () => {\r\n    if (unmountTimer.current != null) { window.clearTimeout(unmountTimer.current); unmountTimer.current = null; }\r\n    if (fadeTimer.current != null)     { window.clearTimeout(fadeTimer.current);   fadeTimer.current = null; }\r\n  };\r\n\r\n  const mountNow = () => {\r\n    if (mountedRef.current) {\r\n      // already mounted; just ensure visible\r\n      setIsVisible(true);\r\n      return;\r\n    }\r\n    mountedRef.current = true;\r\n    const p = ensurePreloaded();\r\n    setComp(prev => prev ?? (lazy(() => p) as unknown as ComponentType));\r\n    setIsMounted(true);\r\n    // next frame -> allow CSS transition\r\n    requestAnimationFrame(() => setIsVisible(true));\r\n  };\r\n\r\n  const unmountSoon = () => {\r\n    if (!mountedRef.current) return;\r\n    clearTimers();\r\n    // fade out -> unmount\r\n    unmountTimer.current = window.setTimeout(() => {\r\n      setIsVisible(false);\r\n      fadeTimer.current = window.setTimeout(() => {\r\n        setIsMounted(false);\r\n        mountedRef.current = false;\r\n      }, fadeMs);\r\n    }, unmountDelayMs);\r\n  };\r\n\r\n  /** Preload on idle */\r\n  useEffect(() => {\r\n    if (isServer || !preloadOnIdle) return;\r\n    if (idleId.current) cic(idleId.current);\r\n    idleId.current = ric(() => { void ensurePreloaded(); }, { timeout: preloadIdleTimeout });\r\n    return () => { if (idleId.current) { cic(idleId.current); idleId.current = null; } };\r\n  }, [isServer, preloadOnIdle, preloadIdleTimeout, load]);\r\n\r\n  /** Mount behavior per mode */\r\n  useEffect(() => {\r\n    if (isServer) return;\r\n\r\n    if (mountMode === 'immediate') {\r\n      mountNow();\r\n      return;\r\n    }\r\n\r\n    if (mountMode === 'idle') {\r\n      const id = ric(() => mountNow(), { timeout: preloadIdleTimeout });\r\n      return () => { if (id) cic(id); };\r\n    }\r\n\r\n    // ---- IO MODE ----\r\n    const target =\r\n      (observeTargetId ? document.getElementById(observeTargetId) : null) ||\r\n      selfRef.current;\r\n\r\n    if (!target) return;\r\n\r\n    if (typeof IntersectionObserver === 'undefined') {\r\n      // no IO support -> just mount\r\n      mountNow();\r\n      return;\r\n    }\r\n\r\n    // ensure sensible thresholds (enter > exit)\r\n    const enter = Math.max(0, Math.min(1, enterThreshold));\r\n    const exit  = Math.max(0, Math.min(enter, exitThreshold)); // cap at enter\r\n    const thresholds = Array.from(new Set([0, exit, enter, 1])).sort((a, b) => a - b);\r\n\r\n    const io = new IntersectionObserver(([entry]) => {\r\n      const ratio = entry?.intersectionRatio ?? 0;\r\n      const intersecting = !!entry?.isIntersecting;\r\n\r\n      // first IO → optional preload\r\n      if (!firstIOSeen.current) {\r\n        firstIOSeen.current = true;\r\n        if (preloadOnFirstIO) void ensurePreloaded();\r\n      }\r\n\r\n      // Compute edge crossings (prevents jitter in the gray zone)\r\n      const crossedEnter = lastRatio.current < enter && ratio >= enter;\r\n      const crossedExit  = lastRatio.current > exit  && ratio <= exit;\r\n      const becameIntersecting = !lastIntersecting.current && intersecting;\r\n      const leftIntersecting   = lastIntersecting.current && !intersecting;\r\n\r\n      // ENTER: on intersection or crossing the enter threshold\r\n      if (becameIntersecting || crossedEnter) {\r\n        clearTimers();\r\n        mountNow();\r\n      }\r\n      // EXIT: when leaving intersection OR crossing exit threshold\r\n      else if (leftIntersecting || crossedExit) {\r\n        unmountSoon();\r\n      }\r\n\r\n      // save last values\r\n      lastRatio.current = ratio;\r\n      lastIntersecting.current = intersecting;\r\n    }, { root, rootMargin, threshold: thresholds });\r\n\r\n    io.observe(target);\r\n    return () => { io.disconnect(); clearTimers(); };\r\n  }, [\r\n    isServer,\r\n    mountMode,\r\n    root,\r\n    rootMargin,\r\n    enterThreshold,\r\n    exitThreshold,\r\n    observeTargetId,\r\n    preloadIdleTimeout,\r\n    preloadOnFirstIO,\r\n    fadeMs,\r\n    unmountDelayMs,\r\n  ]);\r\n\r\n  const CompAny = Comp as any;\r\n\r\n  return (\r\n    <div\r\n      ref={selfRef}\r\n      style={{ width: '100%', minHeight: placeholderMinHeight, position: 'relative' }}\r\n    >\r\n      {isMounted && CompAny ? (\r\n        <div\r\n          style={{\r\n            opacity: isVisible ? 1 : 0,                 // 1 in view, 0 out of view\r\n            transition: `opacity ${fadeMs}ms ${fadeEasing}`,\r\n            willChange: 'opacity',\r\n          }}\r\n        >\r\n          <Suspense fallback={fallback}>\r\n            <CompAny {...(componentProps || {})} />\r\n          </Suspense>\r\n        </div>\r\n      ) : (\r\n        fallback\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport client from '../../utils/sanity'\r\n\r\ntype Doc = { _id: string; score: number }\r\n\r\nconst QUERY = `*[_type == \"highScore\"] | order(score desc)[0]{ _id, score }`\r\n\r\nexport const useHighScoreSubscription = () => {\r\n  const [highScore, setHighScore] = useState<number>(0)\r\n\r\n  useEffect(() => {\r\n    // initial fetch\r\n    client.fetch<Doc | null>(QUERY).then((doc) => {\r\n      if (typeof doc?.score === 'number') setHighScore(doc.score)\r\n    })\r\n\r\n    // subscribe to live updates\r\n    const sub = client.listen(QUERY, {}, {includeResult: true, visibility: 'query'})\r\n      .subscribe((ev: any) => {\r\n        const next = ev?.result?.score\r\n        if (typeof next === 'number') setHighScore(next)\r\n      })\r\n\r\n    return () => sub.unsubscribe?.()\r\n  }, [])\r\n\r\n  return highScore\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport lottie, { type AnimationItem, type AnimationSegment } from 'lottie-web';\r\nimport coin from '../../svg/coin.json';\r\n\r\ninterface CoinCounterProps {\r\n  coins: number;\r\n  highScore: number;\r\n  newHighScore: boolean;\r\n}\r\n\r\nconst CoinCounter: React.FC<CoinCounterProps> = ({ coins, highScore, newHighScore }) => {\r\n  const coinRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!coinRef.current) return;\r\n\r\n    const anim: AnimationItem = lottie.loadAnimation({\r\n      container: coinRef.current,\r\n      renderer: 'svg',\r\n      loop: false,          // we'll loop manually with segments\r\n      autoplay: false,\r\n      animationData: coin,\r\n    });\r\n\r\n    const onDomLoaded = () => {\r\n      const svg = coinRef.current?.querySelector('svg');\r\n      if (svg) svg.classList.add('coin-lottie');\r\n\r\n      // start the loop once we know totalFrames\r\n      const total = anim.totalFrames;\r\n      const segment: AnimationSegment = [41, total - 1];\r\n\r\n      const loopOnce = () => anim.playSegments(segment, true);\r\n      const onComplete = () => loopOnce();\r\n\r\n      // kick it off and keep looping\r\n      loopOnce();\r\n      anim.addEventListener('complete', onComplete);\r\n\r\n      // store cleanup that knows this handler\r\n      cleanupHandlers.complete = () => anim.removeEventListener('complete', onComplete);\r\n    };\r\n\r\n    // attach, and keep a way to remove it on unmount\r\n    anim.addEventListener('DOMLoaded', onDomLoaded);\r\n\r\n    const cleanupHandlers: { complete?: () => void } = {};\r\n\r\n    return () => {\r\n      cleanupHandlers.complete?.();\r\n      anim.removeEventListener('DOMLoaded', onDomLoaded);\r\n      anim.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coin-counter\">\r\n      <div className=\"coin-count\">\r\n        <div className=\"coin2\" ref={coinRef} />\r\n        <h3 className=\"coin-amount\">{coins}</h3>\r\n      </div>\r\n      <h3\r\n        className=\"high-score\"\r\n        style={{ background: newHighScore ? '#f6c44b38' : '#514068bd' }}\r\n      >\r\n        {newHighScore ? 'New High Score: ' : 'High Score: '}\r\n        {highScore}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinCounter;\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","// src/components/rock-escapade/game-viewport-overlay.tsx\r\nimport React, { useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nconst APP_SCOPE_ID = 'efe-portfolio';\r\nconst PORTAL_ID = 'game-viewport-root';\r\n\r\nexport default function GameViewportOverlay({ children }: Props) {\r\n  const mountRef = useRef<HTMLElement | null>(null);\r\n\r\n  if (!mountRef.current && typeof document !== 'undefined') {\r\n    // 1) Find your app scope (so pre-scoped CSS matches)\r\n    const scope = document.getElementById(APP_SCOPE_ID) || document.body;\r\n\r\n    // 2) Create or reuse the portal root inside that scope\r\n    let root = scope.querySelector<HTMLElement>(`#${PORTAL_ID}`);\r\n    if (!root) {\r\n      root = document.createElement('div');\r\n      root.id = PORTAL_ID;\r\n      scope.appendChild(root);\r\n    }\r\n\r\n    mountRef.current = root;\r\n  }\r\n\r\n  if (!mountRef.current) return null;\r\n\r\n  // 3) Portal the in-game UI\r\n  return createPortal(\r\n    <div className=\"game-viewport-layer\" role=\"dialog\" aria-modal=\"true\">\r\n      {children}\r\n    </div>,\r\n    mountRef.current\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ExitButton = ({ onExit }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (onExit) onExit();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFadingOut) {\r\n      const timeout = setTimeout(() => {\r\n        setVisible(false);\r\n      }, 300); // Match CSS transition duration\r\n\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [isFadingOut]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"block-g-exit\"\r\n      onClick={handleClick}\r\n      style={{\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease'\r\n    }} ><h4> Exit </h4> </div>\r\n  );\r\n};\r\n\r\nexport default ExitButton;\r\n","// game-input-guards.tsx\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ntype Props = {\r\n  /** When true, guards are active */\r\n  active: boolean;\r\n  /** Hide body scroll while active (restores previous value on cleanup) */\r\n  lockBodyScroll?: boolean;\r\n  /** Also block wheel scrolling while active */\r\n  alsoBlockWheel?: boolean;\r\n  /** Also block touchmove scrolling while active */\r\n  alsoBlockTouch?: boolean;\r\n  /** Don’t block when typing in inputs/selects/textareas */\r\n  allowWhenTyping?: boolean;\r\n  /** Extra keyboard keys to block (in addition to scroll keys) */\r\n  extraKeysToBlock?: string[];\r\n};\r\n\r\nconst SCROLL_KEYS = new Set([\r\n  ' ', 'Spacebar',         // Space\r\n  'ArrowUp', 'ArrowDown',\r\n  'ArrowLeft', 'ArrowRight',\r\n  'PageUp', 'PageDown',\r\n  'Home', 'End',\r\n]);\r\n\r\nconst isFormField = (el: HTMLElement | null) => {\r\n  const tag = el?.tagName;\r\n  return !!tag && /^(INPUT|TEXTAREA|SELECT)$/.test(tag);\r\n};\r\n\r\nconst GameInputGuards: React.FC<Props> = ({\r\n  active,\r\n  lockBodyScroll = true,\r\n  alsoBlockWheel = true,\r\n  alsoBlockTouch = true,\r\n  allowWhenTyping = true,\r\n  extraKeysToBlock = [],\r\n}) => {\r\n  const prevOverflow = useRef<string | null>(null);\r\n  const prevOverscroll = useRef<string | null>(null);\r\n  const extra = new Set(extraKeysToBlock);\r\n\r\n  // Keyboard guard (block default scroll behavior)\r\n  useEffect(() => {\r\n    if (!active) return;\r\n\r\n    const onKey = (e: KeyboardEvent) => {\r\n      if (allowWhenTyping && isFormField(e.target as HTMLElement | null)) return;\r\n\r\n      const k = e.key;\r\n      if (SCROLL_KEYS.has(k) || extra.has(k)) {\r\n        // important: prevent default so page/scroll-controllers don’t react\r\n        e.preventDefault();\r\n        // do NOT stopPropagation, so the game can still read the event\r\n      }\r\n    };\r\n\r\n    // capture + passive:false to reliably intercept before site handlers\r\n    window.addEventListener('keydown', onKey, { capture: true, passive: false });\r\n    window.addEventListener('keypress', onKey as any, { capture: true, passive: false } as any);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', onKey as any, { capture: true } as any);\r\n      window.removeEventListener('keypress', onKey as any, { capture: true } as any);\r\n    };\r\n  }, [active, allowWhenTyping, extraKeysToBlock.join('|')]);\r\n\r\n  // Wheel / touch scroll guards\r\n  useEffect(() => {\r\n    if (!active) return;\r\n\r\n    const block = (e: Event) => { e.preventDefault(); };\r\n\r\n    if (alsoBlockWheel) window.addEventListener('wheel', block, { passive: false });\r\n    if (alsoBlockTouch) window.addEventListener('touchmove', block, { passive: false });\r\n\r\n    return () => {\r\n      if (alsoBlockWheel) window.removeEventListener('wheel', block as any);\r\n      if (alsoBlockTouch) window.removeEventListener('touchmove', block as any);\r\n    };\r\n  }, [active, alsoBlockWheel, alsoBlockTouch]);\r\n\r\n  // Body scroll lock (and overscroll containment to help iOS)\r\n  useEffect(() => {\r\n    if (!active || !lockBodyScroll) return;\r\n    const body = document.body;\r\n    prevOverflow.current = body.style.overflow;\r\n    prevOverscroll.current = (body.style as any).overscrollBehavior || null;\r\n\r\n    body.style.overflow = 'hidden';\r\n    (body.style as any).overscrollBehavior = 'contain';\r\n\r\n    return () => {\r\n      body.style.overflow = prevOverflow.current ?? '';\r\n      (body.style as any).overscrollBehavior = prevOverscroll.current ?? '';\r\n    };\r\n  }, [active, lockBodyScroll]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameInputGuards;\r\n","// src/components/rock-escapade/block-g-game-over.tsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport gameOver from '../../svg/gameover.json';\r\nimport highScore from '../../svg/highscore.json';\r\n\r\ntype Props = {\r\n  onRestart?: () => void;\r\n  visibleTrigger?: number | boolean;\r\n  coins: number;\r\n  newHighScore: boolean;\r\n};\r\n\r\nconst BlockGGameOver: React.FC<Props> = ({ onRestart, visibleTrigger, coins, newHighScore }) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const handleClick = () => {\r\n    onRestart?.();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  // fade-out -> unmount\r\n  useEffect(() => {\r\n    if (!isFadingOut) return;\r\n    const t = setTimeout(() => setVisible(false), 300);\r\n    return () => clearTimeout(t);\r\n  }, [isFadingOut]);\r\n\r\n  // external trigger to re-show\r\n  useEffect(() => {\r\n    if (visibleTrigger) {\r\n      setVisible(true);\r\n      setIsFadingOut(false);\r\n    }\r\n  }, [visibleTrigger]);\r\n\r\n  // disable background scroll while visible\r\n  useEffect(() => {\r\n    if (!visible) return;\r\n\r\n    const prevent = (e: Event) => e.preventDefault();\r\n\r\n    window.addEventListener('wheel', prevent, { passive: false });\r\n    window.addEventListener('touchmove', prevent, { passive: false });\r\n    window.addEventListener('keydown', prevent as any, { passive: false });\r\n\r\n    const prev = document.body.style.overflow;\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      window.removeEventListener('wheel', prevent as any);\r\n      window.removeEventListener('touchmove', prevent as any);\r\n      window.removeEventListener('keydown', prevent as any);\r\n      document.body.style.overflow = prev;\r\n    };\r\n  }, [visible]);\r\n\r\n  // lottie\r\n  useEffect(() => {\r\n    if (!lottieRef.current) return;\r\n    const anim = lottie.loadAnimation({\r\n      container: lottieRef.current,\r\n      renderer: 'svg',\r\n      loop: newHighScore ? true : false,\r\n      autoplay: true,\r\n      animationData: newHighScore ? highScore : gameOver,\r\n    });\r\n    return () => anim.destroy();\r\n  }, [newHighScore]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    // OPAQUE, FULL-SCREEN BACKDROP (covers canvas completely)\r\n    <div\r\n      className=\"gameover-overlay\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onClick={handleClick}\r\n      style={{\r\n        position: 'fixed',\r\n        inset: 0,\r\n        width: '100vw',\r\n        height: '100vh',              \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      {/* Keep your existing class for inner layout/typography */}\r\n      <div className=\"block-g-gameover\" style={{ position: 'relative' }}>\r\n        <div ref={lottieRef} className=\"gameover-lottie\" />\r\n        <div className=\"gameover-text-area\">\r\n          <h1\r\n            className=\"gameover-text\"\r\n            style={{ color: newHighScore ? 'rgb(255 230 203)' : 'rgb(222 202 250)' }}\r\n          >\r\n            {newHighScore ? 'New High Score!' : 'Game Over'}\r\n          </h1>\r\n          <div className=\"gameover-coin-count\">\r\n            <h2 style={{ color: 'rgb(255, 205, 55)' }}>{coins} Coins Collected</h2>\r\n          </div>\r\n\r\n          <h4 className=\"gameover-cta\">Click to Play Again</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockGGameOver;\r\n","// src/ssr/logic/game-over-controller.tsx\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport BlockGGameOver from '../../components/rock-escapade/block-g-game-over';\r\nimport { updateHighScore } from '../../components/rock-escapade/updateHighScore';\r\n\r\ntype Props = {\r\n  score: number | null;\r\n  highScore: number;\r\n  onRestart: () => void;\r\n  onHide: () => void;\r\n\r\n  /** Optional: latched \"new high\" flag from BlockGHost. */\r\n  newHighScore?: boolean;\r\n};\r\n\r\nconst GameOverController: React.FC<Props> = ({\r\n  score,\r\n  highScore,\r\n  onRestart,\r\n  onHide,\r\n  newHighScore,\r\n}) => {\r\n  const visible = score != null;\r\n\r\n  // Live comparison used only as a seed when host doesn't pass a latched flag.\r\n  const baseNewHigh = useMemo(\r\n    () => (score ?? -Infinity) > highScore,\r\n    [score, highScore]\r\n  );\r\n\r\n  // Latch for this overlay session when host doesn't provide one.\r\n  const [localLatch, setLocalLatch] = useState<boolean | null>(null);\r\n\r\n  // Reset latch when overlay hides; seed latch on first show (host flag absent).\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setLocalLatch(null);\r\n      return;\r\n    }\r\n    if (localLatch === null && typeof newHighScore !== 'boolean') {\r\n      setLocalLatch(baseNewHigh);\r\n    }\r\n  }, [visible, newHighScore, baseNewHigh, localLatch]);\r\n\r\n  // Final value we display/post: host-provided > local latch > base.\r\n  const effectiveNewHigh =\r\n    typeof newHighScore === 'boolean'\r\n      ? newHighScore\r\n      : (localLatch ?? baseNewHigh);\r\n\r\n  // Prevent duplicate Sanity writes per visible session.\r\n  const submittedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!visible || score == null) {\r\n      submittedRef.current = false;\r\n      return;\r\n    }\r\n    if (effectiveNewHigh && !submittedRef.current) {\r\n      submittedRef.current = true;\r\n      updateHighScore(score).catch((err) => console.error('[HS] update failed:', err));\r\n    }\r\n  }, [visible, score, effectiveNewHigh]);\r\n\r\n  if (!visible || score == null) return null;\r\n\r\n  const handleRestart = () => {\r\n    onRestart();\r\n    onHide();\r\n  };\r\n\r\n  return (\r\n    <BlockGGameOver\r\n      onRestart={handleRestart}\r\n      visibleTrigger={1}\r\n      coins={score}\r\n      newHighScore={effectiveNewHigh}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GameOverController;\r\n","export async function updateHighScore(score: number) {\r\n  try {\r\n    const res = await fetch('/api/highscore', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ score }),\r\n    });\r\n    if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n    const data = await res.json();\r\n    return data.highScore as number;\r\n  } catch (err) {\r\n    console.error('[HS] update failed:', err);\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport '../../styles/loading-hub.css';\r\n\r\ntype LoadingHubProps = {\r\n  keyword?: string;\r\n  lines?: string[];\r\n  minHeight?: number | string;\r\n  className?: string;\r\n  ariaLabel?: string;\r\n  progress?: number | null;\r\n  cycleMs?: number;\r\n  animMs?: number;\r\n  /** Delay before showing loader (ms) */\r\n  delayMs?: number;\r\n};\r\n\r\nexport default function LoadingHub({\r\n  keyword,\r\n  lines = ['Loading…'],\r\n  minHeight = 160,\r\n  className = '',\r\n  ariaLabel = 'Loading',\r\n  progress = null,\r\n  cycleMs = 1400,\r\n  animMs = 900,\r\n  delayMs = 400,\r\n}: LoadingHubProps) {\r\n  const [lineIndex, setLineIndex] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // --- delay before showing loader ---\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setShow(true), delayMs);\r\n    return () => clearTimeout(t);\r\n  }, [delayMs]);\r\n\r\n  // rotate through provided lines\r\n  const hasMultiple = lines.length > 1;\r\n  useEffect(() => {\r\n    if (!hasMultiple) return;\r\n    const t = setInterval(() => {\r\n      setLineIndex((i) => (i + 1) % lines.length);\r\n    }, cycleMs);\r\n    return () => clearInterval(t);\r\n  }, [hasMultiple, lines.length, cycleMs]);\r\n\r\n  // Avoid reflow: lock container height\r\n  const style = useMemo<React.CSSProperties>(() => {\r\n    const h = typeof minHeight === 'number' ? `${minHeight}px` : (minHeight ?? 'auto');\r\n    return { minHeight: h };\r\n  }, [minHeight]);\r\n\r\n  // SR-only progressive percent\r\n  const srRef = useRef<HTMLSpanElement>(null);\r\n  useEffect(() => {\r\n    if (progress == null || !srRef.current) return;\r\n    srRef.current.textContent = `${Math.round(progress)}%`;\r\n  }, [progress]);\r\n\r\n  if (!show) {\r\n    // render an invisible placeholder with locked height\r\n    return <div style={style} aria-hidden=\"true\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`loading-hub loading-hub--text ${className || ''}`}\r\n      style={style}\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n      aria-label={ariaLabel}\r\n      data-keyword={keyword || undefined}\r\n      data-anim-ms={animMs}\r\n    >\r\n      <div className=\"loading-hub__copy\" aria-hidden={false}>\r\n        <h2 key={lineIndex} className=\"loading-hub__line\">\r\n          {lines[lineIndex]}\r\n        </h2>\r\n\r\n        {progress != null && (\r\n          <div className=\"loading-hub__progress\" aria-hidden=\"true\">\r\n            {Math.round(progress)}%\r\n          </div>\r\n        )}\r\n\r\n        <span className=\"sr-only\" ref={srRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["hasWindow","window","hasRIC","hasCIC","ric","cb","opts","requestIdleCallback","setTimeout","timeout","cic","id","cancelIdleCallback","clearTimeout","LazyViewMount","load","fallback","mountMode","enterThreshold","exitThreshold","unmountDelayMs","root","rootMargin","observeTargetId","preloadOnIdle","preloadIdleTimeout","preloadOnFirstIO","placeholderMinHeight","fadeMs","fadeEasing","componentProps","isServer","selfRef","useRef","Comp","setComp","useState","mountedRef","isMounted","setIsMounted","isVisible","setIsVisible","unmountTimer","fadeTimer","idleId","preloadPromiseRef","lastRatio","lastIntersecting","firstIOSeen","ensurePreloaded","current","clearTimers","mountNow","p","prev","lazy","requestAnimationFrame","useEffect","target","document","getElementById","IntersectionObserver","enter","Math","max","min","exit","thresholds","Array","from","Set","sort","a","b","io","entry","ratio","intersectionRatio","intersecting","isIntersecting","crossedEnter","crossedExit","becameIntersecting","leftIntersecting","threshold","observe","disconnect","CompAny","_jsx","ref","style","width","minHeight","position","children","opacity","transition","willChange","Suspense","QUERY","useHighScoreSubscription","highScore","setHighScore","client","fetch","then","doc","score","sub","listen","includeResult","visibility","subscribe","ev","next","result","unsubscribe","CoinCounter","coins","newHighScore","coinRef","anim","lottie","container","renderer","loop","autoplay","animationData","coin","onDomLoaded","svg","querySelector","classList","add","segment","totalFrames","loopOnce","playSegments","onComplete","addEventListener","cleanupHandlers","complete","removeEventListener","destroy","_jsxs","className","background","useRealMobileViewport","isRealMobile","setIsRealMobile","checkMobile","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","APP_SCOPE_ID","PORTAL_ID","GameViewportOverlay","mountRef","scope","body","createElement","appendChild","createPortal","role","ExitButton","onExit","visible","setVisible","isFadingOut","setIsFadingOut","onClick","handleClick","SCROLL_KEYS","GameInputGuards","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","extraKeysToBlock","prevOverflow","prevOverscroll","extra","onKey","e","el","tag","tagName","isFormField","k","key","has","preventDefault","capture","passive","join","block","overflow","overscrollBehavior","BlockGGameOver","onRestart","visibleTrigger","lottieRef","t","prevent","gameOver","inset","height","display","alignItems","justifyContent","cursor","color","GameOverController","onHide","baseNewHigh","useMemo","localLatch","setLocalLatch","effectiveNewHigh","submittedRef","async","res","method","headers","JSON","stringify","ok","Error","status","json","err","console","error","updateHighScore","catch","handleRestart","LoadingHub","keyword","lines","ariaLabel","progress","cycleMs","animMs","delayMs","lineIndex","setLineIndex","show","setShow","hasMultiple","length","setInterval","i","clearInterval","srRef","textContent","round","undefined"],"sourceRoot":""}