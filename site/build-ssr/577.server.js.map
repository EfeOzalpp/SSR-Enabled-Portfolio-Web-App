{"version":3,"file":"577.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/tooltip/tooltip.ts","webpack://personal-site/./src/utils/tooltip/tooltipInit.ts","webpack://personal-site/./src/utils/split+drag/split-controller.tsx","webpack://personal-site/./src/ssr/logic/apply-split-style.ts","webpack://personal-site/./src/utils/content-utility/color-map.ts","webpack://personal-site/./src/utils/context-providers/project-context.tsx","webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["// utils/tooltip/global-tooltip.ts\r\nimport '../../styles/tooltip.css';\r\nimport { projectColors } from '../content-utility/color-map';\r\n\r\ntype TooltipInfo = { tags: string[]; backgroundColor: string };\r\nconst tooltipDataCache: Record<string, TooltipInfo> = {};\r\n\r\nconst LOCAL_FALLBACK_TAGS: Record<string, string[]> = {\r\n  'block-g': ['#q5.js Canvas', '#Gamification', '#Lottie Animation'],\r\n};\r\n\r\nconst TITLE_BY_KEY: Record<string, string> = {\r\n  'rotary-lamp': 'Rotary Lamp',\r\n  'ice-scoop': 'Ice Cream Scoop',\r\n  'data-viz': 'Data Visualization',\r\n  'block-g': 'Evade the Rock',\r\n  'dynamic': 'Dynamic App',\r\n};\r\n\r\nfunction bgForKey(key: string) {\r\n  const colorInfo = projectColors[TITLE_BY_KEY[key]];\r\n  const alpha = colorInfo?.tooltipAlpha ?? 0.6;\r\n  return colorInfo ? `rgba(${colorInfo.rgb}, ${alpha})` : 'rgba(85,95,90,0.6)';\r\n}\r\n\r\nfunction createTooltipDOM() {\r\n  const el = document.createElement('div');\r\n  el.id = 'custom-global-tooltip';\r\n  el.style.position = 'fixed';\r\n  el.style.pointerEvents = 'none';\r\n  el.style.zIndex = '9999';\r\n  el.style.opacity = '0';\r\n  el.style.visibility = 'hidden';\r\n  el.style.backdropFilter = 'blur(8px)';\r\n  el.style.color = '#fff';\r\n  el.style.transition = 'opacity 0.3s ease, visibility 0.3s ease';\r\n  el.className = 'custom-tooltip-blur';\r\n  const root = document.getElementById('efe-portfolio') || document.body;\r\n  root.appendChild(el);\r\n  return el as HTMLDivElement;\r\n}\r\n\r\nlet tooltipEl: HTMLDivElement | null = null;\r\nlet currentKey = '';\r\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const fetchTooltipDataForKey = async (key: string): Promise<TooltipInfo> => {\r\n  if (tooltipDataCache[key]) return tooltipDataCache[key];\r\n\r\n  const bg = bgForKey(key);\r\n\r\n  // local fallback\r\n  if (LOCAL_FALLBACK_TAGS[key]) {\r\n    const info = { tags: LOCAL_FALLBACK_TAGS[key], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n\r\n  // CMS fetch by slug\r\n  try {\r\n    const client = (await import('../sanity')).default;\r\n    const res = await client.fetch<{ tags?: string[] } | null>(\r\n      `*[_type==\"mediaBlock\" && slug.current == $key][0]{ tags }`,\r\n      { key }\r\n    );\r\n    const info: TooltipInfo = { tags: res?.tags ?? [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  } catch {\r\n    const info: TooltipInfo = { tags: [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n};\r\n\r\nconst showTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '1';\r\n  tooltipEl.style.visibility = 'visible';\r\n  hideTimeout = setTimeout(() => hideTooltip(), 1_500);\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '0';\r\n  tooltipEl.style.visibility = 'hidden';\r\n  currentKey = '';\r\n};\r\n\r\nfunction positionTooltip(x: number, y: number) {\r\n  if (!tooltipEl) return;\r\n  const rect = tooltipEl.getBoundingClientRect();\r\n  const padding = 0;\r\n  const vw = window.innerWidth;\r\n  const vh = window.innerHeight;\r\n\r\n  const nearTop = y < rect.height + padding + 20;\r\n  const nearBottom = y + rect.height + padding > vh - 20;\r\n  const nearRight = x + rect.width + padding > vw - 20;\r\n  const nearLeft = x < rect.width + padding + 20;\r\n\r\n  let left: number, top: number;\r\n  if (nearBottom) { top = y - rect.height - padding - 8; left = x - rect.width * 0; }\r\n  else if (nearTop) { top = y + padding - 14; left = x - rect.width * 0; }\r\n  else if (nearRight) { top = y - rect.height / 2; left = x - rect.width - padding - 24; }\r\n  else if (nearLeft) { top = y - rect.height / 2; left = x + padding - 4; }\r\n  else { top = y - rect.height / 1.6; left = x + padding - 2; }\r\n\r\n  left = Math.max(padding, Math.min(left, vw - rect.width - padding));\r\n  top  = Math.max(padding, Math.min(top,  vh - rect.height - padding));\r\n\r\n  tooltipEl.style.left = `${left}px`;\r\n  tooltipEl.style.top  = `${top}px`;\r\n}\r\n\r\nexport function initGlobalTooltip(isRealMobile: boolean) {\r\n  if (tooltipEl) return () => {};\r\n  tooltipEl = createTooltipDOM();\r\n\r\n  let lastMouseX = -1;\r\n  let lastMouseY = -1;\r\n  let ticking = false;\r\n  let scrollCheckTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  const updateForElement = async (el: Element | null) => {\r\n    if (!(el instanceof HTMLElement)) { hideTooltip(); return; }\r\n    const tooltipClass = [...el.classList].find(c => c.startsWith('tooltip-'));\r\n    if (!tooltipClass) { hideTooltip(); return; }\r\n\r\n    const key = tooltipClass.replace('tooltip-', '');\r\n    if (key !== currentKey) {\r\n      currentKey = key;\r\n      const info = await fetchTooltipDataForKey(key);\r\n\r\n      if (!info.tags.length) { hideTooltip(); return; }\r\n      tooltipEl!.innerHTML = info.tags.map(t => `<p class=\"tooltip-tag\">${t}</p>`).join('');\r\n      tooltipEl!.style.backgroundColor = info.backgroundColor;\r\n      showTooltip();\r\n    } else if (tooltipEl!.style.opacity === '0' || tooltipEl!.style.visibility === 'hidden') {\r\n      showTooltip();\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    lastMouseX = e.clientX;\r\n    lastMouseY = e.clientY;\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n    updateForElement(e.target as Element);\r\n  };\r\n\r\n  const checkHoveredElementOnScroll = () => {\r\n    const el = document.elementFromPoint(lastMouseX, lastMouseY);\r\n    updateForElement(el);\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => { checkHoveredElementOnScroll(); ticking = false; });\r\n      ticking = true;\r\n    }\r\n    if (scrollCheckTimeout) clearTimeout(scrollCheckTimeout);\r\n    scrollCheckTimeout = setTimeout(() => {}, 120);\r\n  };\r\n\r\n  const onMouseOut = (e: MouseEvent) => {\r\n    if (!e.relatedTarget) hideTooltip();\r\n  };\r\n\r\n  // only attach scroll observer for non-mobile real viewports\r\n  if (!isRealMobile) window.addEventListener('scroll', onScroll, true);\r\n  document.addEventListener('mousemove', onMouseMove, { passive: true });\r\n  document.addEventListener('mouseout', onMouseOut, { passive: true });\r\n\r\n  return () => {\r\n    if (!tooltipEl) return;\r\n    if (!isRealMobile) window.removeEventListener('scroll', onScroll, true);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseout', onMouseOut);\r\n    tooltipEl.remove();\r\n    tooltipEl = null;\r\n    if (hideTimeout) clearTimeout(hideTimeout);\r\n  };\r\n}","// utils/tooltip/tooltipInit.ts\r\nimport { useEffect } from 'react';\r\nimport { initGlobalTooltip } from './tooltip';\r\nimport { useRealMobileViewport } from '../content-utility/real-mobile';\r\n\r\nexport const useTooltipInit = () => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    const dispose = initGlobalTooltip(isRealMobile);\r\n    return () => dispose?.();\r\n  }, [isRealMobile]);\r\n};\r\n","// src/utils/title/split-drag-handler.tsx (or your original path)\r\nimport React, { useRef, useEffect, useLayoutEffect, useState } from 'react';\r\nimport lottie from '../../utils/load-lottie'; // <-- lazy proxy (SVG-only build if you configured it)\r\nimport { useProjectVisibility } from '../context-providers/project-context';\r\nimport arrowData2 from '../../svg/arrow2.json';\r\nimport {\r\n  applySplitStyle,\r\n  getPortraitMinSplit,\r\n} from '../../ssr/logic/apply-split-style';\r\n\r\ntype SplitDragHandlerProps = {\r\n  split: number;\r\n  setSplit: React.Dispatch<React.SetStateAction<number>>;\r\n  ids?: { m1: string; m2: string };\r\n  minPortraitSplit?: number;\r\n};\r\n\r\nconst FLOOR_EPS = 0.25;\r\nconst PULSE_LOW_OPACITY = 0.35;\r\nconst PULSE_FADE_MS = 1500;\r\nconst PULSE_HOLD_MS = 180;\r\nconst PULSE_COOLDOWN_MS = 700;\r\n\r\n// minimal Lottie shape we use\r\ntype AnimationItemLike = {\r\n  goToAndStop: (v: number, isFrame?: boolean) => void;\r\n  playSegments: (seg: [number, number] | number[], force?: boolean) => void;\r\n  addEventListener: (name: string, cb: () => void) => void;\r\n  removeEventListener: (name: string, cb: () => void) => void;\r\n  destroy: () => void;\r\n  // optional field used in a fallback\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [k: string]: any;\r\n};\r\n\r\nconst SplitDragHandler: React.FC<SplitDragHandlerProps> = ({\r\n  split,\r\n  setSplit,\r\n  ids,\r\n  minPortraitSplit,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const { setIsDragging } = useProjectVisibility();\r\n\r\n  const splitRef = useRef(split);\r\n  const isDraggingRef = useRef(false);\r\n  const isHoveringRef = useRef(false);\r\n\r\n  const arrowContainer = useRef<HTMLDivElement | null>(null);\r\n  const arrowAnimRef = useRef<AnimationItemLike | null>(null);\r\n\r\n  const [isPortrait, setIsPortrait] = useState(\r\n    typeof window !== 'undefined' ? window.innerHeight > window.innerWidth : false\r\n  );\r\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\r\n\r\n  const minRef = useRef<number>(\r\n    typeof minPortraitSplit === 'number'\r\n      ? minPortraitSplit\r\n      : getPortraitMinSplit(typeof window !== 'undefined' ? window.innerWidth : undefined)\r\n  );\r\n\r\n  const initialPinchDistance = useRef<number | null>(null);\r\n  const pinchTriggeredRef = useRef(false);\r\n  const pinchThreshold = 10;\r\n  const lastPulseAtRef = useRef(0);\r\n\r\n  const playSegment = (() => {\r\n    let lastCompleteHandler: ((this: any) => void) | null = null;\r\n    let currentSegment: [number, number] | null = null;\r\n\r\n    return (segment: [number, number], holdFrame: number) => {\r\n      const anim = arrowAnimRef.current;\r\n      if (!anim) return;\r\n\r\n      if (lastCompleteHandler) {\r\n        anim.removeEventListener('complete', lastCompleteHandler as any);\r\n        lastCompleteHandler = null;\r\n      }\r\n\r\n      currentSegment = segment;\r\n\r\n      const onComplete = () => {\r\n        anim.removeEventListener('complete', onComplete as any);\r\n        lastCompleteHandler = null;\r\n        const currentFrame = (anim as any).currentFrame ?? 0;\r\n        if (currentSegment && Math.abs(currentFrame - currentSegment[1]) <= 2) {\r\n          anim.goToAndStop(holdFrame, true);\r\n        }\r\n      };\r\n\r\n      lastCompleteHandler = onComplete;\r\n      anim.addEventListener('complete', onComplete as any);\r\n      anim.playSegments(segment, true);\r\n    };\r\n  })();\r\n\r\n  const pulseLottie = async () => {\r\n    const now = performance.now();\r\n    if (now - lastPulseAtRef.current < PULSE_COOLDOWN_MS) return;\r\n    lastPulseAtRef.current = now;\r\n\r\n    const node = arrowContainer.current;\r\n    if (!node) return;\r\n\r\n    const prevTransition = node.style.transition;\r\n    try {\r\n      node.style.transition = `opacity ${PULSE_FADE_MS}ms ease`;\r\n      node.style.opacity = `${PULSE_LOW_OPACITY}`;\r\n      await new Promise((r) => setTimeout(r, PULSE_FADE_MS + PULSE_HOLD_MS));\r\n      node.style.opacity = '1';\r\n      await new Promise((r) => setTimeout(r, PULSE_FADE_MS));\r\n    } finally {\r\n      node.style.opacity = '1';\r\n      node.style.transition = prevTransition;\r\n    }\r\n  };\r\n\r\n  // Initial apply (SSR ids only)\r\n  useLayoutEffect(() => {\r\n    if (!ids) return;\r\n    const portraitNow = window.innerHeight > window.innerWidth;\r\n    setIsPortrait(portraitNow);\r\n    minRef.current =\r\n      typeof minPortraitSplit === 'number'\r\n        ? minPortraitSplit\r\n        : getPortraitMinSplit(window.innerWidth);\r\n    applySplitStyle(splitRef.current, portraitNow, ids, minRef.current);\r\n  }, [ids, minPortraitSplit]);\r\n\r\n  // Resize/orientation listener\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const portraitNow = window.innerHeight > window.innerWidth;\r\n      setIsPortrait(portraitNow);\r\n      minRef.current =\r\n        typeof minPortraitSplit === 'number'\r\n          ? minPortraitSplit\r\n          : getPortraitMinSplit(window.innerWidth);\r\n      if (ids) applySplitStyle(splitRef.current, portraitNow, ids, minRef.current);\r\n    };\r\n    window.addEventListener('resize', handleResize, { passive: true });\r\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [ids, minPortraitSplit]);\r\n\r\n  // Sync DOM on split/orientation change\r\n  useEffect(() => {\r\n    splitRef.current = split;\r\n    if (ids) applySplitStyle(split, isPortrait, ids, minRef.current);\r\n  }, [split, isPortrait, ids]);\r\n\r\n  const handlePointerMove = (clientX: number, clientY: number) => {\r\n    if (!isDraggingRef.current) return;\r\n\r\n    const vw = window.innerWidth;\r\n    const vh = window.innerHeight;\r\n    const portraitNow = vh > vw;\r\n\r\n    const minPortrait =\r\n      typeof minPortraitSplit === 'number' ? minPortraitSplit : getPortraitMinSplit(vw);\r\n\r\n    let next = portraitNow ? (clientY / vh) * 100 : (clientX / vw) * 100;\r\n\r\n    if (portraitNow) {\r\n      const TOP = minPortrait;\r\n      const BOTTOM = 100 - minPortrait;\r\n      next = Math.max(TOP, Math.min(BOTTOM, next));\r\n\r\n      if (next <= TOP + FLOOR_EPS || next >= BOTTOM - FLOOR_EPS) {\r\n        pulseLottie();\r\n      }\r\n    } else {\r\n      next = Math.max(0, Math.min(100, next));\r\n    }\r\n\r\n    splitRef.current = next;\r\n    setSplit(next);\r\n    if (ids) applySplitStyle(next, portraitNow, ids, minPortrait);\r\n  };\r\n\r\n  const handleMouseMove = (e: MouseEvent) => handlePointerMove(e.clientX, e.clientY);\r\n  const handleTouchMove = (e: TouchEvent) => {\r\n    if (e.touches.length === 1 && isDraggingRef.current && !pinchTriggeredRef.current) {\r\n      e.preventDefault();\r\n      handlePointerMove(e.touches[0].clientX, e.touches[0].clientY);\r\n    } else if (e.touches.length === 2 && !isDraggingRef.current) {\r\n      const dx = e.touches[0].clientX - e.touches[1].clientX;\r\n      const dy = e.touches[0].clientY - e.touches[1].clientY;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (initialPinchDistance.current === null) {\r\n        initialPinchDistance.current = distance;\r\n      } else if (!pinchTriggeredRef.current) {\r\n        const diff = Math.abs(distance - initialPinchDistance.current);\r\n        if (diff > pinchThreshold) {\r\n          pinchTriggeredRef.current = true;\r\n          isDraggingRef.current = false;\r\n          setIsDragging(false);\r\n          splitRef.current = 50;\r\n          setSplit(50);\r\n          if (ids) applySplitStyle(50, isPortrait, ids, minRef.current);\r\n          initialPinchDistance.current = null;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const startDragging = (e: Event) => {\r\n    e.preventDefault();\r\n    isDraggingRef.current = true;\r\n    setIsDragging(true);\r\n\r\n    const anim = arrowAnimRef.current;\r\n    if (anim) {\r\n      if (isTouchDevice) anim.playSegments([0, 25], true);\r\n      else anim.goToAndStop(25, true);\r\n    }\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('mouseup', stopDragging);\r\n    window.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n    window.addEventListener('touchend', stopDragging);\r\n  };\r\n\r\n  const stopDragging = () => {\r\n    isDraggingRef.current = false;\r\n    setIsDragging(false);\r\n\r\n    const anim = arrowAnimRef.current;\r\n    if (anim) {\r\n      if (isTouchDevice) anim.playSegments([25, 75], true);\r\n      else if (isHoveringRef.current) anim.goToAndStop(25, true);\r\n      else anim.playSegments([25, 75], true);\r\n    }\r\n\r\n    window.removeEventListener('mousemove', handleMouseMove);\r\n    window.removeEventListener('mouseup', stopDragging);\r\n    window.removeEventListener('touchmove', handleTouchMove);\r\n    window.removeEventListener('touchend', stopDragging);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    isHoveringRef.current = true;\r\n    if (isDraggingRef.current) {\r\n      arrowAnimRef.current?.goToAndStop(25, true);\r\n      return;\r\n    }\r\n    playSegment([0, 25], 25);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    isHoveringRef.current = false;\r\n    if (isDraggingRef.current) {\r\n      arrowAnimRef.current?.goToAndStop(25, true);\r\n      return;\r\n    }\r\n    playSegment([25, 75], 75);\r\n  };\r\n\r\n  const handleTouchStart = (e: TouchEvent) => {\r\n    e.preventDefault();\r\n    startDragging(e as unknown as Event);\r\n  };\r\n\r\n  const handleTouchEnd = async (e: TouchEvent) => {\r\n    let endSplit = splitRef.current;\r\n    if (e.changedTouches.length === 1) {\r\n      const t = e.changedTouches[0];\r\n      const vw = window.innerWidth;\r\n      const vh = window.innerHeight;\r\n      const portraitNow = vh > vw;\r\n      endSplit = portraitNow ? (t.clientY / vh) * 100 : (t.clientX / vw) * 100;\r\n\r\n      const minPortrait =\r\n        typeof minPortraitSplit === 'number' ? minPortraitSplit : getPortraitMinSplit(vw);\r\n\r\n      if (portraitNow) {\r\n        const TOP = minPortrait;\r\n        const BOTTOM = 100 - minPortrait;\r\n        endSplit = Math.max(TOP, Math.min(BOTTOM, endSplit));\r\n      } else {\r\n        endSplit = Math.max(0, Math.min(100, endSplit));\r\n      }\r\n    }\r\n    stopDragging();\r\n\r\n    if (isPortrait) {\r\n      const minPortrait =\r\n        typeof minPortraitSplit === 'number'\r\n          ? minPortraitSplit\r\n          : getPortraitMinSplit(window.innerWidth);\r\n      const TOP = minPortrait;\r\n      const BOTTOM = 100 - minPortrait;\r\n      if (endSplit <= TOP + FLOOR_EPS || endSplit >= BOTTOM - FLOOR_EPS) {\r\n        await pulseLottie();\r\n        arrowAnimRef.current?.playSegments([25, 75], true);\r\n      }\r\n    }\r\n\r\n    initialPinchDistance.current = null;\r\n    pinchTriggeredRef.current = false;\r\n  };\r\n\r\n  // INIT LOTTIE (lazy) — await the instance\r\n  useEffect(() => {\r\n    let anim: AnimationItemLike | null = null;\r\n    let mounted = true;\r\n\r\n    (async () => {\r\n      const el = arrowContainer.current!;\r\n      anim = await lottie.loadAnimation({\r\n        container: el,\r\n        renderer: 'svg',\r\n        loop: false,\r\n        autoplay: false,\r\n        animationData: arrowData2,\r\n      });\r\n      if (!mounted || !anim) return;\r\n\r\n      arrowAnimRef.current = anim;\r\n\r\n      const container = containerRef.current;\r\n      if (container) container.style.opacity = '0';\r\n\r\n      const playInitial = () => {\r\n        anim!.goToAndStop(0, true);\r\n        setTimeout(() => anim!.playSegments([0, 75], true), 1200);\r\n        if (container) {\r\n          setTimeout(() => (container.style.opacity = '1'), 1200);\r\n        }\r\n        arrowContainer.current?.querySelector('svg')?.classList.add('drag-arrow');\r\n      };\r\n\r\n      anim.addEventListener('DOMLoaded', playInitial);\r\n      const fallback = setTimeout(() => {\r\n        if (!(anim as any).isLoaded) playInitial();\r\n      }, 2000);\r\n\r\n      // cleanup for this async init\r\n      return () => {\r\n        clearTimeout(fallback);\r\n        anim?.removeEventListener('DOMLoaded', playInitial);\r\n      };\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      arrowAnimRef.current?.destroy();\r\n      arrowAnimRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // Replay on in-view\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    const anim = arrowAnimRef.current;\r\n    if (!container || !anim) return;\r\n\r\n    let views = 0;\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting && views < 3) {\r\n            views += 1;\r\n            anim.goToAndStop(0, true);\r\n            setTimeout(() => anim.playSegments([0, 75], true), 200);\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.6 }\r\n    );\r\n    io.observe(container);\r\n    return () => io.disconnect();\r\n  }, []);\r\n\r\n  // Pointer / touch listeners\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    container.addEventListener('mouseenter', handleMouseEnter);\r\n    container.addEventListener('mouseleave', handleMouseLeave);\r\n    container.addEventListener('mousedown', startDragging as any);\r\n    container.addEventListener('touchstart', handleTouchStart as any, { passive: false });\r\n    container.addEventListener('touchend', handleTouchEnd as any, { passive: true });\r\n\r\n    return () => {\r\n      container.removeEventListener('mouseenter', handleMouseEnter);\r\n      container.removeEventListener('mouseleave', handleMouseLeave);\r\n      container.removeEventListener('mousedown', startDragging as any);\r\n      container.removeEventListener('touchstart', handleTouchStart as any);\r\n      container.removeEventListener('touchend', handleTouchEnd as any);\r\n      stopDragging();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"split-drag-handler\"\r\n      style={{\r\n        position: 'absolute',\r\n        ...(isPortrait\r\n          ? {\r\n              left: 0,\r\n              right: 0,\r\n              top: `${split}%`,\r\n              height: '5.4rem',\r\n              cursor: 'ns-resize',\r\n              transform: 'translateY(-50%)',\r\n            }\r\n          : {\r\n              top: 0,\r\n              bottom: 0,\r\n              left: `${split}%`,\r\n              width: '6.4rem',\r\n              cursor: 'ew-resize',\r\n              transform: 'translateX(-50%)',\r\n              height: 'calc(100% - 6em)',\r\n            }),\r\n        zIndex: 3000,\r\n        transition: isPortrait ? 'top 0s' : 'left 0s',\r\n        pointerEvents: 'all',\r\n        touchAction: isDraggingRef.current ? 'none' : 'auto',\r\n      }}\r\n    >\r\n      <div\r\n        ref={arrowContainer}\r\n        className=\"split-arrow\"\r\n        style={{\r\n          width: isPortrait ? '100%' : 'none',\r\n          height: isPortrait ? 'calc(100% - 4em)' : 'calc(100% + 3em)',\r\n          pointerEvents: 'none',\r\n          transform: isPortrait ? 'rotate(90deg)' : 'none',\r\n          transformOrigin: 'center center',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplitDragHandler;\r\n","// One place to control the portrait floor, with a special rule for 768–1024.\r\nexport const PORTRAIT_MIN_RULES: Array<{ maxWidth: number; value: number }> = [\r\n  { maxWidth: 767,  value: 16 }, // phones\r\n  { maxWidth: 1024, value: 12 }, // tablets (your 768–1024 window)\r\n  { maxWidth: Infinity, value: 20 }, // anything larger in portrait\r\n];\r\n\r\n// Legacy name kept so existing imports won't break.\r\n// It is only used as a default when no window width exists (very rare here).\r\nexport const MIN_PORTRAIT_SPLIT = 18;\r\n\r\n// Tiny hysteresis used inside this module for snap animations.\r\nconst EPS = 0.25;\r\n\r\n// Exported helper so client/non-SSR components can compute the same value.\r\nexport function getPortraitMinSplit(viewportWidth: number | null | undefined): number {\r\n  const vw = typeof viewportWidth === 'number' && isFinite(viewportWidth) ? viewportWidth : 1024;\r\n  for (const rule of PORTRAIT_MIN_RULES) {\r\n    if (vw <= rule.maxWidth) return rule.value;\r\n  }\r\n  return PORTRAIT_MIN_RULES[PORTRAIT_MIN_RULES.length - 1].value;\r\n}\r\n\r\n/**\r\n * Apply split to two absolutely-positioned media containers.\r\n * Back-compat signature; optional 4th param lets callers pin a min floor explicitly.\r\n */\r\nexport function applySplitStyle(\r\n  split: number,\r\n  isPortrait: boolean,\r\n  ids: { m1: string; m2: string },\r\n  explicitMinPortrait?: number\r\n) {\r\n  const media1 = document.getElementById(ids.m1) as HTMLElement | null;\r\n  const media2 = document.getElementById(ids.m2) as HTMLElement | null;\r\n  if (!media1 || !media2) return;\r\n\r\n  const sClamped = Math.max(0, Math.min(100, split));\r\n\r\n  media1.style.position = 'absolute';\r\n  media2.style.position = 'absolute';\r\n\r\n  if (isPortrait) {\r\n    const minPortrait =\r\n      typeof explicitMinPortrait === 'number'\r\n        ? explicitMinPortrait\r\n        : getPortraitMinSplit(typeof window !== 'undefined' ? window.innerWidth : undefined);\r\n\r\n    const TOP = minPortrait;\r\n    const BOTTOM = 100 - minPortrait;\r\n\r\n    // clamp into the rails so the handle can't hide completely\r\n    const s = Math.max(TOP, Math.min(BOTTOM, sClamped));\r\n\r\n    // common portrait rails\r\n    media1.style.left = '0';\r\n    media1.style.width = '100%';\r\n    media2.style.left = '0';\r\n    media2.style.width = '100%';\r\n    media1.style.top = '0';\r\n\r\n    if (s <= TOP + EPS) {\r\n      // collapse TOP\r\n      media1.style.height = '0%';\r\n      media1.style.transition = 'height 0.1s ease';\r\n\r\n      media2.style.top = '0%';\r\n      media2.style.height = '100%';\r\n      media2.style.transition = 'height 0.1s ease, top 0.1s ease';\r\n    } else if (s >= BOTTOM - EPS) {\r\n      // collapse BOTTOM\r\n      media1.style.height = '100%';\r\n      media1.style.transition = 'height 0.1s ease';\r\n\r\n      media2.style.top = '100%';\r\n      media2.style.height = '0%';\r\n      media2.style.transition = 'height 0.1s ease, top 0.1s ease';\r\n    } else {\r\n      // normal split\r\n      media1.style.height = `${s}%`;\r\n      media1.style.transition = 'none';\r\n\r\n      media2.style.top = `${s}%`;\r\n      media2.style.height = `${100 - s}%`;\r\n      media2.style.transition = 'none';\r\n    }\r\n  } else {\r\n    // landscape unchanged\r\n    media1.style.top = '0';\r\n    media1.style.height = '100%';\r\n    media2.style.top = '0';\r\n    media2.style.height = '100%';\r\n\r\n    media1.style.left = '0';\r\n    media1.style.width = `${sClamped}%`;\r\n\r\n    media2.style.left = `${sClamped}%`;\r\n    media2.style.width = `${100 - sClamped}%`;\r\n  }\r\n}\r\n","// Master color config\r\nexport interface ProjectColor {\r\n  rgb: string;         // \"204, 85, 41\"\r\n  tooltipAlpha?: number;\r\n  defaultAlpha?: number;\r\n  darkThemeTop?: string; // optional override for theme-color\r\n}\r\n\r\nexport const projectColors: Record<string, ProjectColor> = {\r\n  'Rotary Lamp': {\r\n    rgb: '204, 85, 41',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(72, 161, 161, 1)'\r\n  },\r\n  'Ice Cream Scoop': {\r\n    rgb: '234, 103, 97',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(23, 27, 24, 1)'\r\n  },\r\n  'Data Visualization': {\r\n    rgb: '153, 199, 7',\r\n    tooltipAlpha: 0.8,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(28, 30, 31, 1)'\r\n  },\r\n  'Evade the Rock': {\r\n    rgb: '101, 86, 175',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgb(25, 25, 25)'\r\n  },\r\n  'Dynamic App': {\r\n    rgb: '120, 211, 255',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(17, 17, 17, 1)'\r\n  }\r\n};\r\n","// src/utils/context-providers/project-context.tsx\r\nimport React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  ReactNode,\r\n} from 'react';\r\n\r\ntype ViewportAlignArgs = {\r\n  /** Prefer one of these to identify the block to align */\r\n  id?: string;              // e.g. 'block-game'\r\n  key?: string;             // e.g. 'game' -> resolves to #block-game in your aligner\r\n  el?: HTMLElement | null;  // direct element if you have it\r\n  /** Re-verify/re-apply on next rAF (helps on mobile Safari) */\r\n  retry?: boolean;\r\n};\r\n\r\ninterface ProjectVisibilityContextType {\r\n  activeProject?: string;\r\n  setActiveProject: (title: string) => void;\r\n\r\n  blockGClick: boolean;\r\n  setBlockGClick: (clicked: boolean) => void;\r\n\r\n  currentIndex: number;\r\n  setCurrentIndex: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  scrollContainerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  isDragging: boolean;\r\n  setIsDragging: React.Dispatch<React.SetStateAction<boolean>>;\r\n\r\n  focusedProjectKey: string | null;\r\n  setFocusedProjectKey: React.Dispatch<React.SetStateAction<string | null>>;\r\n\r\n  previousScrollY: number | null;\r\n  setPreviousScrollY: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  /** Ask ScrollController to instantly align a block to the top (no smooth, no bump) */\r\n  requestViewportAlign: (args: ViewportAlignArgs) => void;\r\n\r\n  /**\r\n   * Register the actual align function (implemented inside ScrollController).\r\n   * ScrollController should call this once on mount and clean up on unmount.\r\n   */\r\n  registerViewportAlign: (fn: (args: ViewportAlignArgs) => void) => void;\r\n}\r\n\r\ninterface ProjectVisibilityProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProjectVisibilityContext = createContext<ProjectVisibilityContextType | undefined>(undefined);\r\n\r\nexport const ProjectVisibilityProvider = ({ children }: ProjectVisibilityProviderProps) => {\r\n  const [activeProject, setActiveProject] = useState<string | undefined>(undefined);\r\n  const [blockGClick, setBlockGClick] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [focusedProjectKey, setFocusedProjectKey] = useState<string | null>(null);\r\n  const [previousScrollY, setPreviousScrollY] = useState<number | null>(null);\r\n\r\n  const scrollContainerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  // The ScrollController will register its implementation here.\r\n  const alignFnRef = useRef<(args: ViewportAlignArgs) => void>(() => { /* no-op by default */ });\r\n\r\n  const requestViewportAlign = React.useCallback((args: ViewportAlignArgs) => {\r\n    alignFnRef.current?.(args);\r\n  }, []);\r\n\r\n  const registerViewportAlign = React.useCallback((fn: (args: ViewportAlignArgs) => void) => {\r\n    alignFnRef.current = fn || (() => {});\r\n  }, []);\r\n\r\n  return (\r\n    <ProjectVisibilityContext.Provider\r\n      value={{\r\n        activeProject,\r\n        setActiveProject,\r\n        blockGClick,\r\n        setBlockGClick,\r\n        currentIndex,\r\n        setCurrentIndex,\r\n        scrollContainerRef,\r\n        isDragging,\r\n        setIsDragging,\r\n        focusedProjectKey,\r\n        setFocusedProjectKey,\r\n        previousScrollY,\r\n        setPreviousScrollY,\r\n        requestViewportAlign,\r\n        registerViewportAlign,\r\n      }}\r\n    >\r\n      {children}\r\n    </ProjectVisibilityContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectVisibility = () => {\r\n  const context = useContext(ProjectVisibilityContext);\r\n  if (!context) {\r\n    throw new Error('useProjectVisibility must be used within ProjectVisibilityProvider');\r\n  }\r\n  return context;\r\n};\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["tooltipDataCache","LOCAL_FALLBACK_TAGS","TITLE_BY_KEY","tooltipEl","currentKey","hideTimeout","showTooltip","clearTimeout","style","opacity","visibility","setTimeout","hideTooltip","positionTooltip","x","y","rect","getBoundingClientRect","vw","window","innerWidth","vh","innerHeight","nearTop","height","nearBottom","nearRight","width","nearLeft","left","top","Math","max","min","initGlobalTooltip","isRealMobile","el","document","createElement","id","position","pointerEvents","zIndex","backdropFilter","color","transition","className","getElementById","body","appendChild","createTooltipDOM","lastMouseX","lastMouseY","ticking","scrollCheckTimeout","updateForElement","async","HTMLElement","tooltipClass","classList","find","c","startsWith","key","replace","info","bg","colorInfo","projectColors","alpha","tooltipAlpha","rgb","bgForKey","tags","backgroundColor","client","default","res","fetch","fetchTooltipDataForKey","length","innerHTML","map","t","join","onMouseMove","e","clientX","clientY","requestAnimationFrame","target","onScroll","checkHoveredElementOnScroll","elementFromPoint","onMouseOut","relatedTarget","addEventListener","passive","removeEventListener","remove","useTooltipInit","useRealMobileViewport","useEffect","dispose","FLOOR_EPS","SplitDragHandler","split","setSplit","ids","minPortraitSplit","containerRef","useRef","setIsDragging","useProjectVisibility","splitRef","isDraggingRef","isHoveringRef","arrowContainer","arrowAnimRef","isPortrait","setIsPortrait","useState","isTouchDevice","setIsTouchDevice","minRef","getPortraitMinSplit","undefined","initialPinchDistance","pinchTriggeredRef","lastPulseAtRef","playSegment","lastCompleteHandler","currentSegment","segment","holdFrame","anim","current","onComplete","currentFrame","abs","goToAndStop","playSegments","pulseLottie","now","performance","node","prevTransition","Promise","r","PULSE_FADE_MS","useLayoutEffect","portraitNow","applySplitStyle","handleResize","navigator","maxTouchPoints","handlePointerMove","minPortrait","next","TOP","BOTTOM","handleMouseMove","handleTouchMove","touches","preventDefault","dx","dy","distance","sqrt","startDragging","stopDragging","handleMouseEnter","handleMouseLeave","handleTouchStart","handleTouchEnd","endSplit","changedTouches","mounted","lottie","loadAnimation","container","renderer","loop","autoplay","animationData","arrowData2","playInitial","querySelector","add","isLoaded","destroy","views","io","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","observe","disconnect","_jsx","ref","right","cursor","transform","bottom","touchAction","children","transformOrigin","PORTRAIT_MIN_RULES","maxWidth","value","Infinity","EPS","viewportWidth","isFinite","rule","explicitMinPortrait","media1","m1","media2","m2","sClamped","s","defaultAlpha","darkThemeTop","ProjectVisibilityContext","createContext","ProjectVisibilityProvider","activeProject","setActiveProject","blockGClick","setBlockGClick","currentIndex","setCurrentIndex","isDragging","focusedProjectKey","setFocusedProjectKey","previousScrollY","setPreviousScrollY","scrollContainerRef","alignFnRef","requestViewportAlign","React","args","registerViewportAlign","fn","Provider","context","useContext","Error","setIsRealMobile","checkMobile","touch","coarse","matchMedia","matches","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid"],"sourceRoot":""}