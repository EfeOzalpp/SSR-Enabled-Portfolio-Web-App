{"version":3,"file":"949.server.js","mappings":"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","sources":["webpack://personal-site/./src/ssr/projects/dynamic.enhancer.tsx","webpack://personal-site/./src/utils/content-utility/dynamic-overlay.ts","webpack://personal-site/./src/dynamic-app/preload-dynamic-app.ts","webpack://personal-site/./src/utils/content-utility/real-mobile.ts","webpack://personal-site/./src/utils/loading/loading-hub.tsx"],"sourcesContent":["// src/ssr/projects/dynamic.enhancer.tsx\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useDynamicOverlay } from '../../utils/content-utility/dynamic-overlay';\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\n// add: shared cache/dedupe + URL builder for LQ warm\r\nimport { ensureDynamicPreload } from '../../dynamic-app/preload-dynamic-app';\r\nimport { urlFor } from '../../utils/media-providers/image-builder';\r\n\r\ntype ShadowInboundProps = { onFocusChange?: (f: boolean) => void; onReady?: () => void };\r\ntype ShadowInboundType = React.ComponentType<ShadowInboundProps>;\r\n\r\nfunction scheduleIdle(cb: () => void, timeout = 2000): () => void {\r\n  const w = window as any;\r\n  if (typeof w.requestIdleCallback === 'function') {\r\n    const id = w.requestIdleCallback(cb, { timeout });\r\n    return () => w.cancelIdleCallback?.(id);\r\n  }\r\n  const t = window.setTimeout(cb, timeout);\r\n  return () => window.clearTimeout(t);\r\n}\r\n\r\n// ---- module-level dedupe so warm only runs once per page load\r\nlet warmedOnce = false;\r\nfunction warmDynamicLowQuality(maxUrls = 32) {\r\n  if (warmedOnce) return;\r\n  warmedOnce = true;\r\n\r\n  (async () => {\r\n    try {\r\n      const { images } = await ensureDynamicPreload(); // deduped at source\r\n      if (!Array.isArray(images) || images.length === 0) return;\r\n\r\n      // Collect LQ URLs for both image1 and image2, then cap\r\n      const urls: string[] = [];\r\n      for (const it of images) {\r\n        const s1 = it?.image1 ? urlFor(it.image1).width(320).quality(35).auto('format').url() : null;\r\n        const s2 = it?.image2 ? urlFor(it.image2).width(320).quality(35).auto('format').url() : null;\r\n        if (s1) urls.push(s1);\r\n        if (s2) urls.push(s2);\r\n        if (urls.length >= maxUrls) break;\r\n      }\r\n\r\n      const head = document.head;\r\n      const seen = new Set<string>();\r\n\r\n      for (const src of urls) {\r\n        if (!src || seen.has(src)) continue;\r\n        seen.add(src);\r\n\r\n        // <link rel=\"preload\" as=\"image\"> (avoid duplicates)\r\n        if (!document.querySelector(`link[rel=\"preload\"][as=\"image\"][href=\"${src}\"]`)) {\r\n          const link = document.createElement('link');\r\n          link.rel = 'preload';\r\n          link.as = 'image';\r\n          link.href = src;\r\n          link.crossOrigin = 'anonymous';\r\n          // TS-safe way to hint priority\r\n          link.setAttribute('fetchpriority', 'low');\r\n          head.appendChild(link);\r\n        }\r\n\r\n        // Kick actual network regardless of preload support\r\n        const img = new Image();\r\n        img.decoding = 'async';\r\n        img.crossOrigin = 'anonymous';\r\n        img.src = src;\r\n      }\r\n    } catch {\r\n      /* ignore warm errors */\r\n    }\r\n  })();\r\n}\r\n\r\nconst DynamicEnhancer: React.FC = () => {\r\n  // ----- find SSR nodes\r\n  const frameRef = useRef<HTMLElement | null>(null);\r\n  const [overlayEl, setOverlayEl] = useState<HTMLElement | null>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const img = document.getElementById('dynamic-device-frame') as HTMLElement | null;\r\n    frameRef.current = img;\r\n    const overlay = img?.closest('.device-wrapper')?.querySelector('.screen-overlay') as HTMLElement | null;\r\n    setOverlayEl(overlay ?? null);\r\n  }, []);\r\n\r\n  // ----- overlay sizing\r\n  const overlaySize = useDynamicOverlay(frameRef);\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    if (!overlayEl) return;\r\n    const isPhone = window.matchMedia('(max-width: 767.98px)').matches;\r\n\r\n    if (isPhone) {\r\n      overlayEl.style.width = `${overlaySize.width}px`;\r\n      overlayEl.style.height = isRealMobile\r\n        ? `${overlaySize.heightSet1}svh`\r\n        : `${overlaySize.heightSet2}px`;\r\n    } else {\r\n      overlayEl.style.removeProperty('width');\r\n      overlayEl.style.removeProperty('height');\r\n    }\r\n  }, [overlayEl, overlaySize.width, overlaySize.heightSet1, overlaySize.heightSet2, isRealMobile]);\r\n\r\n  // ----- prewarm low-quality images (SSR path needs this; client-only path will no-op thanks to warmedOnce)\r\n  useEffect(() => {\r\n    // Gate by visibility with idle fallback, same as mounting\r\n    const container = document.getElementById('block-dynamic');\r\n    let cancelIdle: (() => void) | null = null;\r\n    let io: IntersectionObserver | null = null;\r\n\r\n    const run = () => warmDynamicLowQuality(32);\r\n\r\n    if (!container || typeof IntersectionObserver === 'undefined') {\r\n      // No IO → just warm on idle\r\n      cancelIdle = scheduleIdle(run, 500);\r\n    } else {\r\n      io = new IntersectionObserver(\r\n        (entries) => {\r\n          if (entries[0]?.isIntersecting) {\r\n            run();\r\n            io?.disconnect();\r\n          }\r\n        },\r\n        { root: null, rootMargin: '600px 0px', threshold: 0 }\r\n      );\r\n      io.observe(container);\r\n      // backstop so we still warm if user never scrolls\r\n      cancelIdle = scheduleIdle(run, 1200);\r\n    }\r\n\r\n    return () => {\r\n      io?.disconnect();\r\n      cancelIdle?.();\r\n    };\r\n  }, []);\r\n\r\n  // ----- gate mounting of shadow app\r\n  const [shouldMountShadow, setShouldMountShadow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('block-dynamic');\r\n    if (!container) { setShouldMountShadow(true); return; }\r\n\r\n    const io = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.intersectionRatio >= 0.3) {\r\n          setShouldMountShadow(true);\r\n          io.disconnect();\r\n        }\r\n      },\r\n      { threshold: [0, 0.3] }\r\n    );\r\n    io.observe(container);\r\n\r\n    const cancel = scheduleIdle(() => setShouldMountShadow(true), 2000);\r\n    return () => { io.disconnect(); cancel(); };\r\n  }, []);\r\n\r\n  // ----- lazy import\r\n  const [ShadowInbound, setShadowInbound] = useState<ShadowInboundType | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!shouldMountShadow) return;\r\n    let alive = true;\r\n    import('../../dynamic-app/dynamic-app-shadow.jsx')\r\n      .then(m => { if (alive) setShadowInbound(() => m.default as ShadowInboundType); })\r\n      .catch(err => console.warn('[DynamicEnhancer] shadow import failed:', err));\r\n    return () => { alive = false; };\r\n  }, [shouldMountShadow]);\r\n\r\n  // ----- loader visibility\r\n  const [showLoader, setShowLoader] = useState(false); // start hidden until we begin mount\r\n  const watchdogRef = useRef<number | null>(null);\r\n\r\n  // when we start mounting, show loader (and arm watchdog)\r\n  useEffect(() => {\r\n    if (!shouldMountShadow) return;\r\n    setShowLoader(true);\r\n    if (watchdogRef.current) window.clearTimeout(watchdogRef.current);\r\n    watchdogRef.current = window.setTimeout(() => {\r\n      // fail-safe: hide after 8s even if onReady never fires\r\n      setShowLoader(false);\r\n      hideSsrSpinner();\r\n    }, 8000);\r\n    return () => {\r\n      if (watchdogRef.current) {\r\n        window.clearTimeout(watchdogRef.current);\r\n        watchdogRef.current = null;\r\n      }\r\n    };\r\n  }, [shouldMountShadow]);\r\n\r\n  // listen to global hydrated event (secondary path)\r\n  useEffect(() => {\r\n    const onHydrated = () => {\r\n      setShowLoader(false);\r\n      hideSsrSpinner();\r\n    };\r\n    window.addEventListener('dynamic-app:hydrated', onHydrated as EventListener);\r\n    return () => window.removeEventListener('dynamic-app:hydrated', onHydrated as EventListener);\r\n  }, []);\r\n\r\n  const hideSsrSpinner = () => {\r\n    const loader = document.getElementById('dynamic-overlay-loader');\r\n    if (loader) loader.style.display = 'none';\r\n  };\r\n\r\n  if (!overlayEl) return null;\r\n\r\n  const handleReady = () => {\r\n    setShowLoader(false);\r\n    hideSsrSpinner();\r\n    window.dispatchEvent(new CustomEvent('dynamic-app:hydrated'));\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      {showLoader && (\r\n        <div className=\"loading-hub-overlay\">\r\n          <LoadingHub\r\n            className=\"loading-hub--dynamic loading-hub--center\"\r\n            keyword=\"dynamic\"\r\n            lines={[\r\n              'Measuring app frame…',\r\n              'Creating shadow root…',\r\n              'Injecting app styles…',\r\n              'Loading SVG icons…',\r\n              'Mounting app shell…',\r\n              'Wiring observers and input…',\r\n            ]}\r\n            minHeight={72}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {ShadowInbound && shouldMountShadow && (\r\n        <ShadowInbound onFocusChange={() => {}} onReady={handleReady} />\r\n      )}\r\n    </>,\r\n    overlayEl\r\n  );\r\n};\r\n\r\nexport default DynamicEnhancer;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useDynamicOverlay(frameRef: React.RefObject<HTMLElement>) {\r\n  const [style, setStyle] = useState<{\r\n    width: number;\r\n    heightSet1: number;\r\n    heightSet2: number;\r\n  }>({\r\n    width: 0,\r\n    heightSet1: 0,\r\n    heightSet2: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const update = () => {\r\n      if (!frameRef.current) return;\r\n\r\n      const rect = frameRef.current.getBoundingClientRect();\r\n      const aspect = rect.width / rect.height;\r\n\r\n      // Aspect ratio breakpoints\r\n      const minAspect = 1.5 / 6.5; // ~0.2307\r\n      const maxAspect = 3.3 / 6.5; // ~0.5077\r\n\r\n      // Width range (shared)\r\n      const minWidth = 150;\r\n      const maxWidth = 320;\r\n\r\n      // Height range set 1 (your current svh-based values)\r\n      const minHeightSet1 = 63;\r\n      const maxHeightSet1 = 93;\r\n\r\n      // Height range set 2 (original px-based)\r\n      const minHeightSet2 = 280;\r\n      const maxHeightSet2 = 610;\r\n\r\n      // --- Aspect ratio-based lerp ---\r\n      let width: number;\r\n      let height1: number;\r\n      let height2: number;\r\n\r\n      if (aspect <= minAspect) {\r\n        width = minWidth;\r\n        height1 = minHeightSet1;\r\n        height2 = minHeightSet2;\r\n      } else if (aspect >= maxAspect) {\r\n        width = maxWidth;\r\n        height1 = maxHeightSet1;\r\n        height2 = maxHeightSet2;\r\n      } else {\r\n        const t = (aspect - minAspect) / (maxAspect - minAspect);\r\n        width = minWidth + (maxWidth - minWidth) * t;\r\n        height1 = minHeightSet1 + (maxHeightSet1 - minHeightSet1) * t;\r\n        height2 = minHeightSet2 + (maxHeightSet2 - minHeightSet2) * t;\r\n      }\r\n\r\n      // --- Absolute height multiplier (0 → 2 over 0–1300px) ---\r\n      const minFrameHeight = 0;\r\n      const maxFrameHeight = 1300;\r\n      const minMultiplier = 0;\r\n      const maxMultiplier = 2;\r\n\r\n      const clampedHeight = Math.min(Math.max(rect.height, minFrameHeight), maxFrameHeight);\r\n      const heightT = (clampedHeight - minFrameHeight) / (maxFrameHeight - minFrameHeight);\r\n      const heightMultiplier = minMultiplier + (maxMultiplier - minMultiplier) * heightT;\r\n\r\n      // Apply multiplier\r\n      width *= heightMultiplier;\r\n      height1 *= heightMultiplier;\r\n      height2 *= heightMultiplier;\r\n\r\n      setStyle({\r\n        width,\r\n        heightSet1: height1,\r\n        heightSet2: height2,\r\n      });\r\n    };\r\n\r\n    update();\r\n    window.addEventListener('resize', update);\r\n    window.addEventListener('orientationchange', update);\r\n    return () => {\r\n      window.removeEventListener('resize', update);\r\n      window.removeEventListener('orientationchange', update);\r\n    };\r\n  }, [frameRef]);\r\n\r\n  return style; // { width, heightSet1, heightSet2 }\r\n}\r\n","// src/dynamic-app/preload-dynamic-app.ts\r\nimport fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type Cache = { icons?: Record<string, string>; images?: any[] };\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: Cache = {};\r\nlet inFlight: Promise<Cache> | null = null;\r\n\r\nexport function getPreloadedDynamicApp(): Cache {\r\n  return cache;\r\n}\r\n\r\nexport function primeFromSSR(data?: Partial<Cache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return list.reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url; // inline SVG takes precedence; else URL\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\n/** Wait for current preloading (if any), then return cache */\r\nexport async function whenDynamicPreloadReady(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nexport async function ensureIconsPreload(): Promise<Record<string, string>> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown;\r\n  try {\r\n    iconsRaw = await fetchSVGIcons();\r\n  } catch {\r\n    iconsRaw = [];\r\n  }\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\nexport async function ensureImagesPreload(): Promise<any[]> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown;\r\n  try {\r\n    imagesRaw = await fetchImages();\r\n  } catch {\r\n    imagesRaw = [];\r\n  }\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return images;\r\n}\r\n\r\n/** Convenience: ensure both icons + images (with in-flight dedupe) */\r\nexport async function ensureDynamicPreload(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise.all([ensureIconsPreload(), ensureImagesPreload()])\r\n    .then(([icons, images]) => {\r\n      cache = { icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => {\r\n      inFlight = null;\r\n    });\r\n\r\n  return inFlight;\r\n}\r\n\r\n// Optional: hydrate from SSR\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_PRELOAD__?: Cache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_PRELOAD__) {\r\n  primeFromSSR((window as any).__DYNAMIC_PRELOAD__);\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport '../../styles/loading-hub.css';\r\n\r\ntype LoadingHubProps = {\r\n  keyword?: string;\r\n  lines?: string[];\r\n  minHeight?: number | string;\r\n  className?: string;\r\n  ariaLabel?: string;\r\n  progress?: number | null;\r\n  cycleMs?: number;\r\n  animMs?: number;\r\n  /** Delay before showing loader (ms) */\r\n  delayMs?: number;\r\n};\r\n\r\nexport default function LoadingHub({\r\n  keyword,\r\n  lines = ['Loading…'],\r\n  minHeight = 160,\r\n  className = '',\r\n  ariaLabel = 'Loading',\r\n  progress = null,\r\n  cycleMs = 1400,\r\n  animMs = 900,\r\n  delayMs = 400,\r\n}: LoadingHubProps) {\r\n  const [lineIndex, setLineIndex] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // --- delay before showing loader ---\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setShow(true), delayMs);\r\n    return () => clearTimeout(t);\r\n  }, [delayMs]);\r\n\r\n  // rotate through provided lines\r\n  const hasMultiple = lines.length > 1;\r\n  useEffect(() => {\r\n    if (!hasMultiple) return;\r\n    const t = setInterval(() => {\r\n      setLineIndex((i) => (i + 1) % lines.length);\r\n    }, cycleMs);\r\n    return () => clearInterval(t);\r\n  }, [hasMultiple, lines.length, cycleMs]);\r\n\r\n  // Avoid reflow: lock container height\r\n  const style = useMemo<React.CSSProperties>(() => {\r\n    const h = typeof minHeight === 'number' ? `${minHeight}px` : (minHeight ?? 'auto');\r\n    return { minHeight: h };\r\n  }, [minHeight]);\r\n\r\n  // SR-only progressive percent\r\n  const srRef = useRef<HTMLSpanElement>(null);\r\n  useEffect(() => {\r\n    if (progress == null || !srRef.current) return;\r\n    srRef.current.textContent = `${Math.round(progress)}%`;\r\n  }, [progress]);\r\n\r\n  if (!show) {\r\n    // render an invisible placeholder with locked height\r\n    return <div style={style} aria-hidden=\"true\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`loading-hub loading-hub--text ${className || ''}`}\r\n      style={style}\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n      aria-label={ariaLabel}\r\n      data-keyword={keyword || undefined}\r\n      data-anim-ms={animMs}\r\n    >\r\n      <div className=\"loading-hub__copy\" aria-hidden={false}>\r\n        <h2 key={lineIndex} className=\"loading-hub__line\">\r\n          {lines[lineIndex]}\r\n        </h2>\r\n\r\n        {progress != null && (\r\n          <div className=\"loading-hub__progress\" aria-hidden=\"true\">\r\n            {Math.round(progress)}%\r\n          </div>\r\n        )}\r\n\r\n        <span className=\"sr-only\" ref={srRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["scheduleIdle","cb","timeout","w","window","requestIdleCallback","id","cancelIdleCallback","t","setTimeout","clearTimeout","warmedOnce","DynamicEnhancer","frameRef","useRef","overlayEl","setOverlayEl","useState","useLayoutEffect","img","document","getElementById","current","overlay","closest","querySelector","overlaySize","useDynamicOverlay","isRealMobile","useRealMobileViewport","useEffect","matchMedia","matches","style","width","height","heightSet1","heightSet2","removeProperty","container","cancelIdle","io","run","maxUrls","images","ensureDynamicPreload","Array","isArray","length","urls","it","s1","image1","urlFor","quality","auto","url","s2","image2","push","head","seen","Set","src","has","add","link","createElement","rel","as","href","crossOrigin","setAttribute","appendChild","Image","decoding","warmDynamicLowQuality","IntersectionObserver","entries","isIntersecting","disconnect","root","rootMargin","threshold","observe","shouldMountShadow","setShouldMountShadow","entry","intersectionRatio","cancel","ShadowInbound","setShadowInbound","alive","then","m","default","catch","err","console","warn","showLoader","setShowLoader","watchdogRef","hideSsrSpinner","onHydrated","addEventListener","removeEventListener","loader","display","createPortal","_jsxs","_Fragment","children","_jsx","className","LoadingHub","keyword","lines","minHeight","onFocusChange","onReady","handleReady","dispatchEvent","CustomEvent","setStyle","update","rect","getBoundingClientRect","aspect","minAspect","height1","height2","heightMultiplier","Math","min","max","cache","inFlight","getPreloadedDynamicApp","async","whenDynamicPreloadReady","icons","ensureIconsPreload","iconsRaw","fetchSVGIcons","reduce","acc","title","val","icon","ensureImagesPreload","imagesRaw","fetchImages","Promise","all","finally","data","__DYNAMIC_PRELOAD__","setIsRealMobile","checkMobile","touch","navigator","maxTouchPoints","coarse","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","ariaLabel","progress","cycleMs","animMs","delayMs","lineIndex","setLineIndex","show","setShow","hasMultiple","setInterval","i","clearInterval","useMemo","srRef","textContent","round","role","undefined","ref"],"sourceRoot":""}