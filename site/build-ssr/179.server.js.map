{"version":3,"file":"179.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/tooltip/tooltip.ts","webpack://personal-site/./src/utils/tooltip/tooltipInit.ts","webpack://personal-site/./src/components/rock-escapade/block-g-onboarding.tsx","webpack://personal-site/./src/components/rock-escapade/block-g-host.tsx","webpack://personal-site/./src/utils/content-utility/color-map.ts","webpack://personal-site/./src/utils/context-providers/project-context.tsx"],"sourcesContent":["// utils/tooltip/global-tooltip.ts\r\nimport '../../styles/tooltip.css';\r\nimport { projectColors } from '../content-utility/color-map';\r\n\r\ntype TooltipInfo = { tags: string[]; backgroundColor: string };\r\nconst tooltipDataCache: Record<string, TooltipInfo> = {};\r\n\r\nconst LOCAL_FALLBACK_TAGS: Record<string, string[]> = {\r\n  'block-g': ['#q5.js Canvas', '#Gamification', '#Lottie Animation'],\r\n};\r\n\r\nconst TITLE_BY_KEY: Record<string, string> = {\r\n  'rotary-lamp': 'Rotary Lamp',\r\n  'ice-scoop': 'Ice Cream Scoop',\r\n  'data-viz': 'Data Visualization',\r\n  'block-g': 'Evade the Rock',\r\n  'dynamic': 'Dynamic App',\r\n};\r\n\r\nfunction bgForKey(key: string) {\r\n  const colorInfo = projectColors[TITLE_BY_KEY[key]];\r\n  const alpha = colorInfo?.tooltipAlpha ?? 0.6;\r\n  return colorInfo ? `rgba(${colorInfo.rgb}, ${alpha})` : 'rgba(85,95,90,0.6)';\r\n}\r\n\r\nfunction createTooltipDOM() {\r\n  const el = document.createElement('div');\r\n  el.id = 'custom-global-tooltip';\r\n  el.style.position = 'fixed';\r\n  el.style.pointerEvents = 'none';\r\n  el.style.zIndex = '9999';\r\n  el.style.opacity = '0';\r\n  el.style.visibility = 'hidden';\r\n  el.style.backdropFilter = 'blur(8px)';\r\n  el.style.color = '#fff';\r\n  el.style.transition = 'opacity 0.3s ease, visibility 0.3s ease';\r\n  el.className = 'custom-tooltip-blur';\r\n  const root = document.getElementById('efe-portfolio') || document.body;\r\n  root.appendChild(el);\r\n  return el as HTMLDivElement;\r\n}\r\n\r\nlet tooltipEl: HTMLDivElement | null = null;\r\nlet currentKey = '';\r\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const fetchTooltipDataForKey = async (key: string): Promise<TooltipInfo> => {\r\n  if (tooltipDataCache[key]) return tooltipDataCache[key];\r\n\r\n  const bg = bgForKey(key);\r\n\r\n  // local fallback\r\n  if (LOCAL_FALLBACK_TAGS[key]) {\r\n    const info = { tags: LOCAL_FALLBACK_TAGS[key], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n\r\n  // CMS fetch by slug\r\n  try {\r\n    const client = (await import('../sanity')).default;\r\n    const res = await client.fetch<{ tags?: string[] } | null>(\r\n      `*[_type==\"mediaBlock\" && slug.current == $key][0]{ tags }`,\r\n      { key }\r\n    );\r\n    const info: TooltipInfo = { tags: res?.tags ?? [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  } catch {\r\n    const info: TooltipInfo = { tags: [], backgroundColor: bg };\r\n    tooltipDataCache[key] = info;\r\n    return info;\r\n  }\r\n};\r\n\r\nconst showTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '1';\r\n  tooltipEl.style.visibility = 'visible';\r\n  hideTimeout = setTimeout(() => hideTooltip(), 1_500);\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  if (!tooltipEl) return;\r\n  if (hideTimeout) clearTimeout(hideTimeout);\r\n  tooltipEl.style.opacity = '0';\r\n  tooltipEl.style.visibility = 'hidden';\r\n  currentKey = '';\r\n};\r\n\r\nfunction positionTooltip(x: number, y: number) {\r\n  if (!tooltipEl) return;\r\n  const rect = tooltipEl.getBoundingClientRect();\r\n  const padding = 0;\r\n  const vw = window.innerWidth;\r\n  const vh = window.innerHeight;\r\n\r\n  const nearTop = y < rect.height + padding + 20;\r\n  const nearBottom = y + rect.height + padding > vh - 20;\r\n  const nearRight = x + rect.width + padding > vw - 20;\r\n  const nearLeft = x < rect.width + padding + 20;\r\n\r\n  let left: number, top: number;\r\n  if (nearBottom) { top = y - rect.height - padding - 8; left = x - rect.width * 0; }\r\n  else if (nearTop) { top = y + padding - 14; left = x - rect.width * 0; }\r\n  else if (nearRight) { top = y - rect.height / 2; left = x - rect.width - padding - 24; }\r\n  else if (nearLeft) { top = y - rect.height / 2; left = x + padding - 4; }\r\n  else { top = y - rect.height / 1.6; left = x + padding - 2; }\r\n\r\n  left = Math.max(padding, Math.min(left, vw - rect.width - padding));\r\n  top  = Math.max(padding, Math.min(top,  vh - rect.height - padding));\r\n\r\n  tooltipEl.style.left = `${left}px`;\r\n  tooltipEl.style.top  = `${top}px`;\r\n}\r\n\r\nexport function initGlobalTooltip(isRealMobile: boolean) {\r\n  if (tooltipEl) return () => {};\r\n  tooltipEl = createTooltipDOM();\r\n\r\n  let lastMouseX = -1;\r\n  let lastMouseY = -1;\r\n  let ticking = false;\r\n  let scrollCheckTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  const updateForElement = async (el: Element | null) => {\r\n    if (!(el instanceof HTMLElement)) { hideTooltip(); return; }\r\n    const tooltipClass = [...el.classList].find(c => c.startsWith('tooltip-'));\r\n    if (!tooltipClass) { hideTooltip(); return; }\r\n\r\n    const key = tooltipClass.replace('tooltip-', '');\r\n    if (key !== currentKey) {\r\n      currentKey = key;\r\n      const info = await fetchTooltipDataForKey(key);\r\n\r\n      if (!info.tags.length) { hideTooltip(); return; }\r\n      tooltipEl!.innerHTML = info.tags.map(t => `<p class=\"tooltip-tag\">${t}</p>`).join('');\r\n      tooltipEl!.style.backgroundColor = info.backgroundColor;\r\n      showTooltip();\r\n    } else if (tooltipEl!.style.opacity === '0' || tooltipEl!.style.visibility === 'hidden') {\r\n      showTooltip();\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    lastMouseX = e.clientX;\r\n    lastMouseY = e.clientY;\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n    updateForElement(e.target as Element);\r\n  };\r\n\r\n  const checkHoveredElementOnScroll = () => {\r\n    const el = document.elementFromPoint(lastMouseX, lastMouseY);\r\n    updateForElement(el);\r\n    requestAnimationFrame(() => positionTooltip(lastMouseX, lastMouseY));\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => { checkHoveredElementOnScroll(); ticking = false; });\r\n      ticking = true;\r\n    }\r\n    if (scrollCheckTimeout) clearTimeout(scrollCheckTimeout);\r\n    scrollCheckTimeout = setTimeout(() => {}, 120);\r\n  };\r\n\r\n  const onMouseOut = (e: MouseEvent) => {\r\n    if (!e.relatedTarget) hideTooltip();\r\n  };\r\n\r\n  // only attach scroll observer for non-mobile real viewports\r\n  if (!isRealMobile) window.addEventListener('scroll', onScroll, true);\r\n  document.addEventListener('mousemove', onMouseMove, { passive: true });\r\n  document.addEventListener('mouseout', onMouseOut, { passive: true });\r\n\r\n  return () => {\r\n    if (!tooltipEl) return;\r\n    if (!isRealMobile) window.removeEventListener('scroll', onScroll, true);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseout', onMouseOut);\r\n    tooltipEl.remove();\r\n    tooltipEl = null;\r\n    if (hideTimeout) clearTimeout(hideTimeout);\r\n  };\r\n}","// utils/tooltip/tooltipInit.ts\r\nimport { useEffect } from 'react';\r\nimport { initGlobalTooltip } from './tooltip';\r\nimport { useRealMobileViewport } from '../content-utility/real-mobile';\r\n\r\nexport const useTooltipInit = () => {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  useEffect(() => {\r\n    const dispose = initGlobalTooltip(isRealMobile);\r\n    return () => dispose?.();\r\n  }, [isRealMobile]);\r\n};\r\n","// src/components/rock-escapade/block-g-onboarding.tsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport onboardingAnimation from '../../svg/coin.json';\r\nimport { useProjectVisibility } from '../../utils/context-providers/project-context';\r\nimport { useTooltipInit } from '../../utils/tooltip/tooltipInit';\r\n\r\nimport LoadingHub from '../../utils/loading/loading-hub';\r\n\r\ntype Props = {\r\n  onStart?: () => void;\r\n  resetTrigger?: number;\r\n  label?: string;          // CTA label\r\n  ctaEnabled?: boolean;    // gate readiness (pointer events)\r\n  loadingLines?: string[];\r\n};\r\n\r\nconst BlockGOnboarding: React.FC<Props> = ({\r\n  onStart,\r\n  resetTrigger,\r\n  label = 'Click Here to Play!',\r\n  ctaEnabled = true,\r\n  loadingLines = [\r\n  \"Loading engine…\",\r\n  \"Creating game canvas…\",\r\n  \"Configuring frame loop…\",\r\n  \"Setting up input controls…\",\r\n  \"Applying display settings…\",\r\n  \"Initializing game state…\",\r\n  \"Spawning player…\",\r\n  \"Almost ready…\"\r\n  ],\r\n}) => {\r\n  const [visible, setVisible] = useState(true);\r\n  const [isFadingOut, setIsFadingOut] = useState(false);\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const lottieInstance = useRef<ReturnType<typeof lottie.loadAnimation> | null>(null);\r\n\r\n  useTooltipInit();\r\n  const {\r\n    focusedProjectKey,\r\n    scrollContainerRef,\r\n    previousScrollY,\r\n    setPreviousScrollY,\r\n  } = useProjectVisibility();\r\n\r\n  const handleClick = () => {\r\n    if (!ctaEnabled) return; // gate until ready\r\n    if (focusedProjectKey) {\r\n      setPreviousScrollY(window.scrollY);\r\n      setTimeout(() => {\r\n        if (scrollContainerRef.current) {\r\n          scrollContainerRef.current.scrollTo({ top: 0, behavior: 'auto' });\r\n        } else {\r\n          window.scrollTo({ top: 0, behavior: 'auto' });\r\n        }\r\n      }, 0);\r\n    }\r\n    onStart?.();\r\n    setIsFadingOut(true);\r\n  };\r\n\r\n  // Restore scroll pos on exit from focus mode\r\n  useEffect(() => {\r\n    // (kept from your version — omitted focusedProjectKey setter, just restore)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const initializeLottie = () => {\r\n    if (!lottieRef.current) return;\r\n    lottieInstance.current?.destroy();\r\n    lottieInstance.current = lottie.loadAnimation({\r\n      container: lottieRef.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: onboardingAnimation,\r\n    });\r\n    lottieInstance.current.addEventListener('complete', () => {\r\n      if (!lottieInstance.current) return;\r\n      lottieInstance.current.playSegments([41, lottieInstance.current.totalFrames], true);\r\n      lottieInstance.current.loop = true;\r\n    });\r\n  };\r\n\r\n  const destroyLottie = () => {\r\n    lottieInstance.current?.destroy();\r\n    lottieInstance.current = null;\r\n  };\r\n\r\n  // IO mount/unmount of the Lottie\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            initializeLottie();\r\n            if (lottieInstance.current) {\r\n              lottieInstance.current.stop();\r\n              lottieInstance.current.playSegments([0, lottieInstance.current.totalFrames], true);\r\n            }\r\n          } else {\r\n            destroyLottie();\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (containerRef.current) observer.observe(containerRef.current);\r\n    return () => {\r\n      observer.disconnect();\r\n      destroyLottie();\r\n    };\r\n  }, [resetTrigger]);\r\n\r\n  useEffect(() => {\r\n    if (isFadingOut) {\r\n      const t = setTimeout(() => setVisible(false), 300);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isFadingOut]);\r\n\r\n  useEffect(() => {\r\n    if (resetTrigger) {\r\n      setVisible(true);\r\n      setIsFadingOut(false);\r\n    }\r\n  }, [resetTrigger]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"block-g-onboarding tooltip-block-g\"\r\n      ref={containerRef}\r\n      aria-busy={!ctaEnabled}\r\n      style={{\r\n        opacity: isFadingOut ? 0 : 1,\r\n        transition: 'opacity 0.3s ease',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div\r\n        ref={lottieRef}\r\n        className=\"coin\"\r\n        onClick={handleClick}\r\n        style={{\r\n          pointerEvents: ctaEnabled ? 'auto' : 'none',\r\n          cursor: ctaEnabled ? 'pointer' : 'default',\r\n        }}\r\n      />\r\n\r\n      {/* Keep your CTA label exactly as before */}\r\n      <h1\r\n        className=\"onboarding-text\"\r\n        onClick={handleClick}\r\n        aria-disabled={!ctaEnabled}\r\n        style={{\r\n          pointerEvents: ctaEnabled ? 'auto' : 'none',\r\n          cursor: ctaEnabled ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {label}\r\n      </h1>\r\n\r\n      {!ctaEnabled && (\r\n        <LoadingHub\r\n          className=\"loading-hub--game loading-hub--left\"\r\n          keyword=\"game\"\r\n          minHeight={72}\r\n          lines={loadingLines}\r\n          ariaLabel=\"Loading game\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockGOnboarding;\r\n","// src/components/rock-escapade/block-g-host.tsx\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport lottie from '../../utils/load-lottie';\r\n\r\nimport BlockGOnboarding from './block-g-onboarding';\r\nimport CoinCounter from './block-g-coin-counter';\r\nimport ExitButton from './block-g-exit';\r\nimport GameOverController from '../../ssr/logic/game-over-controller';\r\n\r\nimport { useRealMobileViewport } from '../../utils/content-utility/real-mobile';\r\nimport desktopOnboarding from '../../svg/desktop-onboarding.json';\r\nimport mobileOnboarding from '../../svg/mobile-onboarding.json';\r\n\r\nimport LazyViewMount from '../../utils/content-utility/lazy-view-mount';\r\nimport { gameLoaders } from '../../utils/content-utility/component-loader';\r\nimport { useHighScoreSubscription } from './useHighScoreSubscription';\r\nimport GameInputGuards from '../../ssr/logic/game-input-guards';\r\n\r\nimport GameViewportOverlay from './game-viewport-overlay';\r\n\r\nimport '../../styles/block-type-g.css';\r\n\r\nconst GAME_MODE_CLASS = 'game-mode-active';\r\nfunction activateGameMode() {\r\n  if (typeof document !== 'undefined') document.body.classList.add(GAME_MODE_CLASS);\r\n}\r\nfunction deactivateGameMode() {\r\n  if (typeof document !== 'undefined') document.body.classList.remove(GAME_MODE_CLASS);\r\n}\r\n\r\nexport default function BlockGHost({ blockId }: { blockId: string }) {\r\n  const isRealMobile = useRealMobileViewport();\r\n\r\n  // lifecycle\r\n  const [started, setStarted] = useState(false);\r\n\r\n  // gate CTA until canvas reports ready (preloaded before start)\r\n  const [stageReady, setStageReady] = useState(false);\r\n\r\n  // HUD + meta\r\n  const [coins, setCoins] = useState(0);\r\n  const [countdownPhase, setCountdownPhase] = useState<null | 'lottie' | 'begin'>(null);\r\n  const [showBeginText, setShowBeginText] = useState(false);\r\n  const [showOverlayBg, setShowOverlayBg] = useState(false);\r\n  const [shouldRenderOverlayBg, setShouldRenderOverlayBg] = useState(false);\r\n\r\n  const lottieRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  // game-over (controls overlay)\r\n  const [finalScore, setFinalScore] = useState<number | null>(null);\r\n\r\n  // High score (remote)\r\n  const remoteHighScore = useHighScoreSubscription();\r\n  const stableHigh = typeof remoteHighScore === 'number' ? remoteHighScore : 0;\r\n\r\n  // API from GameCanvas\r\n  const restartApi = useRef<{ restart: () => void } | null>(null);\r\n\r\n  // Idle prewarm\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    const ric = window.requestIdleCallback as any;\r\n    let rid: number | null = null;\r\n    if (ric) rid = ric(() => void gameLoaders.game(), { timeout: 2000 });\r\n    return () => rid && (window as any).cancelIdleCallback?.(rid);\r\n  }, []);\r\n\r\n  const onStart = useCallback(async () => {\r\n    // Preload the chunk regardless\r\n    void gameLoaders.game();\r\n\r\n    // Reset state & show countdown\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    setCountdownPhase('lottie');\r\n\r\n    // Mount the overlay (portal) immediately — no native fullscreen\r\n    activateGameMode();\r\n    setStarted(true);\r\n\r\n    // Focus for keys/gamepad\r\n    requestAnimationFrame(() => {\r\n      const el = document.getElementById(blockId);\r\n      (el as HTMLElement | null)?.focus?.();\r\n    });\r\n  }, [blockId]);\r\n\r\n  // Lottie countdown (lazy)\r\n  useEffect(() => {\r\n    if (countdownPhase !== 'lottie' || !lottieRef.current) return;\r\n\r\n    let anim: any;\r\n    let mounted = true;\r\n\r\n    (async () => {\r\n      anim = await lottie.loadAnimation({\r\n        container: lottieRef.current!,\r\n        renderer: 'svg',\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: isRealMobile ? mobileOnboarding : desktopOnboarding,\r\n      });\r\n      if (!mounted || !anim) return;\r\n\r\n      const onComplete = () => setCountdownPhase('begin');\r\n      anim.addEventListener('complete', onComplete);\r\n\r\n      return () => anim?.removeEventListener?.('complete', onComplete);\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      anim?.destroy?.();\r\n    };\r\n  }, [countdownPhase, isRealMobile]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'begin') {\r\n      setShowBeginText(true);\r\n      const t = setTimeout(() => {\r\n        setShowBeginText(false);\r\n        setCountdownPhase(null);\r\n      }, 1000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  useEffect(() => {\r\n    if (countdownPhase === 'lottie') {\r\n      setShowOverlayBg(true);\r\n      setShouldRenderOverlayBg(true);\r\n    } else if (countdownPhase === null) {\r\n      setShowOverlayBg(false);\r\n      const t = setTimeout(() => setShouldRenderOverlayBg(false), 400);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [countdownPhase]);\r\n\r\n  // Canvas bridges\r\n  const handleReady = (api: { restart: () => void }) => {\r\n    restartApi.current = api;\r\n    setStageReady(true); // flips CTA from \"Loading…\" to \"Click Here to Play!\"\r\n  };\r\n\r\n  const handleCoinsChange = (n: number) => setCoins(n);\r\n  const handleGameOver = (finalCoins: number) => setFinalScore(finalCoins);\r\n  const handleRestart = () => {\r\n    setCountdownPhase(null);\r\n    restartApi.current?.restart();\r\n    setCoins(0);\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setStarted(false);\r\n    setCountdownPhase(null);\r\n    setCoins(0);\r\n    setFinalScore(null);\r\n    deactivateGameMode();\r\n  };\r\n  useEffect(() => () => deactivateGameMode(), []);\r\n\r\n  const displayHigh =\r\n    (finalScore == null ? coins : finalScore) > stableHigh\r\n      ? (finalScore == null ? coins : finalScore)\r\n      : stableHigh;\r\n  const beatingHighNow = finalScore == null && coins > stableHigh;\r\n\r\n  return (\r\n    <section\r\n      id={blockId}\r\n      tabIndex={-1}\r\n      className=\"block-type-g\"   // no 'ingame' / no 'fake-fs' — overlay handles viewport\r\n      style={{ position: 'relative' }}\r\n    >\r\n      {/* Guards (can live here or inside overlay). Keeping here is fine. */}\r\n      <GameInputGuards\r\n        active={started}\r\n        lockBodyScroll\r\n        alsoBlockWheel\r\n        alsoBlockTouch\r\n        allowWhenTyping\r\n      />\r\n\r\n      {/* Onboarding (shows until user starts). Stage readiness is driven by the preloader below. */}\r\n      {!started && (\r\n        <BlockGOnboarding\r\n          onStart={onStart}\r\n          resetTrigger={started ? 1 : 0}\r\n          label={stageReady ? 'Click Here to Play!' : 'Loading Game…'}\r\n          ctaEnabled={stageReady}\r\n        />\r\n      )}\r\n\r\n      {/* PRELOADER instance (flips stageReady) */}\r\n      {!started && (\r\n        <LazyViewMount\r\n          load={() => import('./game-canvas')}\r\n          fallback={null}\r\n          mountMode=\"io\"\r\n          observeTargetId={blockId}\r\n          rootMargin=\"0px\"\r\n          enterThreshold={0.2}\r\n          exitThreshold={0.05}\r\n          unmountDelayMs={150}\r\n          preloadOnIdle\r\n          preloadIdleTimeout={2000}\r\n          preloadOnFirstIO\r\n          placeholderMinHeight={360}\r\n          componentProps={{\r\n            onReady: handleReady,\r\n            onCoinsChange: () => {},\r\n            onGameOver: () => {},\r\n            highScore: stableHigh,\r\n            pauseWhenHidden: true,\r\n            demoMode: true,\r\n            overlayActive: false,\r\n            allowSpawns: true,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* GAME OVERLAY (PORTAL) */}\r\n      {started && (\r\n        <GameViewportOverlay>\r\n          <ExitButton onExit={handleExit} />\r\n          <CoinCounter coins={coins} highScore={displayHigh} newHighScore={beatingHighNow} />\r\n\r\n          {shouldRenderOverlayBg && (\r\n            <div className={`countdown-bg-overlay ${!showOverlayBg ? 'hide' : ''}`} style={{ pointerEvents: 'none' }} />\r\n          )}\r\n\r\n          {(countdownPhase === 'lottie' || countdownPhase === 'begin') && (\r\n            <div ref={lottieRef} id=\"lottie-onboarding\" className=\"countdown-lottie\" style={{ pointerEvents: 'none' }} />\r\n          )}\r\n\r\n          <GameOverController\r\n            score={finalScore}\r\n            highScore={stableHigh}\r\n            onRestart={handleRestart}\r\n            onHide={() => setFinalScore(null)}\r\n          />\r\n\r\n          {/* Actual gameplay instance (in the portal, pinned to viewport) */}\r\n          <LazyViewMount\r\n            load={() => import('./game-canvas')}\r\n            fallback={null}\r\n            mountMode=\"io\"\r\n            observeTargetId=\"game-viewport-root\"   // always visible\r\n            rootMargin=\"0px\"\r\n            enterThreshold={0.01}\r\n            exitThreshold={0.0}\r\n            unmountDelayMs={150}\r\n            preloadOnIdle\r\n            preloadIdleTimeout={2000}\r\n            preloadOnFirstIO\r\n            placeholderMinHeight={360}\r\n            componentProps={{\r\n              onReady: handleReady,\r\n              onCoinsChange: handleCoinsChange,\r\n              onGameOver: handleGameOver,\r\n              highScore: stableHigh,\r\n              pauseWhenHidden: true,\r\n              demoMode: false,\r\n              overlayActive: countdownPhase === 'lottie' || countdownPhase === 'begin',\r\n              allowSpawns: countdownPhase === 'begin' || countdownPhase === null,\r\n            }}\r\n          />\r\n        </GameViewportOverlay>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","// Master color config\r\nexport interface ProjectColor {\r\n  rgb: string;         // \"204, 85, 41\"\r\n  tooltipAlpha?: number;\r\n  defaultAlpha?: number;\r\n  darkThemeTop?: string; // optional override for theme-color\r\n}\r\n\r\nexport const projectColors: Record<string, ProjectColor> = {\r\n  'Rotary Lamp': {\r\n    rgb: '204, 85, 41',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(72, 161, 161, 1)'\r\n  },\r\n  'Ice Cream Scoop': {\r\n    rgb: '234, 103, 97',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(23, 27, 24, 1)'\r\n  },\r\n  'Data Visualization': {\r\n    rgb: '153, 199, 7',\r\n    tooltipAlpha: 0.8,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(28, 30, 31, 1)'\r\n  },\r\n  'Evade the Rock': {\r\n    rgb: '101, 86, 175',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgb(25, 25, 25)'\r\n  },\r\n  'Dynamic App': {\r\n    rgb: '120, 211, 255',\r\n    tooltipAlpha: 0.6,\r\n    defaultAlpha: 0.6,\r\n    darkThemeTop: 'rgba(17, 17, 17, 1)'\r\n  }\r\n};\r\n","// src/utils/context-providers/project-context.tsx\r\nimport React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  ReactNode,\r\n} from 'react';\r\n\r\ntype ViewportAlignArgs = {\r\n  /** Prefer one of these to identify the block to align */\r\n  id?: string;              // e.g. 'block-game'\r\n  key?: string;             // e.g. 'game' -> resolves to #block-game in your aligner\r\n  el?: HTMLElement | null;  // direct element if you have it\r\n  /** Re-verify/re-apply on next rAF (helps on mobile Safari) */\r\n  retry?: boolean;\r\n};\r\n\r\ninterface ProjectVisibilityContextType {\r\n  activeProject?: string;\r\n  setActiveProject: (title: string) => void;\r\n\r\n  blockGClick: boolean;\r\n  setBlockGClick: (clicked: boolean) => void;\r\n\r\n  currentIndex: number;\r\n  setCurrentIndex: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  scrollContainerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  isDragging: boolean;\r\n  setIsDragging: React.Dispatch<React.SetStateAction<boolean>>;\r\n\r\n  focusedProjectKey: string | null;\r\n  setFocusedProjectKey: React.Dispatch<React.SetStateAction<string | null>>;\r\n\r\n  previousScrollY: number | null;\r\n  setPreviousScrollY: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  /** Ask ScrollController to instantly align a block to the top (no smooth, no bump) */\r\n  requestViewportAlign: (args: ViewportAlignArgs) => void;\r\n\r\n  /**\r\n   * Register the actual align function (implemented inside ScrollController).\r\n   * ScrollController should call this once on mount and clean up on unmount.\r\n   */\r\n  registerViewportAlign: (fn: (args: ViewportAlignArgs) => void) => void;\r\n}\r\n\r\ninterface ProjectVisibilityProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProjectVisibilityContext = createContext<ProjectVisibilityContextType | undefined>(undefined);\r\n\r\nexport const ProjectVisibilityProvider = ({ children }: ProjectVisibilityProviderProps) => {\r\n  const [activeProject, setActiveProject] = useState<string | undefined>(undefined);\r\n  const [blockGClick, setBlockGClick] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [focusedProjectKey, setFocusedProjectKey] = useState<string | null>(null);\r\n  const [previousScrollY, setPreviousScrollY] = useState<number | null>(null);\r\n\r\n  const scrollContainerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  // The ScrollController will register its implementation here.\r\n  const alignFnRef = useRef<(args: ViewportAlignArgs) => void>(() => { /* no-op by default */ });\r\n\r\n  const requestViewportAlign = React.useCallback((args: ViewportAlignArgs) => {\r\n    alignFnRef.current?.(args);\r\n  }, []);\r\n\r\n  const registerViewportAlign = React.useCallback((fn: (args: ViewportAlignArgs) => void) => {\r\n    alignFnRef.current = fn || (() => {});\r\n  }, []);\r\n\r\n  return (\r\n    <ProjectVisibilityContext.Provider\r\n      value={{\r\n        activeProject,\r\n        setActiveProject,\r\n        blockGClick,\r\n        setBlockGClick,\r\n        currentIndex,\r\n        setCurrentIndex,\r\n        scrollContainerRef,\r\n        isDragging,\r\n        setIsDragging,\r\n        focusedProjectKey,\r\n        setFocusedProjectKey,\r\n        previousScrollY,\r\n        setPreviousScrollY,\r\n        requestViewportAlign,\r\n        registerViewportAlign,\r\n      }}\r\n    >\r\n      {children}\r\n    </ProjectVisibilityContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectVisibility = () => {\r\n  const context = useContext(ProjectVisibilityContext);\r\n  if (!context) {\r\n    throw new Error('useProjectVisibility must be used within ProjectVisibilityProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":["tooltipDataCache","LOCAL_FALLBACK_TAGS","TITLE_BY_KEY","tooltipEl","currentKey","hideTimeout","showTooltip","clearTimeout","style","opacity","visibility","setTimeout","hideTooltip","positionTooltip","x","y","rect","getBoundingClientRect","vw","window","innerWidth","vh","innerHeight","nearTop","height","nearBottom","nearRight","width","nearLeft","left","top","Math","max","min","initGlobalTooltip","isRealMobile","el","document","createElement","id","position","pointerEvents","zIndex","backdropFilter","color","transition","className","getElementById","body","appendChild","createTooltipDOM","lastMouseX","lastMouseY","ticking","scrollCheckTimeout","updateForElement","async","HTMLElement","tooltipClass","classList","find","c","startsWith","key","replace","info","bg","colorInfo","projectColors","alpha","tooltipAlpha","rgb","bgForKey","tags","backgroundColor","client","default","res","fetch","fetchTooltipDataForKey","length","innerHTML","map","t","join","onMouseMove","e","clientX","clientY","requestAnimationFrame","target","onScroll","checkHoveredElementOnScroll","elementFromPoint","onMouseOut","relatedTarget","addEventListener","passive","removeEventListener","remove","useTooltipInit","useRealMobileViewport","useEffect","dispose","BlockGOnboarding","onStart","resetTrigger","label","ctaEnabled","loadingLines","visible","setVisible","useState","isFadingOut","setIsFadingOut","lottieRef","useRef","containerRef","lottieInstance","focusedProjectKey","scrollContainerRef","previousScrollY","setPreviousScrollY","useProjectVisibility","handleClick","scrollY","current","scrollTo","behavior","destroyLottie","destroy","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lottie","container","renderer","loop","autoplay","animationData","onboardingAnimation","playSegments","totalFrames","stop","threshold","observe","disconnect","_jsxs","ref","display","alignItems","children","_jsx","onClick","cursor","LoadingHub","keyword","minHeight","lines","ariaLabel","GAME_MODE_CLASS","deactivateGameMode","BlockGHost","blockId","started","setStarted","stageReady","setStageReady","coins","setCoins","countdownPhase","setCountdownPhase","showBeginText","setShowBeginText","showOverlayBg","setShowOverlayBg","shouldRenderOverlayBg","setShouldRenderOverlayBg","finalScore","setFinalScore","remoteHighScore","useHighScoreSubscription","stableHigh","restartApi","ric","requestIdleCallback","rid","gameLoaders","game","timeout","cancelIdleCallback","useCallback","add","focus","anim","mounted","loadAnimation","mobileOnboarding","desktopOnboarding","onComplete","handleReady","api","displayHigh","beatingHighNow","tabIndex","GameInputGuards","active","lockBodyScroll","alsoBlockWheel","alsoBlockTouch","allowWhenTyping","LazyViewMount","load","fallback","mountMode","observeTargetId","rootMargin","enterThreshold","exitThreshold","unmountDelayMs","preloadOnIdle","preloadIdleTimeout","preloadOnFirstIO","placeholderMinHeight","componentProps","onReady","onCoinsChange","onGameOver","highScore","pauseWhenHidden","demoMode","overlayActive","allowSpawns","GameViewportOverlay","ExitButton","onExit","handleExit","CoinCounter","newHighScore","GameOverController","score","onRestart","handleRestart","restart","onHide","n","finalCoins","defaultAlpha","darkThemeTop","ProjectVisibilityContext","createContext","undefined","ProjectVisibilityProvider","activeProject","setActiveProject","blockGClick","setBlockGClick","currentIndex","setCurrentIndex","isDragging","setIsDragging","setFocusedProjectKey","alignFnRef","requestViewportAlign","React","args","registerViewportAlign","fn","Provider","value","context","useContext","Error"],"sourceRoot":""}